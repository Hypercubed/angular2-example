/* */ 
'use strict';
var di_1 = require('./metadata/di');
exports.QueryMetadata = di_1.QueryMetadata;
exports.ContentChildrenMetadata = di_1.ContentChildrenMetadata;
exports.ContentChildMetadata = di_1.ContentChildMetadata;
exports.ViewChildrenMetadata = di_1.ViewChildrenMetadata;
exports.ViewQueryMetadata = di_1.ViewQueryMetadata;
exports.ViewChildMetadata = di_1.ViewChildMetadata;
exports.AttributeMetadata = di_1.AttributeMetadata;
var directives_1 = require('./metadata/directives');
exports.ComponentMetadata = directives_1.ComponentMetadata;
exports.DirectiveMetadata = directives_1.DirectiveMetadata;
exports.PipeMetadata = directives_1.PipeMetadata;
exports.InputMetadata = directives_1.InputMetadata;
exports.OutputMetadata = directives_1.OutputMetadata;
exports.HostBindingMetadata = directives_1.HostBindingMetadata;
exports.HostListenerMetadata = directives_1.HostListenerMetadata;
var view_1 = require('./metadata/view');
exports.ViewMetadata = view_1.ViewMetadata;
exports.ViewEncapsulation = view_1.ViewEncapsulation;
var di_2 = require('./metadata/di');
var directives_2 = require('./metadata/directives');
var view_2 = require('./metadata/view');
var decorators_1 = require('./util/decorators');
exports.Component = decorators_1.makeDecorator(directives_2.ComponentMetadata, function(fn) {
  return fn.View = exports.View;
});
exports.Directive = decorators_1.makeDecorator(directives_2.DirectiveMetadata);
exports.View = decorators_1.makeDecorator(view_2.ViewMetadata, function(fn) {
  return fn.View = exports.View;
});
exports.Attribute = decorators_1.makeParamDecorator(di_2.AttributeMetadata);
exports.Query = decorators_1.makeParamDecorator(di_2.QueryMetadata);
exports.ContentChildren = decorators_1.makePropDecorator(di_2.ContentChildrenMetadata);
exports.ContentChild = decorators_1.makePropDecorator(di_2.ContentChildMetadata);
exports.ViewChildren = decorators_1.makePropDecorator(di_2.ViewChildrenMetadata);
exports.ViewChild = decorators_1.makePropDecorator(di_2.ViewChildMetadata);
exports.ViewQuery = decorators_1.makeParamDecorator(di_2.ViewQueryMetadata);
exports.Pipe = decorators_1.makeDecorator(directives_2.PipeMetadata);
exports.Input = decorators_1.makePropDecorator(directives_2.InputMetadata);
exports.Output = decorators_1.makePropDecorator(directives_2.OutputMetadata);
exports.HostBinding = decorators_1.makePropDecorator(directives_2.HostBindingMetadata);
exports.HostListener = decorators_1.makePropDecorator(directives_2.HostListenerMetadata);
