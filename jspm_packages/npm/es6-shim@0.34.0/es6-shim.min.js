/* */ 
"format cjs";
(function(process) {
  (function(e, t) {
    if (typeof define === "function" && define.amd) {
      define(t);
    } else if (typeof exports === "object") {
      module.exports = t();
    } else {
      e.returnExports = t();
    }
  })(this, function() {
    "use strict";
    var e = Function.call.bind(Function.apply);
    var t = Function.call.bind(Function.call);
    var r = Array.isArray;
    var n = function notThunker(t) {
      return function notThunk() {
        return !e(t, this, arguments);
      };
    };
    var o = function(e) {
      try {
        e();
        return false;
      } catch (t) {
        return true;
      }
    };
    var i = function valueOrFalseIfThrows(e) {
      try {
        return e();
      } catch (t) {
        return false;
      }
    };
    var a = n(o);
    var u = function() {
      return !o(function() {
        Object.defineProperty({}, "x", {get: function() {}});
      });
    };
    var s = !!Object.defineProperty && u();
    var f = function foo() {}.name === "foo";
    var c = Function.call.bind(Array.prototype.forEach);
    var l = Function.call.bind(Array.prototype.reduce);
    var p = Function.call.bind(Array.prototype.filter);
    var v = Function.call.bind(Array.prototype.some);
    var y = function(e, t, r, n) {
      if (!n && t in e) {
        return;
      }
      if (s) {
        Object.defineProperty(e, t, {
          configurable: true,
          enumerable: false,
          writable: true,
          value: r
        });
      } else {
        e[t] = r;
      }
    };
    var h = function(e, t, r) {
      c(Object.keys(t), function(n) {
        var o = t[n];
        y(e, n, o, !!r);
      });
    };
    var g = Function.call.bind(Object.prototype.toString);
    var b = function isCallable(e) {
      return typeof e === "function" && g(e) === "[object Function]";
    };
    var d = {
      getter: function(e, t, r) {
        if (!s) {
          throw new TypeError("getters require true ES5 support");
        }
        Object.defineProperty(e, t, {
          configurable: true,
          enumerable: false,
          get: r
        });
      },
      proxy: function(e, t, r) {
        if (!s) {
          throw new TypeError("getters require true ES5 support");
        }
        var n = Object.getOwnPropertyDescriptor(e, t);
        Object.defineProperty(r, t, {
          configurable: n.configurable,
          enumerable: n.enumerable,
          get: function getKey() {
            return e[t];
          },
          set: function setKey(r) {
            e[t] = r;
          }
        });
      },
      redefine: function(e, t, r) {
        if (s) {
          var n = Object.getOwnPropertyDescriptor(e, t);
          n.value = r;
          Object.defineProperty(e, t, n);
        } else {
          e[t] = r;
        }
      },
      defineByDescriptor: function(e, t, r) {
        if (s) {
          Object.defineProperty(e, t, r);
        } else if ("value" in r) {
          e[t] = r.value;
        }
      },
      preserveToString: function(e, t) {
        if (t && b(t.toString)) {
          y(e, "toString", t.toString.bind(t), true);
        }
      }
    };
    var m = Object.create || function(e, t) {
      var r = function Prototype() {};
      r.prototype = e;
      var n = new r;
      if (typeof t !== "undefined") {
        Object.keys(t).forEach(function(e) {
          d.defineByDescriptor(n, e, t[e]);
        });
      }
      return n;
    };
    var O = function(e, t) {
      if (!Object.setPrototypeOf) {
        return false;
      }
      return i(function() {
        var r = function Subclass(t) {
          var r = new e(t);
          Object.setPrototypeOf(r, Subclass.prototype);
          return r;
        };
        Object.setPrototypeOf(r, e);
        r.prototype = m(e.prototype, {constructor: {value: r}});
        return t(r);
      });
    };
    var w = function() {
      if (typeof self !== "undefined") {
        return self;
      }
      if (typeof window !== "undefined") {
        return window;
      }
      if (typeof global !== "undefined") {
        return global;
      }
      throw new Error("unable to locate global object");
    };
    var j = w();
    var S = j.isFinite;
    var T = Function.call.bind(String.prototype.indexOf);
    var I = Function.call.bind(Array.prototype.concat);
    var E = Function.call.bind(Array.prototype.sort);
    var M = Function.call.bind(String.prototype.slice);
    var P = Function.call.bind(Array.prototype.push);
    var C = Function.apply.bind(Array.prototype.push);
    var x = Function.call.bind(Array.prototype.shift);
    var N = Math.max;
    var A = Math.min;
    var R = Math.floor;
    var k = Math.abs;
    var _ = Math.log;
    var F = Math.sqrt;
    var D = Function.call.bind(Object.prototype.hasOwnProperty);
    var z;
    var L = function() {};
    var q = j.Symbol || {};
    var W = q.species || "@@species";
    var G = Number.isNaN || function isNaN(e) {
      return e !== e;
    };
    var B = Number.isFinite || function isFinite(e) {
      return typeof e === "number" && S(e);
    };
    var H = function isArguments(e) {
      return g(e) === "[object Arguments]";
    };
    var $ = function isArguments(e) {
      return e !== null && typeof e === "object" && typeof e.length === "number" && e.length >= 0 && g(e) !== "[object Array]" && g(e.callee) === "[object Function]";
    };
    var V = H(arguments) ? H : $;
    var J = {
      primitive: function(e) {
        return e === null || typeof e !== "function" && typeof e !== "object";
      },
      object: function(e) {
        return e !== null && typeof e === "object";
      },
      string: function(e) {
        return g(e) === "[object String]";
      },
      regex: function(e) {
        return g(e) === "[object RegExp]";
      },
      symbol: function(e) {
        return typeof j.Symbol === "function" && typeof e === "symbol";
      }
    };
    var K = function overrideNative(e, t, r) {
      var n = e[t];
      y(e, t, r, true);
      d.preserveToString(e[t], n);
    };
    var U = typeof q === "function" && typeof q["for"] === "function" && J.symbol(q());
    var X = J.symbol(q.iterator) ? q.iterator : "_es6-shim iterator_";
    if (j.Set && typeof(new j.Set)["@@iterator"] === "function") {
      X = "@@iterator";
    }
    if (!j.Reflect) {
      y(j, "Reflect", {});
    }
    var Z = j.Reflect;
    var Q = String;
    var Y = {
      Call: function Call(t, r) {
        var n = arguments.length > 2 ? arguments[2] : [];
        if (!Y.IsCallable(t)) {
          throw new TypeError(t + " is not a function");
        }
        return e(t, r, n);
      },
      RequireObjectCoercible: function(e, t) {
        if (e == null) {
          throw new TypeError(t || "Cannot call method on " + e);
        }
        return e;
      },
      TypeIsObject: function(e) {
        return e != null && Object(e) === e;
      },
      ToObject: function(e, t) {
        return Object(Y.RequireObjectCoercible(e, t));
      },
      IsCallable: b,
      IsConstructor: function(e) {
        return Y.IsCallable(e);
      },
      ToInt32: function(e) {
        return Y.ToNumber(e) >> 0;
      },
      ToUint32: function(e) {
        return Y.ToNumber(e) >>> 0;
      },
      ToNumber: function(e) {
        if (g(e) === "[object Symbol]") {
          throw new TypeError("Cannot convert a Symbol value to a number");
        }
        return +e;
      },
      ToInteger: function(e) {
        var t = Y.ToNumber(e);
        if (G(t)) {
          return 0;
        }
        if (t === 0 || !B(t)) {
          return t;
        }
        return (t > 0 ? 1 : -1) * R(k(t));
      },
      ToLength: function(e) {
        var t = Y.ToInteger(e);
        if (t <= 0) {
          return 0;
        }
        if (t > Number.MAX_SAFE_INTEGER) {
          return Number.MAX_SAFE_INTEGER;
        }
        return t;
      },
      SameValue: function(e, t) {
        if (e === t) {
          if (e === 0) {
            return 1 / e === 1 / t;
          }
          return true;
        }
        return G(e) && G(t);
      },
      SameValueZero: function(e, t) {
        return e === t || G(e) && G(t);
      },
      IsIterable: function(e) {
        return Y.TypeIsObject(e) && (typeof e[X] !== "undefined" || V(e));
      },
      GetIterator: function(e) {
        if (V(e)) {
          return new z(e, "value");
        }
        var t = Y.GetMethod(e, X);
        if (!Y.IsCallable(t)) {
          throw new TypeError("value is not an iterable");
        }
        var r = Y.Call(t, e);
        if (!Y.TypeIsObject(r)) {
          throw new TypeError("bad iterator");
        }
        return r;
      },
      GetMethod: function(e, t) {
        var r = Y.ToObject(e)[t];
        if (r === void 0 || r === null) {
          return void 0;
        }
        if (!Y.IsCallable(r)) {
          throw new TypeError("Method not callable: " + t);
        }
        return r;
      },
      IteratorComplete: function(e) {
        return !!e.done;
      },
      IteratorClose: function(e, t) {
        var r = Y.GetMethod(e, "return");
        if (r === void 0) {
          return;
        }
        var n,
            o;
        try {
          n = Y.Call(r, e);
        } catch (i) {
          o = i;
        }
        if (t) {
          return;
        }
        if (o) {
          throw o;
        }
        if (!Y.TypeIsObject(n)) {
          throw new TypeError("Iterator's return method returned a non-object.");
        }
      },
      IteratorNext: function(e) {
        var t = arguments.length > 1 ? e.next(arguments[1]) : e.next();
        if (!Y.TypeIsObject(t)) {
          throw new TypeError("bad iterator");
        }
        return t;
      },
      IteratorStep: function(e) {
        var t = Y.IteratorNext(e);
        var r = Y.IteratorComplete(t);
        return r ? false : t;
      },
      Construct: function(e, t, r, n) {
        var o = typeof r === "undefined" ? e : r;
        if (!n && Z.construct) {
          return Z.construct(e, t, o);
        }
        var i = o.prototype;
        if (!Y.TypeIsObject(i)) {
          i = Object.prototype;
        }
        var a = m(i);
        var u = Y.Call(e, a, t);
        return Y.TypeIsObject(u) ? u : a;
      },
      SpeciesConstructor: function(e, t) {
        var r = e.constructor;
        if (r === void 0) {
          return t;
        }
        if (!Y.TypeIsObject(r)) {
          throw new TypeError("Bad constructor");
        }
        var n = r[W];
        if (n === void 0 || n === null) {
          return t;
        }
        if (!Y.IsConstructor(n)) {
          throw new TypeError("Bad @@species");
        }
        return n;
      },
      CreateHTML: function(e, t, r, n) {
        var o = Y.ToString(e);
        var i = "<" + t;
        if (r !== "") {
          var a = Y.ToString(n);
          var u = a.replace(/"/g, "&quot;");
          i += " " + r + '="' + u + '"';
        }
        var s = i + ">";
        var f = s + o;
        return f + "</" + t + ">";
      },
      IsRegExp: function IsRegExp(e) {
        if (!Y.TypeIsObject(e)) {
          return false;
        }
        var t = e[q.match];
        if (typeof t !== "undefined") {
          return !!t;
        }
        return J.regex(e);
      },
      ToString: function ToString(e) {
        return Q(e);
      }
    };
    if (s && U) {
      var ee = function defineWellKnownSymbol(e) {
        if (J.symbol(q[e])) {
          return q[e];
        }
        var t = q["for"]("Symbol." + e);
        Object.defineProperty(q, e, {
          configurable: false,
          enumerable: false,
          writable: false,
          value: t
        });
        return t;
      };
      if (!J.symbol(q.search)) {
        var te = ee("search");
        var re = String.prototype.search;
        y(RegExp.prototype, te, function search(e) {
          return Y.Call(re, e, [Y.ToString(this)]);
        });
        var ne = function search(e) {
          var t = Y.RequireObjectCoercible(this);
          if (e !== null && typeof e !== "undefined") {
            var r = Y.GetMethod(e, te);
            if (typeof r !== "undefined") {
              return Y.Call(r, e, [t]);
            }
          }
          return Y.Call(re, t, [Y.ToString(e)]);
        };
        K(String.prototype, "search", ne);
      }
      if (!J.symbol(q.replace)) {
        var oe = ee("replace");
        var ie = String.prototype.replace;
        y(RegExp.prototype, oe, function replace(e, t) {
          return Y.Call(ie, e, [this, t]);
        });
        var ae = function replace(e, t) {
          var r = Y.RequireObjectCoercible(this);
          if (e !== null && typeof e !== "undefined") {
            var n = Y.GetMethod(e, oe);
            if (typeof n !== "undefined") {
              return Y.Call(n, e, [r, t]);
            }
          }
          return Y.Call(ie, r, [Y.ToString(e), t]);
        };
        K(String.prototype, "replace", ae);
      }
      if (!J.symbol(q.split)) {
        var ue = ee("split");
        var se = String.prototype.split;
        y(RegExp.prototype, ue, function split(e, t) {
          return Y.Call(se, e, [this, t]);
        });
        var fe = function split(e, t) {
          var r = Y.RequireObjectCoercible(this);
          if (e !== null && typeof e !== "undefined") {
            var n = Y.GetMethod(e, ue);
            if (typeof n !== "undefined") {
              return Y.Call(n, e, [r, t]);
            }
          }
          return Y.Call(se, r, [Y.ToString(e), t]);
        };
        K(String.prototype, "split", fe);
      }
      var ce = J.symbol(q.match);
      var le = ce && function() {
        var e = {};
        e[q.match] = function() {
          return 42;
        };
        return "a".match(e) !== 42;
      }();
      if (!ce || le) {
        var pe = ee("match");
        var ve = String.prototype.match;
        y(RegExp.prototype, pe, function match(e) {
          return Y.Call(ve, e, [this]);
        });
        var ye = function match(e) {
          var t = Y.RequireObjectCoercible(this);
          if (e !== null && typeof e !== "undefined") {
            var r = Y.GetMethod(e, pe);
            if (typeof r !== "undefined") {
              return Y.Call(r, e, [t]);
            }
          }
          return Y.Call(ve, t, [Y.ToString(e)]);
        };
        K(String.prototype, "match", ye);
      }
    }
    var he = function wrapConstructor(e, t, r) {
      d.preserveToString(t, e);
      if (Object.setPrototypeOf) {
        Object.setPrototypeOf(e, t);
      }
      if (s) {
        c(Object.getOwnPropertyNames(e), function(n) {
          if (n in L || r[n]) {
            return;
          }
          d.proxy(e, n, t);
        });
      } else {
        c(Object.keys(e), function(n) {
          if (n in L || r[n]) {
            return;
          }
          t[n] = e[n];
        });
      }
      t.prototype = e.prototype;
      d.redefine(e.prototype, "constructor", t);
    };
    var ge = function() {
      return this;
    };
    var be = function(e) {
      if (s && !D(e, W)) {
        d.getter(e, W, ge);
      }
    };
    var de = function(e, t) {
      var r = t || function iterator() {
        return this;
      };
      y(e, X, r);
      if (!e[X] && J.symbol(X)) {
        e[X] = r;
      }
    };
    var me = function createDataProperty(e, t, r) {
      if (s) {
        Object.defineProperty(e, t, {
          configurable: true,
          enumerable: true,
          writable: true,
          value: r
        });
      } else {
        e[t] = r;
      }
    };
    var Oe = function createDataPropertyOrThrow(e, t, r) {
      me(e, t, r);
      if (!Y.SameValue(e[t], r)) {
        throw new TypeError("property is nonconfigurable");
      }
    };
    var we = function(e, t, r, n) {
      if (!Y.TypeIsObject(e)) {
        throw new TypeError("Constructor requires `new`: " + t.name);
      }
      var o = t.prototype;
      if (!Y.TypeIsObject(o)) {
        o = r;
      }
      var i = m(o);
      for (var a in n) {
        if (D(n, a)) {
          var u = n[a];
          y(i, a, u, true);
        }
      }
      return i;
    };
    if (String.fromCodePoint && String.fromCodePoint.length !== 1) {
      var je = String.fromCodePoint;
      K(String, "fromCodePoint", function fromCodePoint(e) {
        return Y.Call(je, this, arguments);
      });
    }
    var Se = {
      fromCodePoint: function fromCodePoint(e) {
        var t = [];
        var r;
        for (var n = 0,
            o = arguments.length; n < o; n++) {
          r = Number(arguments[n]);
          if (!Y.SameValue(r, Y.ToInteger(r)) || r < 0 || r > 1114111) {
            throw new RangeError("Invalid code point " + r);
          }
          if (r < 65536) {
            P(t, String.fromCharCode(r));
          } else {
            r -= 65536;
            P(t, String.fromCharCode((r >> 10) + 55296));
            P(t, String.fromCharCode(r % 1024 + 56320));
          }
        }
        return t.join("");
      },
      raw: function raw(e) {
        var t = Y.ToObject(e, "bad callSite");
        var r = Y.ToObject(t.raw, "bad raw value");
        var n = r.length;
        var o = Y.ToLength(n);
        if (o <= 0) {
          return "";
        }
        var i = [];
        var a = 0;
        var u,
            s,
            f,
            c;
        while (a < o) {
          u = Y.ToString(a);
          f = Y.ToString(r[u]);
          P(i, f);
          if (a + 1 >= o) {
            break;
          }
          s = a + 1 < arguments.length ? arguments[a + 1] : "";
          c = Y.ToString(s);
          P(i, c);
          a += 1;
        }
        return i.join("");
      }
    };
    if (String.raw && String.raw({raw: {
        0: "x",
        1: "y",
        length: 2
      }}) !== "xy") {
      K(String, "raw", Se.raw);
    }
    h(String, Se);
    var Te = function repeat(e, t) {
      if (t < 1) {
        return "";
      }
      if (t % 2) {
        return repeat(e, t - 1) + e;
      }
      var r = repeat(e, t / 2);
      return r + r;
    };
    var Ie = Infinity;
    var Ee = {
      repeat: function repeat(e) {
        var t = Y.ToString(Y.RequireObjectCoercible(this));
        var r = Y.ToInteger(e);
        if (r < 0 || r >= Ie) {
          throw new RangeError("repeat count must be less than infinity and not overflow maximum string size");
        }
        return Te(t, r);
      },
      startsWith: function startsWith(e) {
        var t = Y.ToString(Y.RequireObjectCoercible(this));
        if (Y.IsRegExp(e)) {
          throw new TypeError('Cannot call method "startsWith" with a regex');
        }
        var r = Y.ToString(e);
        var n = arguments.length > 1 ? arguments[1] : void 0;
        var o = N(Y.ToInteger(n), 0);
        return M(t, o, o + r.length) === r;
      },
      endsWith: function endsWith(e) {
        var t = Y.ToString(Y.RequireObjectCoercible(this));
        if (Y.IsRegExp(e)) {
          throw new TypeError('Cannot call method "endsWith" with a regex');
        }
        var r = Y.ToString(e);
        var n = t.length;
        var o = arguments.length > 1 ? arguments[1] : void 0;
        var i = typeof o === "undefined" ? n : Y.ToInteger(o);
        var a = A(N(i, 0), n);
        return M(t, a - r.length, a) === r;
      },
      includes: function includes(e) {
        if (Y.IsRegExp(e)) {
          throw new TypeError('"includes" does not accept a RegExp');
        }
        var t = Y.ToString(e);
        var r;
        if (arguments.length > 1) {
          r = arguments[1];
        }
        return T(this, t, r) !== -1;
      },
      codePointAt: function codePointAt(e) {
        var t = Y.ToString(Y.RequireObjectCoercible(this));
        var r = Y.ToInteger(e);
        var n = t.length;
        if (r >= 0 && r < n) {
          var o = t.charCodeAt(r);
          var i = r + 1 === n;
          if (o < 55296 || o > 56319 || i) {
            return o;
          }
          var a = t.charCodeAt(r + 1);
          if (a < 56320 || a > 57343) {
            return o;
          }
          return (o - 55296) * 1024 + (a - 56320) + 65536;
        }
      }
    };
    if (String.prototype.includes && "a".includes("a", Infinity) !== false) {
      K(String.prototype, "includes", Ee.includes);
    }
    if (String.prototype.startsWith && String.prototype.endsWith) {
      var Me = o(function() {
        "/a/".startsWith(/a/);
      });
      var Pe = "abc".startsWith("a", Infinity) === false;
      if (!Me || !Pe) {
        K(String.prototype, "startsWith", Ee.startsWith);
        K(String.prototype, "endsWith", Ee.endsWith);
      }
    }
    if (U) {
      var Ce = i(function() {
        var e = /a/;
        e[q.match] = false;
        return "/a/".startsWith(e);
      });
      if (!Ce) {
        K(String.prototype, "startsWith", Ee.startsWith);
      }
      var xe = i(function() {
        var e = /a/;
        e[q.match] = false;
        return "/a/".endsWith(e);
      });
      if (!xe) {
        K(String.prototype, "endsWith", Ee.endsWith);
      }
      var Ne = i(function() {
        var e = /a/;
        e[q.match] = false;
        return "/a/".includes(e);
      });
      if (!Ne) {
        K(String.prototype, "includes", Ee.includes);
      }
    }
    h(String.prototype, Ee);
    var Ae = ["	\n\x0B\f\r \xa0\u1680\u180e\u2000\u2001\u2002\u2003", "\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028", "\u2029\ufeff"].join("");
    var Re = new RegExp("(^[" + Ae + "]+)|([" + Ae + "]+$)", "g");
    var ke = function trim() {
      return Y.ToString(Y.RequireObjectCoercible(this)).replace(Re, "");
    };
    var _e = ["\x85", "\u200b", "\ufffe"].join("");
    var Fe = new RegExp("[" + _e + "]", "g");
    var De = /^[\-+]0x[0-9a-f]+$/i;
    var ze = _e.trim().length !== _e.length;
    y(String.prototype, "trim", ke, ze);
    var Le = function(e) {
      Y.RequireObjectCoercible(e);
      this._s = Y.ToString(e);
      this._i = 0;
    };
    Le.prototype.next = function() {
      var e = this._s,
          t = this._i;
      if (typeof e === "undefined" || t >= e.length) {
        this._s = void 0;
        return {
          value: void 0,
          done: true
        };
      }
      var r = e.charCodeAt(t),
          n,
          o;
      if (r < 55296 || r > 56319 || t + 1 === e.length) {
        o = 1;
      } else {
        n = e.charCodeAt(t + 1);
        o = n < 56320 || n > 57343 ? 1 : 2;
      }
      this._i = t + o;
      return {
        value: e.substr(t, o),
        done: false
      };
    };
    de(Le.prototype);
    de(String.prototype, function() {
      return new Le(this);
    });
    var qe = {
      from: function from(e) {
        var r = this;
        var n = arguments.length > 1 ? arguments[1] : void 0;
        var o,
            i;
        if (n === void 0) {
          o = false;
        } else {
          if (!Y.IsCallable(n)) {
            throw new TypeError("Array.from: when provided, the second argument must be a function");
          }
          i = arguments.length > 2 ? arguments[2] : void 0;
          o = true;
        }
        var a = typeof(V(e) || Y.GetMethod(e, X)) !== "undefined";
        var u,
            s,
            f;
        if (a) {
          s = Y.IsConstructor(r) ? Object(new r) : [];
          var c = Y.GetIterator(e);
          var l,
              p;
          f = 0;
          while (true) {
            l = Y.IteratorStep(c);
            if (l === false) {
              break;
            }
            p = l.value;
            try {
              if (o) {
                p = i === undefined ? n(p, f) : t(n, i, p, f);
              }
              s[f] = p;
            } catch (v) {
              Y.IteratorClose(c, true);
              throw v;
            }
            f += 1;
          }
          u = f;
        } else {
          var y = Y.ToObject(e);
          u = Y.ToLength(y.length);
          s = Y.IsConstructor(r) ? Object(new r(u)) : new Array(u);
          var h;
          for (f = 0; f < u; ++f) {
            h = y[f];
            if (o) {
              h = i !== undefined ? t(n, i, h, f) : n(h, f);
            }
            s[f] = h;
          }
        }
        s.length = u;
        return s;
      },
      of: function of() {
        var e = arguments.length;
        var t = this;
        var n = r(t) || !Y.IsCallable(t) ? new Array(e) : Y.Construct(t, [e]);
        for (var o = 0; o < e; ++o) {
          Oe(n, o, arguments[o]);
        }
        n.length = e;
        return n;
      }
    };
    h(Array, qe);
    be(Array);
    var We = function(e) {
      return {
        value: e,
        done: arguments.length === 0
      };
    };
    z = function(e, t) {
      this.i = 0;
      this.array = e;
      this.kind = t;
    };
    h(z.prototype, {next: function() {
        var e = this.i,
            t = this.array;
        if (!(this instanceof z)) {
          throw new TypeError("Not an ArrayIterator");
        }
        if (typeof t !== "undefined") {
          var r = Y.ToLength(t.length);
          for (; e < r; e++) {
            var n = this.kind;
            var o;
            if (n === "key") {
              o = e;
            } else if (n === "value") {
              o = t[e];
            } else if (n === "entry") {
              o = [e, t[e]];
            }
            this.i = e + 1;
            return {
              value: o,
              done: false
            };
          }
        }
        this.array = void 0;
        return {
          value: void 0,
          done: true
        };
      }});
    de(z.prototype);
    var Ge = function orderKeys(e, t) {
      var r = String(Y.ToInteger(e)) === e;
      var n = String(Y.ToInteger(t)) === t;
      if (r && n) {
        return t - e;
      } else if (r && !n) {
        return -1;
      } else if (!r && n) {
        return 1;
      } else {
        return e.localeCompare(t);
      }
    };
    var Be = function getAllKeys(e) {
      var t = [];
      var r = [];
      for (var n in e) {
        P(D(e, n) ? t : r, n);
      }
      E(t, Ge);
      E(r, Ge);
      return I(t, r);
    };
    var He = function(e, t) {
      h(this, {
        object: e,
        array: Be(e),
        kind: t
      });
    };
    h(He.prototype, {next: function next() {
        var e;
        var t = this.array;
        if (!(this instanceof He)) {
          throw new TypeError("Not an ObjectIterator");
        }
        while (t.length > 0) {
          e = x(t);
          if (!(e in this.object)) {
            continue;
          }
          if (this.kind === "key") {
            return We(e);
          } else if (this.kind === "value") {
            return We(this.object[e]);
          } else {
            return We([e, this.object[e]]);
          }
        }
        return We();
      }});
    de(He.prototype);
    var $e = Array.of === qe.of || function() {
      var e = function Foo(e) {
        this.length = e;
      };
      e.prototype = [];
      var t = Array.of.apply(e, [1, 2]);
      return t instanceof e && t.length === 2;
    }();
    if (!$e) {
      K(Array, "of", qe.of);
    }
    var Ve = {
      copyWithin: function copyWithin(e, t) {
        var r = arguments[2];
        var n = Y.ToObject(this);
        var o = Y.ToLength(n.length);
        var i = Y.ToInteger(e);
        var a = Y.ToInteger(t);
        var u = i < 0 ? N(o + i, 0) : A(i, o);
        var s = a < 0 ? N(o + a, 0) : A(a, o);
        r = typeof r === "undefined" ? o : Y.ToInteger(r);
        var f = r < 0 ? N(o + r, 0) : A(r, o);
        var c = A(f - s, o - u);
        var l = 1;
        if (s < u && u < s + c) {
          l = -1;
          s += c - 1;
          u += c - 1;
        }
        while (c > 0) {
          if (D(n, s)) {
            n[u] = n[s];
          } else {
            delete n[s];
          }
          s += l;
          u += l;
          c -= 1;
        }
        return n;
      },
      fill: function fill(e) {
        var t = arguments.length > 1 ? arguments[1] : void 0;
        var r = arguments.length > 2 ? arguments[2] : void 0;
        var n = Y.ToObject(this);
        var o = Y.ToLength(n.length);
        t = Y.ToInteger(typeof t === "undefined" ? 0 : t);
        r = Y.ToInteger(typeof r === "undefined" ? o : r);
        var i = t < 0 ? N(o + t, 0) : A(t, o);
        var a = r < 0 ? o + r : r;
        for (var u = i; u < o && u < a; ++u) {
          n[u] = e;
        }
        return n;
      },
      find: function find(e) {
        var r = Y.ToObject(this);
        var n = Y.ToLength(r.length);
        if (!Y.IsCallable(e)) {
          throw new TypeError("Array#find: predicate must be a function");
        }
        var o = arguments.length > 1 ? arguments[1] : null;
        for (var i = 0,
            a; i < n; i++) {
          a = r[i];
          if (o) {
            if (t(e, o, a, i, r)) {
              return a;
            }
          } else if (e(a, i, r)) {
            return a;
          }
        }
      },
      findIndex: function findIndex(e) {
        var r = Y.ToObject(this);
        var n = Y.ToLength(r.length);
        if (!Y.IsCallable(e)) {
          throw new TypeError("Array#findIndex: predicate must be a function");
        }
        var o = arguments.length > 1 ? arguments[1] : null;
        for (var i = 0; i < n; i++) {
          if (o) {
            if (t(e, o, r[i], i, r)) {
              return i;
            }
          } else if (e(r[i], i, r)) {
            return i;
          }
        }
        return -1;
      },
      keys: function keys() {
        return new z(this, "key");
      },
      values: function values() {
        return new z(this, "value");
      },
      entries: function entries() {
        return new z(this, "entry");
      }
    };
    if (Array.prototype.keys && !Y.IsCallable([1].keys().next)) {
      delete Array.prototype.keys;
    }
    if (Array.prototype.entries && !Y.IsCallable([1].entries().next)) {
      delete Array.prototype.entries;
    }
    if (Array.prototype.keys && Array.prototype.entries && !Array.prototype.values && Array.prototype[X]) {
      h(Array.prototype, {values: Array.prototype[X]});
      if (J.symbol(q.unscopables)) {
        Array.prototype[q.unscopables].values = true;
      }
    }
    if (f && Array.prototype.values && Array.prototype.values.name !== "values") {
      var Je = Array.prototype.values;
      K(Array.prototype, "values", function values() {
        return Y.Call(Je, this, arguments);
      });
      y(Array.prototype, X, Array.prototype.values, true);
    }
    h(Array.prototype, Ve);
    de(Array.prototype, function() {
      return this.values();
    });
    if (Object.getPrototypeOf) {
      de(Object.getPrototypeOf([].values()));
    }
    var Ke = function() {
      return i(function() {
        return Array.from({length: -1}).length === 0;
      });
    }();
    var Ue = function() {
      var e = Array.from([0].entries());
      return e.length === 1 && r(e[0]) && e[0][0] === 0 && e[0][1] === 0;
    }();
    if (!Ke || !Ue) {
      K(Array, "from", qe.from);
    }
    var Xe = function() {
      return i(function() {
        return Array.from([0], undefined);
      });
    }();
    if (!Xe) {
      var Ze = Array.from;
      K(Array, "from", function from(e) {
        if (arguments.length > 0 && typeof arguments[1] !== "undefined") {
          return Y.Call(Ze, this, arguments);
        } else {
          return t(Ze, this, e);
        }
      });
    }
    var Qe = -(Math.pow(2, 32) - 1);
    var Ye = function(e, r) {
      var n = {length: Qe};
      n[r ? (n.length >>> 0) - 1 : 0] = true;
      return i(function() {
        t(e, n, function() {
          throw new RangeError("should not reach here");
        }, []);
        return true;
      });
    };
    if (!Ye(Array.prototype.forEach)) {
      var et = Array.prototype.forEach;
      K(Array.prototype, "forEach", function forEach(e) {
        return Y.Call(et, this.length >= 0 ? this : [], arguments);
      }, true);
    }
    if (!Ye(Array.prototype.map)) {
      var tt = Array.prototype.map;
      K(Array.prototype, "map", function map(e) {
        return Y.Call(tt, this.length >= 0 ? this : [], arguments);
      }, true);
    }
    if (!Ye(Array.prototype.filter)) {
      var rt = Array.prototype.filter;
      K(Array.prototype, "filter", function filter(e) {
        return Y.Call(rt, this.length >= 0 ? this : [], arguments);
      }, true);
    }
    if (!Ye(Array.prototype.some)) {
      var nt = Array.prototype.some;
      K(Array.prototype, "some", function some(e) {
        return Y.Call(nt, this.length >= 0 ? this : [], arguments);
      }, true);
    }
    if (!Ye(Array.prototype.every)) {
      var ot = Array.prototype.every;
      K(Array.prototype, "every", function every(e) {
        return Y.Call(ot, this.length >= 0 ? this : [], arguments);
      }, true);
    }
    if (!Ye(Array.prototype.reduce)) {
      var it = Array.prototype.reduce;
      K(Array.prototype, "reduce", function reduce(e) {
        return Y.Call(it, this.length >= 0 ? this : [], arguments);
      }, true);
    }
    if (!Ye(Array.prototype.reduceRight, true)) {
      var at = Array.prototype.reduceRight;
      K(Array.prototype, "reduceRight", function reduceRight(e) {
        return Y.Call(at, this.length >= 0 ? this : [], arguments);
      }, true);
    }
    var ut = Number("0o10") !== 8;
    var st = Number("0b10") !== 2;
    var ft = v(_e, function(e) {
      return Number(e + 0 + e) === 0;
    });
    if (ut || st || ft) {
      var ct = Number;
      var lt = /^0b[01]+$/i;
      var pt = /^0o[0-7]+$/i;
      var vt = lt.test.bind(lt);
      var yt = pt.test.bind(pt);
      var ht = function(e) {
        var t;
        if (typeof e.valueOf === "function") {
          t = e.valueOf();
          if (J.primitive(t)) {
            return t;
          }
        }
        if (typeof e.toString === "function") {
          t = e.toString();
          if (J.primitive(t)) {
            return t;
          }
        }
        throw new TypeError("No default value");
      };
      var gt = Fe.test.bind(Fe);
      var bt = De.test.bind(De);
      var dt = function() {
        var e = function Number(t) {
          var r;
          if (arguments.length > 0) {
            r = J.primitive(t) ? t : ht(t, "number");
          } else {
            r = 0;
          }
          if (typeof r === "string") {
            r = Y.Call(ke, r);
            if (vt(r)) {
              r = parseInt(M(r, 2), 2);
            } else if (yt(r)) {
              r = parseInt(M(r, 2), 8);
            } else if (gt(r) || bt(r)) {
              r = NaN;
            }
          }
          var n = this;
          var o = i(function() {
            ct.prototype.valueOf.call(n);
            return true;
          });
          if (n instanceof e && !o) {
            return new ct(r);
          }
          return ct(r);
        };
        return e;
      }();
      he(ct, dt, {});
      Number = dt;
      d.redefine(j, "Number", dt);
    }
    var mt = Math.pow(2, 53) - 1;
    h(Number, {
      MAX_SAFE_INTEGER: mt,
      MIN_SAFE_INTEGER: -mt,
      EPSILON: 2.220446049250313e-16,
      parseInt: j.parseInt,
      parseFloat: j.parseFloat,
      isFinite: B,
      isInteger: function isInteger(e) {
        return B(e) && Y.ToInteger(e) === e;
      },
      isSafeInteger: function isSafeInteger(e) {
        return Number.isInteger(e) && k(e) <= Number.MAX_SAFE_INTEGER;
      },
      isNaN: G
    });
    y(Number, "parseInt", j.parseInt, Number.parseInt !== j.parseInt);
    if (![, 1].find(function(e, t) {
      return t === 0;
    })) {
      K(Array.prototype, "find", Ve.find);
    }
    if ([, 1].findIndex(function(e, t) {
      return t === 0;
    }) !== 0) {
      K(Array.prototype, "findIndex", Ve.findIndex);
    }
    var Ot = Function.bind.call(Function.bind, Object.prototype.propertyIsEnumerable);
    var wt = function ensureEnumerable(e, t) {
      if (s && Ot(e, t)) {
        Object.defineProperty(e, t, {enumerable: false});
      }
    };
    var jt = function sliceArgs() {
      var e = Number(this);
      var t = arguments.length;
      var r = t - e;
      var n = new Array(r < 0 ? 0 : r);
      for (var o = e; o < t; ++o) {
        n[o - e] = arguments[o];
      }
      return n;
    };
    var St = function assignTo(e) {
      return function assignToSource(t, r) {
        t[r] = e[r];
        return t;
      };
    };
    var Tt = function(e, t) {
      var r = Object.keys(Object(t));
      var n;
      if (Y.IsCallable(Object.getOwnPropertySymbols)) {
        n = p(Object.getOwnPropertySymbols(Object(t)), Ot(t));
      }
      return l(I(r, n || []), St(t), e);
    };
    var It = {
      assign: function(e, t) {
        var r = Y.ToObject(e, "Cannot convert undefined or null to object");
        return l(Y.Call(jt, 1, arguments), Tt, r);
      },
      is: function is(e, t) {
        return Y.SameValue(e, t);
      }
    };
    var Et = Object.assign && Object.preventExtensions && function() {
      var e = Object.preventExtensions({1: 2});
      try {
        Object.assign(e, "xy");
      } catch (t) {
        return e[1] === "y";
      }
    }();
    if (Et) {
      K(Object, "assign", It.assign);
    }
    h(Object, It);
    if (s) {
      var Mt = {setPrototypeOf: function(e, r) {
          var n;
          var o = function(e, t) {
            if (!Y.TypeIsObject(e)) {
              throw new TypeError("cannot set prototype on a non-object");
            }
            if (!(t === null || Y.TypeIsObject(t))) {
              throw new TypeError("can only set prototype to an object or null" + t);
            }
          };
          var i = function(e, r) {
            o(e, r);
            t(n, e, r);
            return e;
          };
          try {
            n = e.getOwnPropertyDescriptor(e.prototype, r).set;
            t(n, {}, null);
          } catch (a) {
            if (e.prototype !== {}[r]) {
              return;
            }
            n = function(e) {
              this[r] = e;
            };
            i.polyfill = i(i({}, null), e.prototype) instanceof e;
          }
          return i;
        }(Object, "__proto__")};
      h(Object, Mt);
    }
    if (Object.setPrototypeOf && Object.getPrototypeOf && Object.getPrototypeOf(Object.setPrototypeOf({}, null)) !== null && Object.getPrototypeOf(Object.create(null)) === null) {
      (function() {
        var e = Object.create(null);
        var t = Object.getPrototypeOf,
            r = Object.setPrototypeOf;
        Object.getPrototypeOf = function(r) {
          var n = t(r);
          return n === e ? null : n;
        };
        Object.setPrototypeOf = function(t, n) {
          var o = n === null ? e : n;
          return r(t, o);
        };
        Object.setPrototypeOf.polyfill = false;
      })();
    }
    var Pt = !o(function() {
      Object.keys("foo");
    });
    if (!Pt) {
      var Ct = Object.keys;
      K(Object, "keys", function keys(e) {
        return Ct(Y.ToObject(e));
      });
    }
    if (Object.getOwnPropertyNames) {
      var xt = !o(function() {
        Object.getOwnPropertyNames("foo");
      });
      if (!xt) {
        var Nt = typeof window === "object" ? Object.getOwnPropertyNames(window) : [];
        var At = Object.getOwnPropertyNames;
        K(Object, "getOwnPropertyNames", function getOwnPropertyNames(e) {
          var t = Y.ToObject(e);
          if (g(t) === "[object Window]") {
            try {
              return At(t);
            } catch (r) {
              return I([], Nt);
            }
          }
          return At(t);
        });
      }
    }
    if (Object.getOwnPropertyDescriptor) {
      var Rt = !o(function() {
        Object.getOwnPropertyDescriptor("foo", "bar");
      });
      if (!Rt) {
        var kt = Object.getOwnPropertyDescriptor;
        K(Object, "getOwnPropertyDescriptor", function getOwnPropertyDescriptor(e, t) {
          return kt(Y.ToObject(e), t);
        });
      }
    }
    if (Object.seal) {
      var _t = !o(function() {
        Object.seal("foo");
      });
      if (!_t) {
        var Ft = Object.seal;
        K(Object, "seal", function seal(e) {
          if (!J.object(e)) {
            return e;
          }
          return Ft(e);
        });
      }
    }
    if (Object.isSealed) {
      var Dt = !o(function() {
        Object.isSealed("foo");
      });
      if (!Dt) {
        var zt = Object.isSealed;
        K(Object, "isSealed", function isSealed(e) {
          if (!J.object(e)) {
            return true;
          }
          return zt(e);
        });
      }
    }
    if (Object.freeze) {
      var Lt = !o(function() {
        Object.freeze("foo");
      });
      if (!Lt) {
        var qt = Object.freeze;
        K(Object, "freeze", function freeze(e) {
          if (!J.object(e)) {
            return e;
          }
          return qt(e);
        });
      }
    }
    if (Object.isFrozen) {
      var Wt = !o(function() {
        Object.isFrozen("foo");
      });
      if (!Wt) {
        var Gt = Object.isFrozen;
        K(Object, "isFrozen", function isFrozen(e) {
          if (!J.object(e)) {
            return true;
          }
          return Gt(e);
        });
      }
    }
    if (Object.preventExtensions) {
      var Bt = !o(function() {
        Object.preventExtensions("foo");
      });
      if (!Bt) {
        var Ht = Object.preventExtensions;
        K(Object, "preventExtensions", function preventExtensions(e) {
          if (!J.object(e)) {
            return e;
          }
          return Ht(e);
        });
      }
    }
    if (Object.isExtensible) {
      var $t = !o(function() {
        Object.isExtensible("foo");
      });
      if (!$t) {
        var Vt = Object.isExtensible;
        K(Object, "isExtensible", function isExtensible(e) {
          if (!J.object(e)) {
            return false;
          }
          return Vt(e);
        });
      }
    }
    if (Object.getPrototypeOf) {
      var Jt = !o(function() {
        Object.getPrototypeOf("foo");
      });
      if (!Jt) {
        var Kt = Object.getPrototypeOf;
        K(Object, "getPrototypeOf", function getPrototypeOf(e) {
          return Kt(Y.ToObject(e));
        });
      }
    }
    var Ut = s && function() {
      var e = Object.getOwnPropertyDescriptor(RegExp.prototype, "flags");
      return e && Y.IsCallable(e.get);
    }();
    if (s && !Ut) {
      var Xt = function flags() {
        if (!Y.TypeIsObject(this)) {
          throw new TypeError("Method called on incompatible type: must be an object.");
        }
        var e = "";
        if (this.global) {
          e += "g";
        }
        if (this.ignoreCase) {
          e += "i";
        }
        if (this.multiline) {
          e += "m";
        }
        if (this.unicode) {
          e += "u";
        }
        if (this.sticky) {
          e += "y";
        }
        return e;
      };
      d.getter(RegExp.prototype, "flags", Xt);
    }
    var Zt = s && i(function() {
      return String(new RegExp(/a/g, "i")) === "/a/i";
    });
    var Qt = U && s && function() {
      var e = /./;
      e[q.match] = false;
      return RegExp(e) === e;
    }();
    if (s && (!Zt || Qt)) {
      var Yt = Object.getOwnPropertyDescriptor(RegExp.prototype, "flags").get;
      var er = Object.getOwnPropertyDescriptor(RegExp.prototype, "source") || {};
      var tr = function() {
        return this.source;
      };
      var rr = Y.IsCallable(er.get) ? er.get : tr;
      var nr = RegExp;
      var or = function() {
        return function RegExp(e, t) {
          var r = Y.IsRegExp(e);
          var n = this instanceof RegExp;
          if (!n && r && typeof t === "undefined" && e.constructor === RegExp) {
            return e;
          }
          var o = e;
          var i = t;
          if (J.regex(e)) {
            o = Y.Call(rr, e);
            i = typeof t === "undefined" ? Y.Call(Yt, e) : t;
            return new RegExp(o, i);
          } else if (r) {
            o = e.source;
            i = typeof t === "undefined" ? e.flags : t;
          }
          return new nr(e, t);
        };
      }();
      he(nr, or, {$input: true});
      RegExp = or;
      d.redefine(j, "RegExp", or);
    }
    if (s) {
      var ir = {
        input: "$_",
        lastMatch: "$&",
        lastParen: "$+",
        leftContext: "$`",
        rightContext: "$'"
      };
      c(Object.keys(ir), function(e) {
        if (e in RegExp && !(ir[e] in RegExp)) {
          d.getter(RegExp, ir[e], function get() {
            return RegExp[e];
          });
        }
      });
    }
    be(RegExp);
    var ar = 1 / Number.EPSILON;
    var ur = function roundTiesToEven(e) {
      return e + ar - ar;
    };
    var sr = Math.pow(2, -23);
    var fr = Math.pow(2, 127) * (2 - sr);
    var cr = Math.pow(2, -126);
    var lr = Number.prototype.clz;
    delete Number.prototype.clz;
    var pr = {
      acosh: function acosh(e) {
        var t = Number(e);
        if (Number.isNaN(t) || e < 1) {
          return NaN;
        }
        if (t === 1) {
          return 0;
        }
        if (t === Infinity) {
          return t;
        }
        return _(t / Math.E + F(t + 1) * F(t - 1) / Math.E) + 1;
      },
      asinh: function asinh(e) {
        var t = Number(e);
        if (t === 0 || !S(t)) {
          return t;
        }
        return t < 0 ? -Math.asinh(-t) : _(t + F(t * t + 1));
      },
      atanh: function atanh(e) {
        var t = Number(e);
        if (Number.isNaN(t) || t < -1 || t > 1) {
          return NaN;
        }
        if (t === -1) {
          return -Infinity;
        }
        if (t === 1) {
          return Infinity;
        }
        if (t === 0) {
          return t;
        }
        return .5 * _((1 + t) / (1 - t));
      },
      cbrt: function cbrt(e) {
        var t = Number(e);
        if (t === 0) {
          return t;
        }
        var r = t < 0,
            n;
        if (r) {
          t = -t;
        }
        if (t === Infinity) {
          n = Infinity;
        } else {
          n = Math.exp(_(t) / 3);
          n = (t / (n * n) + 2 * n) / 3;
        }
        return r ? -n : n;
      },
      clz32: function clz32(e) {
        var t = Number(e);
        var r = Y.ToUint32(t);
        if (r === 0) {
          return 32;
        }
        return lr ? Y.Call(lr, r) : 31 - R(_(r + .5) * Math.LOG2E);
      },
      cosh: function cosh(e) {
        var t = Number(e);
        if (t === 0) {
          return 1;
        }
        if (Number.isNaN(t)) {
          return NaN;
        }
        if (!S(t)) {
          return Infinity;
        }
        if (t < 0) {
          t = -t;
        }
        if (t > 21) {
          return Math.exp(t) / 2;
        }
        return (Math.exp(t) + Math.exp(-t)) / 2;
      },
      expm1: function expm1(e) {
        var t = Number(e);
        if (t === -Infinity) {
          return -1;
        }
        if (!S(t) || t === 0) {
          return t;
        }
        if (k(t) > .5) {
          return Math.exp(t) - 1;
        }
        var r = t;
        var n = 0;
        var o = 1;
        while (n + r !== n) {
          n += r;
          o += 1;
          r *= t / o;
        }
        return n;
      },
      hypot: function hypot(e, t) {
        var r = 0;
        var n = 0;
        for (var o = 0; o < arguments.length; ++o) {
          var i = k(Number(arguments[o]));
          if (n < i) {
            r *= n / i * (n / i);
            r += 1;
            n = i;
          } else {
            r += i > 0 ? i / n * (i / n) : i;
          }
        }
        return n === Infinity ? Infinity : n * F(r);
      },
      log2: function log2(e) {
        return _(e) * Math.LOG2E;
      },
      log10: function log10(e) {
        return _(e) * Math.LOG10E;
      },
      log1p: function log1p(e) {
        var t = Number(e);
        if (t < -1 || Number.isNaN(t)) {
          return NaN;
        }
        if (t === 0 || t === Infinity) {
          return t;
        }
        if (t === -1) {
          return -Infinity;
        }
        return 1 + t - 1 === 0 ? t : t * (_(1 + t) / (1 + t - 1));
      },
      sign: function sign(e) {
        var t = Number(e);
        if (t === 0) {
          return t;
        }
        if (Number.isNaN(t)) {
          return t;
        }
        return t < 0 ? -1 : 1;
      },
      sinh: function sinh(e) {
        var t = Number(e);
        if (!S(t) || t === 0) {
          return t;
        }
        if (k(t) < 1) {
          return (Math.expm1(t) - Math.expm1(-t)) / 2;
        }
        return (Math.exp(t - 1) - Math.exp(-t - 1)) * Math.E / 2;
      },
      tanh: function tanh(e) {
        var t = Number(e);
        if (Number.isNaN(t) || t === 0) {
          return t;
        }
        if (t === Infinity) {
          return 1;
        }
        if (t === -Infinity) {
          return -1;
        }
        var r = Math.expm1(t);
        var n = Math.expm1(-t);
        if (r === Infinity) {
          return 1;
        }
        if (n === Infinity) {
          return -1;
        }
        return (r - n) / (Math.exp(t) + Math.exp(-t));
      },
      trunc: function trunc(e) {
        var t = Number(e);
        return t < 0 ? -R(-t) : R(t);
      },
      imul: function imul(e, t) {
        var r = Y.ToUint32(e);
        var n = Y.ToUint32(t);
        var o = r >>> 16 & 65535;
        var i = r & 65535;
        var a = n >>> 16 & 65535;
        var u = n & 65535;
        return i * u + (o * u + i * a << 16 >>> 0) | 0;
      },
      fround: function fround(e) {
        var t = Number(e);
        if (t === 0 || t === Infinity || t === -Infinity || G(t)) {
          return t;
        }
        var r = Math.sign(t);
        var n = k(t);
        if (n < cr) {
          return r * ur(n / cr / sr) * cr * sr;
        }
        var o = (1 + sr / Number.EPSILON) * n;
        var i = o - (o - n);
        if (i > fr || G(i)) {
          return r * Infinity;
        }
        return r * i;
      }
    };
    h(Math, pr);
    y(Math, "log1p", pr.log1p, Math.log1p(-1e-17) !== -1e-17);
    y(Math, "asinh", pr.asinh, Math.asinh(-1e7) !== -Math.asinh(1e7));
    y(Math, "tanh", pr.tanh, Math.tanh(-2e-17) !== -2e-17);
    y(Math, "acosh", pr.acosh, Math.acosh(Number.MAX_VALUE) === Infinity);
    y(Math, "cbrt", pr.cbrt, Math.abs(1 - Math.cbrt(1e-300) / 1e-100) / Number.EPSILON > 8);
    y(Math, "sinh", pr.sinh, Math.sinh(-2e-17) !== -2e-17);
    var vr = Math.expm1(10);
    y(Math, "expm1", pr.expm1, vr > 22025.465794806718 || vr < 22025.465794806718);
    var yr = Math.round;
    var hr = Math.round(.5 - Number.EPSILON / 4) === 0 && Math.round(-.5 + Number.EPSILON / 3.99) === 1;
    var gr = ar + 1;
    var br = 2 * ar - 1;
    var dr = [gr, br].every(function(e) {
      return Math.round(e) === e;
    });
    y(Math, "round", function round(e) {
      var t = R(e);
      var r = t === -1 ? -0 : t + 1;
      return e - t < .5 ? t : r;
    }, !hr || !dr);
    d.preserveToString(Math.round, yr);
    var mr = Math.imul;
    if (Math.imul(4294967295, 5) !== -5) {
      Math.imul = pr.imul;
      d.preserveToString(Math.imul, mr);
    }
    if (Math.imul.length !== 2) {
      K(Math, "imul", function imul(e, t) {
        return Y.Call(mr, Math, arguments);
      });
    }
    var Or = function() {
      var e = j.setTimeout;
      if (typeof e !== "function" && typeof e !== "object") {
        return;
      }
      Y.IsPromise = function(e) {
        if (!Y.TypeIsObject(e)) {
          return false;
        }
        if (typeof e._promise === "undefined") {
          return false;
        }
        return true;
      };
      var r = function(e) {
        if (!Y.IsConstructor(e)) {
          throw new TypeError("Bad promise constructor");
        }
        var t = this;
        var r = function(e, r) {
          if (t.resolve !== void 0 || t.reject !== void 0) {
            throw new TypeError("Bad Promise implementation!");
          }
          t.resolve = e;
          t.reject = r;
        };
        t.promise = new e(r);
        if (!(Y.IsCallable(t.resolve) && Y.IsCallable(t.reject))) {
          throw new TypeError("Bad promise constructor");
        }
      };
      var n;
      if (typeof window !== "undefined" && Y.IsCallable(window.postMessage)) {
        n = function() {
          var e = [];
          var t = "zero-timeout-message";
          var r = function(r) {
            P(e, r);
            window.postMessage(t, "*");
          };
          var n = function(r) {
            if (r.source === window && r.data === t) {
              r.stopPropagation();
              if (e.length === 0) {
                return;
              }
              var n = x(e);
              n();
            }
          };
          window.addEventListener("message", n, true);
          return r;
        };
      }
      var o = function() {
        var e = j.Promise;
        return e && e.resolve && function(t) {
          return e.resolve().then(t);
        };
      };
      var i = Y.IsCallable(j.setImmediate) ? j.setImmediate.bind(j) : typeof process === "object" && process.nextTick ? process.nextTick : o() || (Y.IsCallable(n) ? n() : function(t) {
        e(t, 0);
      });
      var a = 1;
      var u = 2;
      var s = 3;
      var f = 4;
      var l = 5;
      var p = function(e, t) {
        var r = e.capabilities;
        var n = e.handler;
        var o,
            i = false,
            s;
        if (n === a) {
          o = t;
        } else if (n === u) {
          o = t;
          i = true;
        } else {
          try {
            o = n(t);
          } catch (f) {
            o = f;
            i = true;
          }
        }
        s = i ? r.reject : r.resolve;
        s(o);
      };
      var v = function(e, t) {
        c(e, function(e) {
          i(function() {
            p(e, t);
          });
        });
      };
      var y = function(e, t) {
        var r = e._promise;
        var n = r.fulfillReactions;
        r.result = t;
        r.fulfillReactions = void 0;
        r.rejectReactions = void 0;
        r.state = f;
        v(n, t);
      };
      var g = function(e, t) {
        var r = e._promise;
        var n = r.rejectReactions;
        r.result = t;
        r.fulfillReactions = void 0;
        r.rejectReactions = void 0;
        r.state = l;
        v(n, t);
      };
      var b = function(e) {
        var t = false;
        var r = function(r) {
          var n;
          if (t) {
            return;
          }
          t = true;
          if (r === e) {
            return g(e, new TypeError("Self resolution"));
          }
          if (!Y.TypeIsObject(r)) {
            return y(e, r);
          }
          try {
            n = r.then;
          } catch (o) {
            return g(e, o);
          }
          if (!Y.IsCallable(n)) {
            return y(e, r);
          }
          i(function() {
            d(e, r, n);
          });
        };
        var n = function(r) {
          if (t) {
            return;
          }
          t = true;
          return g(e, r);
        };
        return {
          resolve: r,
          reject: n
        };
      };
      var d = function(e, r, n) {
        var o = b(e);
        var i = o.resolve;
        var a = o.reject;
        try {
          t(n, r, i, a);
        } catch (u) {
          a(u);
        }
      };
      var m;
      var O = function() {
        var e = function Promise(t) {
          if (!(this instanceof e)) {
            throw new TypeError('Constructor Promise requires "new"');
          }
          if (this && this._promise) {
            throw new TypeError("Bad construction");
          }
          if (!Y.IsCallable(t)) {
            throw new TypeError("not a valid resolver");
          }
          var r = we(this, e, m, {_promise: {
              result: void 0,
              state: s,
              fulfillReactions: [],
              rejectReactions: []
            }});
          var n = b(r);
          var o = n.reject;
          try {
            t(n.resolve, o);
          } catch (i) {
            o(i);
          }
          return r;
        };
        return e;
      }();
      m = O.prototype;
      var w = function(e, t, r, n) {
        var o = false;
        return function(i) {
          if (o) {
            return;
          }
          o = true;
          t[e] = i;
          if (--n.count === 0) {
            var a = r.resolve;
            a(t);
          }
        };
      };
      var S = function(e, t, r) {
        var n = e.iterator;
        var o = [],
            i = {count: 1},
            a,
            u;
        var s = 0;
        while (true) {
          try {
            a = Y.IteratorStep(n);
            if (a === false) {
              e.done = true;
              break;
            }
            u = a.value;
          } catch (f) {
            e.done = true;
            throw f;
          }
          o[s] = void 0;
          var c = t.resolve(u);
          var l = w(s, o, r, i);
          i.count += 1;
          c.then(l, r.reject);
          s += 1;
        }
        if (--i.count === 0) {
          var p = r.resolve;
          p(o);
        }
        return r.promise;
      };
      var T = function(e, t, r) {
        var n = e.iterator,
            o,
            i,
            a;
        while (true) {
          try {
            o = Y.IteratorStep(n);
            if (o === false) {
              e.done = true;
              break;
            }
            i = o.value;
          } catch (u) {
            e.done = true;
            throw u;
          }
          a = t.resolve(i);
          a.then(r.resolve, r.reject);
        }
        return r.promise;
      };
      h(O, {
        all: function all(e) {
          var t = this;
          if (!Y.TypeIsObject(t)) {
            throw new TypeError("Promise is not object");
          }
          var n = new r(t);
          var o,
              i;
          try {
            o = Y.GetIterator(e);
            i = {
              iterator: o,
              done: false
            };
            return S(i, t, n);
          } catch (a) {
            var u = a;
            if (i && !i.done) {
              try {
                Y.IteratorClose(o, true);
              } catch (s) {
                u = s;
              }
            }
            var f = n.reject;
            f(u);
            return n.promise;
          }
        },
        race: function race(e) {
          var t = this;
          if (!Y.TypeIsObject(t)) {
            throw new TypeError("Promise is not object");
          }
          var n = new r(t);
          var o,
              i;
          try {
            o = Y.GetIterator(e);
            i = {
              iterator: o,
              done: false
            };
            return T(i, t, n);
          } catch (a) {
            var u = a;
            if (i && !i.done) {
              try {
                Y.IteratorClose(o, true);
              } catch (s) {
                u = s;
              }
            }
            var f = n.reject;
            f(u);
            return n.promise;
          }
        },
        reject: function reject(e) {
          var t = this;
          if (!Y.TypeIsObject(t)) {
            throw new TypeError("Bad promise constructor");
          }
          var n = new r(t);
          var o = n.reject;
          o(e);
          return n.promise;
        },
        resolve: function resolve(e) {
          var t = this;
          if (!Y.TypeIsObject(t)) {
            throw new TypeError("Bad promise constructor");
          }
          if (Y.IsPromise(e)) {
            var n = e.constructor;
            if (n === t) {
              return e;
            }
          }
          var o = new r(t);
          var i = o.resolve;
          i(e);
          return o.promise;
        }
      });
      h(m, {
        "catch": function(e) {
          return this.then(void 0, e);
        },
        then: function then(e, t) {
          var n = this;
          if (!Y.IsPromise(n)) {
            throw new TypeError("not a promise");
          }
          var o = Y.SpeciesConstructor(n, O);
          var c = new r(o);
          var v = {
            capabilities: c,
            handler: Y.IsCallable(e) ? e : a
          };
          var y = {
            capabilities: c,
            handler: Y.IsCallable(t) ? t : u
          };
          var h = n._promise;
          var g;
          if (h.state === s) {
            P(h.fulfillReactions, v);
            P(h.rejectReactions, y);
          } else if (h.state === f) {
            g = h.result;
            i(function() {
              p(v, g);
            });
          } else if (h.state === l) {
            g = h.result;
            i(function() {
              p(y, g);
            });
          } else {
            throw new TypeError("unexpected Promise state");
          }
          return c.promise;
        }
      });
      return O;
    }();
    if (j.Promise) {
      delete j.Promise.accept;
      delete j.Promise.defer;
      delete j.Promise.prototype.chain;
    }
    if (typeof Or === "function") {
      h(j, {Promise: Or});
      var wr = O(j.Promise, function(e) {
        return e.resolve(42).then(function() {}) instanceof e;
      });
      var jr = !o(function() {
        j.Promise.reject(42).then(null, 5).then(null, L);
      });
      var Sr = o(function() {
        j.Promise.call(3, L);
      });
      var Tr = function(e) {
        var t = e.resolve(5);
        t.constructor = {};
        var r = e.resolve(t);
        return t === r;
      }(j.Promise);
      var Ir = s && function() {
        var e = 0;
        var t = Object.defineProperty({}, "then", {get: function() {
            e += 1;
          }});
        Promise.resolve(t);
        return e === 1;
      }();
      var Er = function BadResolverPromise(e) {
        var t = new Promise(e);
        e(3, function() {});
        this.then = t.then;
        this.constructor = BadResolverPromise;
      };
      Er.prototype = Promise.prototype;
      Er.all = Promise.all;
      var Mr = i(function() {
        return !!Er.all([1, 2]);
      });
      if (!wr || !jr || !Sr || Tr || !Ir || Mr) {
        Promise = Or;
        K(j, "Promise", Or);
      }
      wt(Promise, "all");
      wt(Promise, "race");
      wt(Promise, "resolve");
      wt(Promise, "reject");
      be(Promise);
    }
    var Pr = function(e) {
      var t = Object.keys(l(e, function(e, t) {
        e[t] = true;
        return e;
      }, {}));
      return e.join(":") === t.join(":");
    };
    var Cr = Pr(["z", "a", "bb"]);
    var xr = Pr(["z", 1, "a", "3", 2]);
    if (s) {
      var Nr = function fastkey(e) {
        if (!Cr) {
          return null;
        }
        var t = typeof e;
        if (t === "undefined" || e === null) {
          return "^" + Y.ToString(e);
        } else if (t === "string") {
          return "$" + e;
        } else if (t === "number") {
          if (!xr) {
            return "n" + e;
          }
          return e;
        } else if (t === "boolean") {
          return "b" + e;
        }
        return null;
      };
      var Ar = function emptyObject() {
        return Object.create ? Object.create(null) : {};
      };
      var Rr = function addIterableToMap(e, n, o) {
        if (r(o) || J.string(o)) {
          c(o, function(e) {
            if (!Y.TypeIsObject(e)) {
              throw new TypeError("Iterator value " + e + " is not an entry object");
            }
            n.set(e[0], e[1]);
          });
        } else if (o instanceof e) {
          t(e.prototype.forEach, o, function(e, t) {
            n.set(t, e);
          });
        } else {
          var i,
              a;
          if (o !== null && typeof o !== "undefined") {
            a = n.set;
            if (!Y.IsCallable(a)) {
              throw new TypeError("bad map");
            }
            i = Y.GetIterator(o);
          }
          if (typeof i !== "undefined") {
            while (true) {
              var u = Y.IteratorStep(i);
              if (u === false) {
                break;
              }
              var s = u.value;
              try {
                if (!Y.TypeIsObject(s)) {
                  throw new TypeError("Iterator value " + s + " is not an entry object");
                }
                t(a, n, s[0], s[1]);
              } catch (f) {
                Y.IteratorClose(i, true);
                throw f;
              }
            }
          }
        }
      };
      var kr = function addIterableToSet(e, n, o) {
        if (r(o) || J.string(o)) {
          c(o, function(e) {
            n.add(e);
          });
        } else if (o instanceof e) {
          t(e.prototype.forEach, o, function(e) {
            n.add(e);
          });
        } else {
          var i,
              a;
          if (o !== null && typeof o !== "undefined") {
            a = n.add;
            if (!Y.IsCallable(a)) {
              throw new TypeError("bad set");
            }
            i = Y.GetIterator(o);
          }
          if (typeof i !== "undefined") {
            while (true) {
              var u = Y.IteratorStep(i);
              if (u === false) {
                break;
              }
              var s = u.value;
              try {
                t(a, n, s);
              } catch (f) {
                Y.IteratorClose(i, true);
                throw f;
              }
            }
          }
        }
      };
      var _r = {
        Map: function() {
          var e = {};
          var r = function MapEntry(e, t) {
            this.key = e;
            this.value = t;
            this.next = null;
            this.prev = null;
          };
          r.prototype.isRemoved = function isRemoved() {
            return this.key === e;
          };
          var n = function isMap(e) {
            return !!e._es6map;
          };
          var o = function requireMapSlot(e, t) {
            if (!Y.TypeIsObject(e) || !n(e)) {
              throw new TypeError("Method Map.prototype." + t + " called on incompatible receiver " + Y.ToString(e));
            }
          };
          var i = function MapIterator(e, t) {
            o(e, "[[MapIterator]]");
            this.head = e._head;
            this.i = this.head;
            this.kind = t;
          };
          i.prototype = {next: function next() {
              var e = this.i,
                  t = this.kind,
                  r = this.head,
                  n;
              if (typeof this.i === "undefined") {
                return {
                  value: void 0,
                  done: true
                };
              }
              while (e.isRemoved() && e !== r) {
                e = e.prev;
              }
              while (e.next !== r) {
                e = e.next;
                if (!e.isRemoved()) {
                  if (t === "key") {
                    n = e.key;
                  } else if (t === "value") {
                    n = e.value;
                  } else {
                    n = [e.key, e.value];
                  }
                  this.i = e;
                  return {
                    value: n,
                    done: false
                  };
                }
              }
              this.i = void 0;
              return {
                value: void 0,
                done: true
              };
            }};
          de(i.prototype);
          var a;
          var u = function Map() {
            if (!(this instanceof Map)) {
              throw new TypeError('Constructor Map requires "new"');
            }
            if (this && this._es6map) {
              throw new TypeError("Bad construction");
            }
            var e = we(this, Map, a, {
              _es6map: true,
              _head: null,
              _storage: Ar(),
              _size: 0
            });
            var t = new r(null, null);
            t.next = t.prev = t;
            e._head = t;
            if (arguments.length > 0) {
              Rr(Map, e, arguments[0]);
            }
            return e;
          };
          a = u.prototype;
          d.getter(a, "size", function() {
            if (typeof this._size === "undefined") {
              throw new TypeError("size method called on incompatible Map");
            }
            return this._size;
          });
          h(a, {
            get: function get(e) {
              o(this, "get");
              var t = Nr(e);
              if (t !== null) {
                var r = this._storage[t];
                if (r) {
                  return r.value;
                } else {
                  return;
                }
              }
              var n = this._head,
                  i = n;
              while ((i = i.next) !== n) {
                if (Y.SameValueZero(i.key, e)) {
                  return i.value;
                }
              }
            },
            has: function has(e) {
              o(this, "has");
              var t = Nr(e);
              if (t !== null) {
                return typeof this._storage[t] !== "undefined";
              }
              var r = this._head,
                  n = r;
              while ((n = n.next) !== r) {
                if (Y.SameValueZero(n.key, e)) {
                  return true;
                }
              }
              return false;
            },
            set: function set(e, t) {
              o(this, "set");
              var n = this._head,
                  i = n,
                  a;
              var u = Nr(e);
              if (u !== null) {
                if (typeof this._storage[u] !== "undefined") {
                  this._storage[u].value = t;
                  return this;
                } else {
                  a = this._storage[u] = new r(e, t);
                  i = n.prev;
                }
              }
              while ((i = i.next) !== n) {
                if (Y.SameValueZero(i.key, e)) {
                  i.value = t;
                  return this;
                }
              }
              a = a || new r(e, t);
              if (Y.SameValue(-0, e)) {
                a.key = +0;
              }
              a.next = this._head;
              a.prev = this._head.prev;
              a.prev.next = a;
              a.next.prev = a;
              this._size += 1;
              return this;
            },
            "delete": function(t) {
              o(this, "delete");
              var r = this._head,
                  n = r;
              var i = Nr(t);
              if (i !== null) {
                if (typeof this._storage[i] === "undefined") {
                  return false;
                }
                n = this._storage[i].prev;
                delete this._storage[i];
              }
              while ((n = n.next) !== r) {
                if (Y.SameValueZero(n.key, t)) {
                  n.key = n.value = e;
                  n.prev.next = n.next;
                  n.next.prev = n.prev;
                  this._size -= 1;
                  return true;
                }
              }
              return false;
            },
            clear: function clear() {
              o(this, "clear");
              this._size = 0;
              this._storage = Ar();
              var t = this._head,
                  r = t,
                  n = r.next;
              while ((r = n) !== t) {
                r.key = r.value = e;
                n = r.next;
                r.next = r.prev = t;
              }
              t.next = t.prev = t;
            },
            keys: function keys() {
              o(this, "keys");
              return new i(this, "key");
            },
            values: function values() {
              o(this, "values");
              return new i(this, "value");
            },
            entries: function entries() {
              o(this, "entries");
              return new i(this, "key+value");
            },
            forEach: function forEach(e) {
              o(this, "forEach");
              var r = arguments.length > 1 ? arguments[1] : null;
              var n = this.entries();
              for (var i = n.next(); !i.done; i = n.next()) {
                if (r) {
                  t(e, r, i.value[1], i.value[0], this);
                } else {
                  e(i.value[1], i.value[0], this);
                }
              }
            }
          });
          de(a, a.entries);
          return u;
        }(),
        Set: function() {
          var e = function isSet(e) {
            return e._es6set && typeof e._storage !== "undefined";
          };
          var r = function requireSetSlot(t, r) {
            if (!Y.TypeIsObject(t) || !e(t)) {
              throw new TypeError("Set.prototype." + r + " called on incompatible receiver " + Y.ToString(t));
            }
          };
          var n;
          var o = function Set() {
            if (!(this instanceof Set)) {
              throw new TypeError('Constructor Set requires "new"');
            }
            if (this && this._es6set) {
              throw new TypeError("Bad construction");
            }
            var e = we(this, Set, n, {
              _es6set: true,
              "[[SetData]]": null,
              _storage: Ar()
            });
            if (!e._es6set) {
              throw new TypeError("bad set");
            }
            if (arguments.length > 0) {
              kr(Set, e, arguments[0]);
            }
            return e;
          };
          n = o.prototype;
          var i = function ensureMap(e) {
            if (!e["[[SetData]]"]) {
              var t = e["[[SetData]]"] = new _r.Map;
              c(Object.keys(e._storage), function(e) {
                var r = e;
                if (r === "^null") {
                  r = null;
                } else if (r === "^undefined") {
                  r = void 0;
                } else {
                  var n = r.charAt(0);
                  if (n === "$") {
                    r = M(r, 1);
                  } else if (n === "n") {
                    r = +M(r, 1);
                  } else if (n === "b") {
                    r = r === "btrue";
                  } else {
                    r = +r;
                  }
                }
                t.set(r, r);
              });
              e._storage = null;
            }
          };
          d.getter(o.prototype, "size", function() {
            r(this, "size");
            i(this);
            return this["[[SetData]]"].size;
          });
          h(o.prototype, {
            has: function has(e) {
              r(this, "has");
              var t;
              if (this._storage && (t = Nr(e)) !== null) {
                return !!this._storage[t];
              }
              i(this);
              return this["[[SetData]]"].has(e);
            },
            add: function add(e) {
              r(this, "add");
              var t;
              if (this._storage && (t = Nr(e)) !== null) {
                this._storage[t] = true;
                return this;
              }
              i(this);
              this["[[SetData]]"].set(e, e);
              return this;
            },
            "delete": function(e) {
              r(this, "delete");
              var t;
              if (this._storage && (t = Nr(e)) !== null) {
                var n = D(this._storage, t);
                return delete this._storage[t] && n;
              }
              i(this);
              return this["[[SetData]]"]["delete"](e);
            },
            clear: function clear() {
              r(this, "clear");
              if (this._storage) {
                this._storage = Ar();
              } else {
                this["[[SetData]]"].clear();
              }
            },
            values: function values() {
              r(this, "values");
              i(this);
              return this["[[SetData]]"].values();
            },
            entries: function entries() {
              r(this, "entries");
              i(this);
              return this["[[SetData]]"].entries();
            },
            forEach: function forEach(e) {
              r(this, "forEach");
              var n = arguments.length > 1 ? arguments[1] : null;
              var o = this;
              i(o);
              this["[[SetData]]"].forEach(function(r, i) {
                if (n) {
                  t(e, n, i, i, o);
                } else {
                  e(i, i, o);
                }
              });
            }
          });
          y(o.prototype, "keys", o.prototype.values, true);
          de(o.prototype, o.prototype.values);
          return o;
        }()
      };
      if (j.Map || j.Set) {
        var Fr = i(function() {
          return new Map([[1, 2]]).get(1) === 2;
        });
        if (!Fr) {
          var Dr = j.Map;
          j.Map = function Map() {
            if (!(this instanceof Map)) {
              throw new TypeError('Constructor Map requires "new"');
            }
            var e = new Dr;
            if (arguments.length > 0) {
              Rr(Map, e, arguments[0]);
            }
            delete e.constructor;
            Object.setPrototypeOf(e, j.Map.prototype);
            return e;
          };
          j.Map.prototype = m(Dr.prototype);
          y(j.Map.prototype, "constructor", j.Map, true);
          d.preserveToString(j.Map, Dr);
        }
        var zr = new Map;
        var Lr = function() {
          var e = new Map([[1, 0], [2, 0], [3, 0], [4, 0]]);
          e.set(-0, e);
          return e.get(0) === e && e.get(-0) === e && e.has(0) && e.has(-0);
        }();
        var qr = zr.set(1, 2) === zr;
        if (!Lr || !qr) {
          var Wr = Map.prototype.set;
          K(Map.prototype, "set", function set(e, r) {
            t(Wr, this, e === 0 ? 0 : e, r);
            return this;
          });
        }
        if (!Lr) {
          var Gr = Map.prototype.get;
          var Br = Map.prototype.has;
          h(Map.prototype, {
            get: function get(e) {
              return t(Gr, this, e === 0 ? 0 : e);
            },
            has: function has(e) {
              return t(Br, this, e === 0 ? 0 : e);
            }
          }, true);
          d.preserveToString(Map.prototype.get, Gr);
          d.preserveToString(Map.prototype.has, Br);
        }
        var Hr = new Set;
        var $r = function(e) {
          e["delete"](0);
          e.add(-0);
          return !e.has(0);
        }(Hr);
        var Vr = Hr.add(1) === Hr;
        if (!$r || !Vr) {
          var Jr = Set.prototype.add;
          Set.prototype.add = function add(e) {
            t(Jr, this, e === 0 ? 0 : e);
            return this;
          };
          d.preserveToString(Set.prototype.add, Jr);
        }
        if (!$r) {
          var Kr = Set.prototype.has;
          Set.prototype.has = function has(e) {
            return t(Kr, this, e === 0 ? 0 : e);
          };
          d.preserveToString(Set.prototype.has, Kr);
          var Ur = Set.prototype["delete"];
          Set.prototype["delete"] = function SetDelete(e) {
            return t(Ur, this, e === 0 ? 0 : e);
          };
          d.preserveToString(Set.prototype["delete"], Ur);
        }
        var Xr = O(j.Map, function(e) {
          var t = new e([]);
          t.set(42, 42);
          return t instanceof e;
        });
        var Zr = Object.setPrototypeOf && !Xr;
        var Qr = function() {
          try {
            return !(j.Map() instanceof j.Map);
          } catch (e) {
            return e instanceof TypeError;
          }
        }();
        if (j.Map.length !== 0 || Zr || !Qr) {
          var Yr = j.Map;
          j.Map = function Map() {
            if (!(this instanceof Map)) {
              throw new TypeError('Constructor Map requires "new"');
            }
            var e = new Yr;
            if (arguments.length > 0) {
              Rr(Map, e, arguments[0]);
            }
            delete e.constructor;
            Object.setPrototypeOf(e, Map.prototype);
            return e;
          };
          j.Map.prototype = Yr.prototype;
          y(j.Map.prototype, "constructor", j.Map, true);
          d.preserveToString(j.Map, Yr);
        }
        var en = O(j.Set, function(e) {
          var t = new e([]);
          t.add(42, 42);
          return t instanceof e;
        });
        var tn = Object.setPrototypeOf && !en;
        var rn = function() {
          try {
            return !(j.Set() instanceof j.Set);
          } catch (e) {
            return e instanceof TypeError;
          }
        }();
        if (j.Set.length !== 0 || tn || !rn) {
          var nn = j.Set;
          j.Set = function Set() {
            if (!(this instanceof Set)) {
              throw new TypeError('Constructor Set requires "new"');
            }
            var e = new nn;
            if (arguments.length > 0) {
              kr(Set, e, arguments[0]);
            }
            delete e.constructor;
            Object.setPrototypeOf(e, Set.prototype);
            return e;
          };
          j.Set.prototype = nn.prototype;
          y(j.Set.prototype, "constructor", j.Set, true);
          d.preserveToString(j.Set, nn);
        }
        var on = !i(function() {
          return (new Map).keys().next().done;
        });
        if (typeof j.Map.prototype.clear !== "function" || (new j.Set).size !== 0 || (new j.Map).size !== 0 || typeof j.Map.prototype.keys !== "function" || typeof j.Set.prototype.keys !== "function" || typeof j.Map.prototype.forEach !== "function" || typeof j.Set.prototype.forEach !== "function" || a(j.Map) || a(j.Set) || typeof(new j.Map).keys().next !== "function" || on || !Xr) {
          h(j, {
            Map: _r.Map,
            Set: _r.Set
          }, true);
        }
        if (j.Set.prototype.keys !== j.Set.prototype.values) {
          y(j.Set.prototype, "keys", j.Set.prototype.values, true);
        }
        de(Object.getPrototypeOf((new j.Map).keys()));
        de(Object.getPrototypeOf((new j.Set).keys()));
        if (f && j.Set.prototype.has.name !== "has") {
          var an = j.Set.prototype.has;
          K(j.Set.prototype, "has", function has(e) {
            return t(an, this, e);
          });
        }
      }
      h(j, _r);
      be(j.Map);
      be(j.Set);
    }
    var un = function throwUnlessTargetIsObject(e) {
      if (!Y.TypeIsObject(e)) {
        throw new TypeError("target must be an object");
      }
    };
    var sn = {
      apply: function apply() {
        return Y.Call(Y.Call, null, arguments);
      },
      construct: function construct(e, t) {
        if (!Y.IsConstructor(e)) {
          throw new TypeError("First argument must be a constructor.");
        }
        var r = arguments.length < 3 ? e : arguments[2];
        if (!Y.IsConstructor(r)) {
          throw new TypeError("new.target must be a constructor.");
        }
        return Y.Construct(e, t, r, "internal");
      },
      deleteProperty: function deleteProperty(e, t) {
        un(e);
        if (s) {
          var r = Object.getOwnPropertyDescriptor(e, t);
          if (r && !r.configurable) {
            return false;
          }
        }
        return delete e[t];
      },
      enumerate: function enumerate(e) {
        un(e);
        return new He(e, "key");
      },
      has: function has(e, t) {
        un(e);
        return t in e;
      }
    };
    if (Object.getOwnPropertyNames) {
      Object.assign(sn, {ownKeys: function ownKeys(e) {
          un(e);
          var t = Object.getOwnPropertyNames(e);
          if (Y.IsCallable(Object.getOwnPropertySymbols)) {
            C(t, Object.getOwnPropertySymbols(e));
          }
          return t;
        }});
    }
    var fn = function ConvertExceptionToBoolean(e) {
      return !o(e);
    };
    if (Object.preventExtensions) {
      Object.assign(sn, {
        isExtensible: function isExtensible(e) {
          un(e);
          return Object.isExtensible(e);
        },
        preventExtensions: function preventExtensions(e) {
          un(e);
          return fn(function() {
            Object.preventExtensions(e);
          });
        }
      });
    }
    if (s) {
      var cn = function get(e, t, r) {
        var n = Object.getOwnPropertyDescriptor(e, t);
        if (!n) {
          var o = Object.getPrototypeOf(e);
          if (o === null) {
            return undefined;
          }
          return cn(o, t, r);
        }
        if ("value" in n) {
          return n.value;
        }
        if (n.get) {
          return Y.Call(n.get, r);
        }
        return undefined;
      };
      var ln = function set(e, r, n, o) {
        var i = Object.getOwnPropertyDescriptor(e, r);
        if (!i) {
          var a = Object.getPrototypeOf(e);
          if (a !== null) {
            return ln(a, r, n, o);
          }
          i = {
            value: void 0,
            writable: true,
            enumerable: true,
            configurable: true
          };
        }
        if ("value" in i) {
          if (!i.writable) {
            return false;
          }
          if (!Y.TypeIsObject(o)) {
            return false;
          }
          var u = Object.getOwnPropertyDescriptor(o, r);
          if (u) {
            return Z.defineProperty(o, r, {value: n});
          } else {
            return Z.defineProperty(o, r, {
              value: n,
              writable: true,
              enumerable: true,
              configurable: true
            });
          }
        }
        if (i.set) {
          t(i.set, o, n);
          return true;
        }
        return false;
      };
      Object.assign(sn, {
        defineProperty: function defineProperty(e, t, r) {
          un(e);
          return fn(function() {
            Object.defineProperty(e, t, r);
          });
        },
        getOwnPropertyDescriptor: function getOwnPropertyDescriptor(e, t) {
          un(e);
          return Object.getOwnPropertyDescriptor(e, t);
        },
        get: function get(e, t) {
          un(e);
          var r = arguments.length > 2 ? arguments[2] : e;
          return cn(e, t, r);
        },
        set: function set(e, t, r) {
          un(e);
          var n = arguments.length > 3 ? arguments[3] : e;
          return ln(e, t, r, n);
        }
      });
    }
    if (Object.getPrototypeOf) {
      var pn = Object.getPrototypeOf;
      sn.getPrototypeOf = function getPrototypeOf(e) {
        un(e);
        return pn(e);
      };
    }
    if (Object.setPrototypeOf && sn.getPrototypeOf) {
      var vn = function(e, t) {
        var r = t;
        while (r) {
          if (e === r) {
            return true;
          }
          r = sn.getPrototypeOf(r);
        }
        return false;
      };
      Object.assign(sn, {setPrototypeOf: function setPrototypeOf(e, t) {
          un(e);
          if (t !== null && !Y.TypeIsObject(t)) {
            throw new TypeError("proto must be an object or null");
          }
          if (t === Z.getPrototypeOf(e)) {
            return true;
          }
          if (Z.isExtensible && !Z.isExtensible(e)) {
            return false;
          }
          if (vn(e, t)) {
            return false;
          }
          Object.setPrototypeOf(e, t);
          return true;
        }});
    }
    var yn = function(e, t) {
      if (!Y.IsCallable(j.Reflect[e])) {
        y(j.Reflect, e, t);
      } else {
        var r = i(function() {
          j.Reflect[e](1);
          j.Reflect[e](NaN);
          j.Reflect[e](true);
          return true;
        });
        if (r) {
          K(j.Reflect, e, t);
        }
      }
    };
    Object.keys(sn).forEach(function(e) {
      yn(e, sn[e]);
    });
    if (f && j.Reflect.getPrototypeOf.name !== "getPrototypeOf") {
      var hn = j.Reflect.getPrototypeOf;
      K(j.Reflect, "getPrototypeOf", function getPrototypeOf(e) {
        return t(hn, j.Reflect, e);
      });
    }
    if (j.Reflect.setPrototypeOf) {
      if (i(function() {
        j.Reflect.setPrototypeOf(1, {});
        return true;
      })) {
        K(j.Reflect, "setPrototypeOf", sn.setPrototypeOf);
      }
    }
    if (j.Reflect.defineProperty) {
      if (!i(function() {
        var e = !j.Reflect.defineProperty(1, "test", {value: 1});
        var t = typeof Object.preventExtensions !== "function" || !j.Reflect.defineProperty(Object.preventExtensions({}), "test", {});
        return e && t;
      })) {
        K(j.Reflect, "defineProperty", sn.defineProperty);
      }
    }
    if (j.Reflect.construct) {
      if (!i(function() {
        var e = function F() {};
        return j.Reflect.construct(function() {}, [], e) instanceof e;
      })) {
        K(j.Reflect, "construct", sn.construct);
      }
    }
    if (String(new Date(NaN)) !== "Invalid Date") {
      var gn = Date.prototype.toString;
      var bn = function toString() {
        var e = +this;
        if (e !== e) {
          return "Invalid Date";
        }
        return Y.Call(gn, this);
      };
      K(Date.prototype, "toString", bn);
    }
    var dn = {
      anchor: function anchor(e) {
        return Y.CreateHTML(this, "a", "name", e);
      },
      big: function big() {
        return Y.CreateHTML(this, "big", "", "");
      },
      blink: function blink() {
        return Y.CreateHTML(this, "blink", "", "");
      },
      bold: function bold() {
        return Y.CreateHTML(this, "b", "", "");
      },
      fixed: function fixed() {
        return Y.CreateHTML(this, "tt", "", "");
      },
      fontcolor: function fontcolor(e) {
        return Y.CreateHTML(this, "font", "color", e);
      },
      fontsize: function fontsize(e) {
        return Y.CreateHTML(this, "font", "size", e);
      },
      italics: function italics() {
        return Y.CreateHTML(this, "i", "", "");
      },
      link: function link(e) {
        return Y.CreateHTML(this, "a", "href", e);
      },
      small: function small() {
        return Y.CreateHTML(this, "small", "", "");
      },
      strike: function strike() {
        return Y.CreateHTML(this, "strike", "", "");
      },
      sub: function sub() {
        return Y.CreateHTML(this, "sub", "", "");
      },
      sup: function sub() {
        return Y.CreateHTML(this, "sup", "", "");
      }
    };
    c(Object.keys(dn), function(e) {
      var r = String.prototype[e];
      var n = false;
      if (Y.IsCallable(r)) {
        var o = t(r, "", ' " ');
        var i = I([], o.match(/"/g)).length;
        n = o !== o.toLowerCase() || i > 2;
      } else {
        n = true;
      }
      if (n) {
        K(String.prototype, e, dn[e]);
      }
    });
    var mn = function() {
      if (!U) {
        return false;
      }
      var e = typeof JSON === "object" && typeof JSON.stringify === "function" ? JSON.stringify : null;
      if (!e) {
        return false;
      }
      if (typeof e(q()) !== "undefined") {
        return true;
      }
      if (e([q()]) !== "[null]") {
        return true;
      }
      var t = {a: q()};
      t[q()] = true;
      if (e(t) !== "{}") {
        return true;
      }
      return false;
    }();
    var On = i(function() {
      if (!U) {
        return true;
      }
      return JSON.stringify(Object(q())) === "{}" && JSON.stringify([Object(q())]) === "[{}]";
    });
    if (mn || !On) {
      var wn = JSON.stringify;
      K(JSON, "stringify", function stringify(e) {
        if (typeof e === "symbol") {
          return;
        }
        var n;
        if (arguments.length > 1) {
          n = arguments[1];
        }
        var o = [e];
        if (!r(n)) {
          var i = Y.IsCallable(n) ? n : null;
          var a = function(e, r) {
            var o = n ? t(n, this, e, r) : r;
            if (typeof o !== "symbol") {
              if (J.symbol(o)) {
                return St({})(o);
              } else {
                return o;
              }
            }
          };
          o.push(a);
        } else {
          o.push(n);
        }
        if (arguments.length > 2) {
          o.push(arguments[2]);
        }
        return wn.apply(this, o);
      });
    }
    return j;
  });
})(require('process'));
