{"version":3,"sources":["webpack:///webpack/bootstrap aede04a26ecdae4b4a05","webpack:///./src/global/node.ts","webpack:///./src/reflect-metadata.ts","webpack:///./src/helper/get-proto-of-type.ts","webpack:///./src/helper/to-property-key.ts","webpack:///./src/helper/is-symbol.ts","webpack:///./src/helper/is-constructor.ts","webpack:///./src/helper/is-undefined.ts","webpack:///./src/helper/is-array.ts","webpack:///./src/helper/is-object.ts","webpack:///./src/helper/metadata.ts","webpack:///./src/shim/weakmap.ts","webpack:///./src/helper/create-unique-key.ts","webpack:///./src/helper/helper-constants.ts","webpack:///./src/helper/has-own.ts","webpack:///./src/helper/create-uuid.ts","webpack:///./src/helper/gen-randombytes.ts","webpack:///external \"crypto\"","webpack:///./src/helper/get-or-create-weakmap.ts","webpack:///./src/helper/ordinary-own-metadata-keys.ts","webpack:///./src/helper/get-or-create-metadata-map.ts","webpack:///./src/shim/map.ts","webpack:///./src/helper/ordinary-metadata-keys.ts","webpack:///./src/shim/set.ts"],"names":["decorate","metadata","metadata.decorator","defineMetadata","hasMetadata","hasOwnMetadata","getMetadata","getOwnMetadata","getMetadataKeys","getOwnMetadataKeys","deleteMetadata","DecorateConstructor","DecoratePropertyWithDescriptor","DecoratePropertyWithoutDescriptor","OrdinaryHasMetadata","OrdinaryHasOwnMetadata","OrdinaryGetMetadata","OrdinaryGetOwnMetadata","OrdinaryDefineOwnMetadata","getProtoOfType","toPropertyKey","isSymbol","isConstructor","isUndefined","isArray","isObject","WeakMap","WeakMap.constructor","WeakMap.has","WeakMap.get","WeakMap.set","WeakMap.delete","WeakMap.clear","createWeakMapPolyfill","createUniqueKey","createUUID","genRandomBytes","getOrCreateWeakMapTable","ordinaryOwnMetadataKeys","getOrCreateMetadataMap","Map","Map.constructor","Map.size","Map.has","Map.get","Map.set","Map.delete","Map.clear","Map.forEach","Map._find","createMapPolyfill","ordinaryMetadataKeys","Set","Set.constructor","Set.size","Set.has","Set.add","Set.delete","Set.clear","Set.forEach","createSetPolyfill"],"mappings":"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A,oBAAQA,CAACA,MAAMA,CAACA,CAACA,CAACA,CAACA;SACtBA,MAAMA,IAAIA,SAASA,EAAEA,CAACA;KACxBA,CAACA;KACDA,IAAIA,CAACA,EAAEA,CAACA,CAACA,CAACA,0BAAWA,CAACA,SAASA,CAACA,CAACA,CAACA,CAACA;SACjCA,SAASA,GAAGA,+BAAaA,CAACA,SAASA,CAACA,CAACA;KACvCA,CAACA;KAEDA,MAAMA,CAACA,mBAAmBA,CAACA,WAAWA,EAAEA,MAAMA,EAAEA,SAASA,CAACA,CAACA;AAC7DA,EAACA;AATe,oBAAW,cAS1B;AAkDD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAiCG;AACH,yBAA+B,WAAgB,EAAE,MAAc,EAAE,SAA2B;KAC1FC,EAAEA,CAACA,CAACA,CAACA,oBAAQA,CAACA,MAAMA,CAACA,CAACA,CAACA,CAACA;SACtBA,MAAMA,IAAIA,SAASA,EAAEA,CAACA;KACxBA,CAACA;KACDA,IAAIA,CAACA,EAAEA,CAACA,CAACA,CAACA,0BAAWA,CAACA,SAASA,CAACA,CAACA,CAACA,CAACA;SACjCA,SAASA,GAAGA,+BAAaA,CAACA,SAASA,CAACA,CAACA;KACvCA,CAACA;KAEDA,MAAMA,CAACA,sBAAsBA,CAACA,WAAWA,EAAEA,MAAMA,EAAEA,SAASA,CAACA,CAACA;AAChEA,EAACA;AATe,uBAAc,iBAS7B;AAkDD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAiCG;AACH,sBAA4B,WAAgB,EAAE,MAAc,EAAE,SAA2B;KACvFC,EAAEA,CAACA,CAACA,CAACA,oBAAQA,CAACA,MAAMA,CAACA,CAACA,CAACA,CAACA;SACtBA,MAAMA,IAAIA,SAASA,EAAEA,CAACA;KACxBA,CAACA;KACDA,IAAIA,CAACA,EAAEA,CAACA,CAACA,CAACA,0BAAWA,CAACA,SAASA,CAACA,CAACA,CAACA,CAACA;SACjCA,SAASA,GAAGA,+BAAaA,CAACA,SAASA,CAACA,CAACA;KACvCA,CAACA;KAEDA,MAAMA,CAACA,mBAAmBA,CAACA,WAAWA,EAAEA,MAAMA,EAAEA,SAASA,CAACA,CAACA;AAC7DA,EAACA;AATe,oBAAW,cAS1B;AAkDD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAiCG;AACH,yBAA+B,WAAgB,EAAE,MAAc,EAAE,SAA2B;KAC1FC,EAAEA,CAACA,CAACA,CAACA,oBAAQA,CAACA,MAAMA,CAACA,CAACA,CAACA,CAACA;SACtBA,MAAMA,IAAIA,SAASA,EAAEA,CAACA;KACxBA,CAACA;KACDA,IAAIA,CAACA,EAAEA,CAACA,CAACA,CAACA,0BAAWA,CAACA,SAASA,CAACA,CAACA,CAACA,CAACA;SACjCA,SAASA,GAAGA,+BAAaA,CAACA,SAASA,CAACA,CAACA;KACvCA,CAACA;KAEDA,MAAMA,CAACA,sBAAsBA,CAACA,WAAWA,EAAEA,MAAMA,EAAEA,SAASA,CAACA,CAACA;AAChEA,EAACA;AATe,uBAAc,iBAS7B;AAgDD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAgCG;AACH,0BAAgC,MAAc,EAAE,SAA2B;KACzEC,EAAEA,CAACA,CAACA,CAACA,oBAAQA,CAACA,MAAMA,CAACA,CAACA,CAACA,CAACA;SACtBA,MAAMA,IAAIA,SAASA,EAAEA,CAACA;KACxBA,CAACA;KACDA,IAAIA,CAACA,EAAEA,CAACA,CAACA,CAACA,0BAAWA,CAACA,SAASA,CAACA,CAACA,CAACA,CAACA;SACjCA,SAASA,GAAGA,+BAAaA,CAACA,SAASA,CAACA,CAACA;KACvCA,CAACA;KAEDA,MAAMA,CAACA,6CAAoBA,CAACA,MAAMA,EAAEA,SAASA,CAACA,CAACA;AACjDA,EAACA;AATe,wBAAe,kBAS9B;AAgDD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAgCG;AACH,6BAAmC,MAAc,EAAE,SAA2B;KAC5EC,EAAEA,CAACA,CAACA,CAACA,oBAAQA,CAACA,MAAMA,CAACA,CAACA,CAACA,CAACA;SACtBA,MAAMA,IAAIA,SAASA,EAAEA,CAACA;KACxBA,CAACA;KACDA,IAAIA,CAACA,EAAEA,CAACA,CAACA,CAACA,0BAAWA,CAACA,SAASA,CAACA,CAACA,CAACA,CAACA;SACjCA,SAASA,GAAGA,+BAAaA,CAACA,SAASA,CAACA,CAACA;KACvCA,CAACA;KAEDA,MAAMA,CAACA,oDAAuBA,CAACA,MAAMA,EAAEA,SAASA,CAACA,CAACA;AACpDA,EAACA;AATe,2BAAkB,qBASjC;AAkDD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAiCG;AACH,yBAA+B,WAAgB,EAAE,MAAc,EAAE,SAA2B;KAC1FC,EAAEA,CAACA,CAACA,CAACA,oBAAQA,CAACA,MAAMA,CAACA,CAACA,CAACA,CAACA;SACtBA,MAAMA,IAAIA,SAASA,EAAEA,CAACA;KACxBA,CAACA;KACDA,IAAIA,CAACA,EAAEA,CAACA,CAACA,CAACA,0BAAWA,CAACA,SAASA,CAACA,CAACA,CAACA,CAACA;SACjCA,SAASA,GAAGA,+BAAaA,CAACA,SAASA,CAACA,CAACA;KACvCA,CAACA;KAEDA,4GAA4GA;KAC5GA,IAAIA,WAAWA,GAAGA,mDAAsBA,CAACA,MAAMA,EAAEA,SAASA,EAAEA,UAAUA,CAACA,KAAKA,CAACA,CAACA;KAC9EA,EAAEA,CAACA,CAACA,0BAAWA,CAACA,WAAWA,CAACA,CAACA,CAACA,CAACA;SAC7BA,MAAMA,CAACA,KAAKA,CAACA;KACfA,CAACA;KAEDA,EAAEA,CAACA,CAACA,CAACA,WAAWA,CAACA,MAAMA,CAACA,WAAWA,CAACA,CAACA,CAACA,CAACA;SACrCA,MAAMA,CAACA,KAAKA,CAACA;KACfA,CAACA;KAEDA,EAAEA,CAACA,CAACA,WAAWA,CAACA,IAAIA,GAAGA,CAACA,CAACA,CAACA,CAACA;SACzBA,MAAMA,CAACA,IAAIA,CAACA;KACdA,CAACA;KAEDA,IAAIA,cAAcA,GAAGA,uBAAYA,CAACA,GAAGA,CAACA,MAAMA,CAACA,CAACA;KAC9CA,cAAcA,CAACA,MAAMA,CAACA,SAASA,CAACA,CAACA;KACjCA,EAAEA,CAACA,CAACA,cAAcA,CAACA,IAAIA,GAAGA,CAACA,CAACA,CAACA,CAACA;SAC5BA,MAAMA,CAACA,IAAIA,CAACA;KACdA,CAACA;KAEDA,uBAAYA,CAACA,MAAMA,CAACA,MAAMA,CAACA,CAACA;KAC5BA,MAAMA,CAACA,IAAIA,CAACA;AACdA,EAACA;AA9Be,uBAAc,iBA8B7B;AAED,8BAA6B,UAA4B,EAAE,MAAgB;KACzEC,GAAGA,CAACA,CAACA,GAAGA,CAACA,CAACA,GAAGA,UAAUA,CAACA,MAAMA,GAAGA,CAACA,EAAEA,CAACA,IAAIA,CAACA,EAAEA,EAAEA,CAACA,EAAEA,CAACA;SAChDA,IAAIA,SAASA,GAAGA,UAAUA,CAACA,CAACA,CAACA,CAACA;SAC9BA,IAAIA,SAASA,GAAGA,SAASA,CAACA,MAAMA,CAACA,CAACA;SAClCA,EAAEA,CAACA,CAACA,CAACA,0BAAWA,CAACA,SAASA,CAACA,CAACA,CAACA,CAACA;aAC5BA,EAAEA,CAACA,CAACA,CAACA,8BAAaA,CAACA,SAASA,CAACA,CAACA,CAACA,CAACA;iBAC9BA,MAAMA,IAAIA,SAASA,EAAEA,CAACA;aACxBA,CAACA;aACDA,MAAMA,GAAaA,SAASA,CAACA;SAC/BA,CAACA;KACHA,CAACA;KACDA,MAAMA,CAACA,MAAMA,CAACA;AAChBA,EAACA;AAED,yCAAwC,UAA6B,EAAE,MAAc,EAAE,WAA4B,EAAE,UAA8B;KACjJC,GAAGA,CAACA,CAACA,GAAGA,CAACA,CAACA,GAAGA,UAAUA,CAACA,MAAMA,GAAGA,CAACA,EAAEA,CAACA,IAAIA,CAACA,EAAEA,EAAEA,CAACA,EAAEA,CAACA;SAChDA,IAAIA,SAASA,GAAGA,UAAUA,CAACA,CAACA,CAACA,CAACA;SAC9BA,IAAIA,SAASA,GAAGA,SAASA,CAACA,MAAMA,EAAEA,WAAWA,EAAEA,UAAUA,CAACA,CAACA;SAC3DA,EAAEA,CAACA,CAACA,CAACA,0BAAWA,CAACA,SAASA,CAACA,CAACA,CAACA,CAACA;aAC5BA,EAAEA,CAACA,CAACA,CAACA,oBAAQA,CAACA,SAASA,CAACA,CAACA,CAACA,CAACA;iBACzBA,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","file":"node.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap aede04a26ecdae4b4a05\n **/","import * as Reflect from \"../reflect-metadata\";\nexport * from \"../reflect-metadata\";\n\n(<any>global).Reflect = Reflect;\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/global/node.ts\n **/","/*! *****************************************************************************\nCopyright (C) Microsoft. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\nimport {createUniqueKey} from \"./helper/create-unique-key\";\nimport {getProtoOfType} from \"./helper/get-proto-of-type\";\nimport {toPropertyKey} from \"./helper/to-property-key\";\nimport {isConstructor} from \"./helper/is-constructor\";\nimport {isUndefined} from \"./helper/is-undefined\";\nimport {isArray} from \"./helper/is-array\";\nimport {isObject} from \"./helper/is-object\";\nimport {__Metadata__} from \"./helper/metadata\";\nimport {ordinaryOwnMetadataKeys} from \"./helper/ordinary-own-metadata-keys\";\nimport {getOrCreateMetadataMap} from \"./helper/get-or-create-metadata-map\";\nimport {ordinaryMetadataKeys} from \"./helper/ordinary-metadata-keys\";\n\nimport {createSetPolyfill} from \"./shim/set\";\n\n\n// Load global or shim versions of Map, Set, and WeakMap\n// TODO: fix the typescript types\n\n/**\n * Applies a set of decorators to a target object.\n * @param decorators An array of decorators.\n * @param target The target object.\n * @returns The result of applying the provided decorators.\n * @remarks Decorators are applied in reverse order of their positions in the array.\n * @example\n *\n *     class C { }\n *\n *     // constructor\n *     C = Reflect.decorate(decoratorsArray, C);\n *\n */\nexport function decorate(decorators: ClassDecorator[], target: Function): Function;\n\n/**\n * Applies a set of decorators to a property of a target object.\n * @param decorators An array of decorators.\n * @param target The target object.\n * @param targetKey The property key to decorate.\n * @param descriptor A property descriptor\n * @remarks Decorators are applied in reverse order.\n * @example\n *\n *     class C {\n *         // property declarations are not part of ES6, though they are valid in TypeScript:\n *         // static staticProperty;\n *         // property;\n *\n *         static staticMethod() { }\n *         method() { }\n *     }\n *\n *     // property (on constructor)\n *     Reflect.decorate(decoratorsArray, C, \"staticProperty\");\n *\n *     // property (on prototype)\n *     Reflect.decorate(decoratorsArray, C.prototype, \"property\");\n *\n *     // method (on constructor)\n *     Object.defineProperty(C, \"staticMethod\",\n *         Reflect.decorate(decoratorsArray, C, \"staticMethod\",\n *             Object.getOwnPropertyDescriptor(C, \"staticMethod\")));\n *\n *     // method (on prototype)\n *     Object.defineProperty(C.prototype, \"method\",\n *         Reflect.decorate(decoratorsArray, C.prototype, \"method\",\n *             Object.getOwnPropertyDescriptor(C.prototype, \"method\")));\n *\n */\nexport function decorate(decorators: (PropertyDecorator | MethodDecorator)[], target: Object, targetKey: string | symbol, descriptor?: PropertyDescriptor): PropertyDescriptor;\n\n/**\n * Applies a set of decorators to a property of a target object.\n * @param decorators An array of decorators.\n * @param target The target object.\n * @param targetKey (Optional) The property key to decorate.\n * @param targetDescriptor (Optional) The property descriptor for the target key\n * @remarks Decorators are applied in reverse order.\n * @example\n *\n *     class C {\n *         // property declarations are not part of ES6, though they are valid in TypeScript:\n *         // static staticProperty;\n *         // property;\n *\n *         constructor(p) { }\n *         static staticMethod(p) { }\n *         method(p) { }\n *     }\n *\n *     // constructor\n *     C = Reflect.decorate(decoratorsArray, C);\n *\n *     // property (on constructor)\n *     Reflect.decorate(decoratorsArray, C, \"staticProperty\");\n *\n *     // property (on prototype)\n *     Reflect.decorate(decoratorsArray, C.prototype, \"property\");\n *\n *     // method (on constructor)\n *     Object.defineProperty(C, \"staticMethod\",\n *         Reflect.decorate(decoratorsArray, C, \"staticMethod\",\n *             Object.getOwnPropertyDescriptor(C, \"staticMethod\")));\n *\n *     // method (on prototype)\n *     Object.defineProperty(C.prototype, \"method\",\n *         Reflect.decorate(decoratorsArray, C.prototype, \"method\",\n *             Object.getOwnPropertyDescriptor(C.prototype, \"method\")));\n *\n */\nexport function decorate(decorators: (ClassDecorator | MethodDecorator | PropertyDecorator)[], target: Object, targetKey?: string | symbol, targetDescriptor?: PropertyDescriptor): any {\n  if (!isUndefined(targetDescriptor)) {\n    if (!isArray(decorators)) {\n      throw new TypeError();\n    }\n    else if (!isObject(target)) {\n      throw new TypeError();\n    }\n    else if (isUndefined(targetKey)) {\n      throw new TypeError();\n    }\n    else if (!isObject(targetDescriptor)) {\n      throw new TypeError();\n    }\n\n    targetKey = toPropertyKey(targetKey);\n    return DecoratePropertyWithDescriptor(<MethodDecorator[]>decorators, target, targetKey, targetDescriptor);\n  }\n  else if (!isUndefined(targetKey)) {\n    if (!isArray(decorators)) {\n      throw new TypeError();\n    }\n    else if (!isObject(target)) {\n      throw new TypeError();\n    }\n\n    targetKey = toPropertyKey(targetKey);\n    return DecoratePropertyWithoutDescriptor(<PropertyDecorator[]>decorators, target, targetKey);\n  }\n  else {\n    if (!isArray(decorators)) {\n      throw new TypeError();\n    }\n    else if (!isConstructor(target)) {\n      throw new TypeError();\n    }\n\n    return DecorateConstructor(<ClassDecorator[]>decorators, <Function>target);\n  }\n}\n\n/**\n * A default metadata decorator factory that can be used on a class, class member, or parameter.\n * @param metadataKey The key for the metadata entry.\n * @param metadataValue The value for the metadata entry.\n * @returns A decorator function.\n * @remarks\n * If `metadataKey` is already defined for the target and target key, the\n * metadataValue for that key will be overwritten.\n * @example\n *\n *     // constructor\n *     @Reflect.metadata(key, value)\n *     class C {\n *     }\n *\n *     // property (on constructor, TypeScript only)\n *     class C {\n *         @Reflect.metadata(key, value)\n *         static staticProperty;\n *     }\n *\n *     // property (on prototype, TypeScript only)\n *     class C {\n *         @Reflect.metadata(key, value)\n *         property;\n *     }\n *\n *     // method (on constructor)\n *     class C {\n *         @Reflect.metadata(key, value)\n *         static staticMethod() { }\n *     }\n *\n *     // method (on prototype)\n *     class C {\n *         @Reflect.metadata(key, value)\n *         method() { }\n *     }\n *\n */\nexport function metadata(metadataKey: any, metadataValue: any) {\n  function decorator(target: Function): void;\n  function decorator(target: Object, targetKey: string | symbol): void;\n  function decorator(target: Object, targetKey?: string | symbol): void {\n    if (!isUndefined(targetKey)) {\n      if (!isObject(target)) {\n        throw new TypeError();\n      }\n\n      targetKey = toPropertyKey(targetKey);\n      OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, targetKey);\n    }\n    else {\n      if (!isConstructor(target)) {\n        throw new TypeError();\n      }\n\n      OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, /*targetKey*/ undefined);\n    }\n  }\n\n  return decorator;\n}\n\n/**\n * Define a unique metadata entry on the target.\n * @param metadataKey A key used to store and retrieve metadata.\n * @param metadataValue A value that contains attached metadata.\n * @param target The target object on which to define metadata.\n * @example\n *\n *     class C {\n *     }\n *\n *     // constructor\n *     Reflect.defineMetadata(\"custom:annotation\", options, C);\n *\n *     // decorator factory as metadata-producing annotation.\n *     function MyAnnotation(options): ClassDecorator {\n *         return target => Reflect.defineMetadata(\"custom:annotation\", options, target);\n *     }\n *\n */\nexport function defineMetadata(metadataKey: any, metadataValue: any, target: Object): void;\n\n/**\n * Define a unique metadata entry on the target.\n * @param metadataKey A key used to store and retrieve metadata.\n * @param metadataValue A value that contains attached metadata.\n * @param target The target object on which to define metadata.\n * @param targetKey The property key for the target.\n * @example\n *\n *     class C {\n *         // property declarations are not part of ES6, though they are valid in TypeScript:\n *         // static staticProperty;\n *         // property;\n *\n *         static staticMethod(p) { }\n *         method(p) { }\n *     }\n *\n *     // property (on constructor)\n *     Reflect.defineMetadata(\"custom:annotation\", Number, C, \"staticProperty\");\n *\n *     // property (on prototype)\n *     Reflect.defineMetadata(\"custom:annotation\", Number, C.prototype, \"property\");\n *\n *     // method (on constructor)\n *     Reflect.defineMetadata(\"custom:annotation\", Number, C, \"staticMethod\");\n *\n *     // method (on prototype)\n *     Reflect.defineMetadata(\"custom:annotation\", Number, C.prototype, \"method\");\n *\n *     // decorator factory as metadata-producing annotation.\n *     function MyAnnotation(options): PropertyDecorator {\n *         return (target, key) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\n *     }\n *\n */\nexport function defineMetadata(metadataKey: any, metadataValue: any, target: Object, targetKey: string | symbol): void;\n\n/**\n * Define a unique metadata entry on the target.\n * @param metadataKey A key used to store and retrieve metadata.\n * @param metadataValue A value that contains attached metadata.\n * @param target The target object on which to define metadata.\n * @param targetKey (Optional) The property key for the target.\n * @example\n *\n *     class C {\n *         // property declarations are not part of ES6, though they are valid in TypeScript:\n *         // static staticProperty;\n *         // property;\n *\n *         constructor(p) { }\n *         static staticMethod(p) { }\n *         method(p) { }\n *     }\n *\n *     // constructor\n *     Reflect.defineMetadata(\"custom:annotation\", options, C);\n *\n *     // property (on constructor)\n *     Reflect.defineMetadata(\"custom:annotation\", options, C, \"staticProperty\");\n *\n *     // property (on prototype)\n *     Reflect.defineMetadata(\"custom:annotation\", options, C.prototype, \"property\");\n *\n *     // method (on constructor)\n *     Reflect.defineMetadata(\"custom:annotation\", options, C, \"staticMethod\");\n *\n *     // method (on prototype)\n *     Reflect.defineMetadata(\"custom:annotation\", options, C.prototype, \"method\");\n *\n *     // decorator factory as metadata-producing annotation.\n *     function MyAnnotation(options): Decorator {\n *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\n *     }\n *\n */\nexport function defineMetadata(metadataKey: any, metadataValue: any, target: Object, targetKey?: string | symbol): void {\n  if (!isObject(target)) {\n    throw new TypeError();\n  }\n  else if (!isUndefined(targetKey)) {\n    targetKey = toPropertyKey(targetKey);\n  }\n\n  return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, targetKey);\n}\n\n/**\n * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n * @param metadataKey A key used to store and retrieve metadata.\n * @param target The target object on which the metadata is defined.\n * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n * @example\n *\n *     class C {\n *     }\n *\n *     // constructor\n *     result = Reflect.hasMetadata(\"custom:annotation\", C);\n *\n */\nexport function hasMetadata(metadataKey: any, target: Object): boolean;\n\n/**\n * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n * @param metadataKey A key used to store and retrieve metadata.\n * @param target The target object on which the metadata is defined.\n * @param targetKey The property key for the target.\n * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n * @example\n *\n *     class C {\n *         // property declarations are not part of ES6, though they are valid in TypeScript:\n *         // static staticProperty;\n *         // property;\n *\n *         static staticMethod(p) { }\n *         method(p) { }\n *     }\n *\n *     // property (on constructor)\n *     result = Reflect.hasMetadata(\"custom:annotation\", C, \"staticProperty\");\n *\n *     // property (on prototype)\n *     result = Reflect.hasMetadata(\"custom:annotation\", C.prototype, \"property\");\n *\n *     // method (on constructor)\n *     result = Reflect.hasMetadata(\"custom:annotation\", C, \"staticMethod\");\n *\n *     // method (on prototype)\n *     result = Reflect.hasMetadata(\"custom:annotation\", C.prototype, \"method\");\n *\n */\nexport function hasMetadata(metadataKey: any, target: Object, targetKey: string | symbol): boolean;\n\n/**\n * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n * @param metadataKey A key used to store and retrieve metadata.\n * @param target The target object on which the metadata is defined.\n * @param targetKey (Optional) The property key for the target.\n * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n * @example\n *\n *     class C {\n *         // property declarations are not part of ES6, though they are valid in TypeScript:\n *         // static staticProperty;\n *         // property;\n *\n *         constructor(p) { }\n *         static staticMethod(p) { }\n *         method(p) { }\n *     }\n *\n *     // constructor\n *     result = Reflect.hasMetadata(\"custom:annotation\", C);\n *\n *     // property (on constructor)\n *     result = Reflect.hasMetadata(\"custom:annotation\", C, \"staticProperty\");\n *\n *     // property (on prototype)\n *     result = Reflect.hasMetadata(\"custom:annotation\", C.prototype, \"property\");\n *\n *     // method (on constructor)\n *     result = Reflect.hasMetadata(\"custom:annotation\", C, \"staticMethod\");\n *\n *     // method (on prototype)\n *     result = Reflect.hasMetadata(\"custom:annotation\", C.prototype, \"method\");\n *\n */\nexport function hasMetadata(metadataKey: any, target: Object, targetKey?: string | symbol): boolean {\n  if (!isObject(target)) {\n    throw new TypeError();\n  }\n  else if (!isUndefined(targetKey)) {\n    targetKey = toPropertyKey(targetKey);\n  }\n\n  return OrdinaryHasMetadata(metadataKey, target, targetKey);\n}\n\n/**\n * Gets a value indicating whether the target object has the provided metadata key defined.\n * @param metadataKey A key used to store and retrieve metadata.\n * @param target The target object on which the metadata is defined.\n * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\n * @example\n *\n *     class C {\n *     }\n *\n *     // constructor\n *     result = Reflect.hasOwnMetadata(\"custom:annotation\", C);\n *\n */\nexport function hasOwnMetadata(metadataKey: any, target: Object): boolean;\n\n/**\n * Gets a value indicating whether the target object has the provided metadata key defined.\n * @param metadataKey A key used to store and retrieve metadata.\n * @param target The target object on which the metadata is defined.\n * @param targetKey The property key for the target.\n * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\n * @example\n *\n *     class C {\n *         // property declarations are not part of ES6, though they are valid in TypeScript:\n *         // static staticProperty;\n *         // property;\n *\n *         static staticMethod(p) { }\n *         method(p) { }\n *     }\n *\n *     // property (on constructor)\n *     result = Reflect.hasOwnMetadata(\"custom:annotation\", C, \"staticProperty\");\n *\n *     // property (on prototype)\n *     result = Reflect.hasOwnMetadata(\"custom:annotation\", C.prototype, \"property\");\n *\n *     // method (on constructor)\n *     result = Reflect.hasOwnMetadata(\"custom:annotation\", C, \"staticMethod\");\n *\n *     // method (on prototype)\n *     result = Reflect.hasOwnMetadata(\"custom:annotation\", C.prototype, \"method\");\n *\n */\nexport function hasOwnMetadata(metadataKey: any, target: Object, targetKey: string | symbol): boolean;\n\n/**\n * Gets a value indicating whether the target object has the provided metadata key defined.\n * @param metadataKey A key used to store and retrieve metadata.\n * @param target The target object on which the metadata is defined.\n * @param targetKey (Optional) The property key for the target.\n * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\n * @example\n *\n *     class C {\n *         // property declarations are not part of ES6, though they are valid in TypeScript:\n *         // static staticProperty;\n *         // property;\n *\n *         constructor(p) { }\n *         static staticMethod(p) { }\n *         method(p) { }\n *     }\n *\n *     // constructor\n *     result = Reflect.hasOwnMetadata(\"custom:annotation\", C);\n *\n *     // property (on constructor)\n *     result = Reflect.hasOwnMetadata(\"custom:annotation\", C, \"staticProperty\");\n *\n *     // property (on prototype)\n *     result = Reflect.hasOwnMetadata(\"custom:annotation\", C.prototype, \"property\");\n *\n *     // method (on constructor)\n *     result = Reflect.hasOwnMetadata(\"custom:annotation\", C, \"staticMethod\");\n *\n *     // method (on prototype)\n *     result = Reflect.hasOwnMetadata(\"custom:annotation\", C.prototype, \"method\");\n *\n */\nexport function hasOwnMetadata(metadataKey: any, target: Object, targetKey?: string | symbol): boolean {\n  if (!isObject(target)) {\n    throw new TypeError();\n  }\n  else if (!isUndefined(targetKey)) {\n    targetKey = toPropertyKey(targetKey);\n  }\n\n  return OrdinaryHasOwnMetadata(metadataKey, target, targetKey);\n}\n\n/**\n * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n * @param metadataKey A key used to store and retrieve metadata.\n * @param target The target object on which the metadata is defined.\n * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n * @example\n *\n *     class C {\n *     }\n *\n *     // constructor\n *     result = Reflect.getMetadata(\"custom:annotation\", C);\n *\n */\nexport function getMetadata(metadataKey: any, target: Object): any;\n\n/**\n * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n * @param metadataKey A key used to store and retrieve metadata.\n * @param target The target object on which the metadata is defined.\n * @param targetKey The property key for the target.\n * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n * @example\n *\n *     class C {\n *         // property declarations are not part of ES6, though they are valid in TypeScript:\n *         // static staticProperty;\n *         // property;\n *\n *         static staticMethod(p) { }\n *         method(p) { }\n *     }\n *\n *     // property (on constructor)\n *     result = Reflect.getMetadata(\"custom:annotation\", C, \"staticProperty\");\n *\n *     // property (on prototype)\n *     result = Reflect.getMetadata(\"custom:annotation\", C.prototype, \"property\");\n *\n *     // method (on constructor)\n *     result = Reflect.getMetadata(\"custom:annotation\", C, \"staticMethod\");\n *\n *     // method (on prototype)\n *     result = Reflect.getMetadata(\"custom:annotation\", C.prototype, \"method\");\n *\n */\nexport function getMetadata(metadataKey: any, target: Object, targetKey: string | symbol): any;\n\n/**\n * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n * @param metadataKey A key used to store and retrieve metadata.\n * @param target The target object on which the metadata is defined.\n * @param targetKey (Optional) The property key for the target.\n * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n * @example\n *\n *     class C {\n *         // property declarations are not part of ES6, though they are valid in TypeScript:\n *         // static staticProperty;\n *         // property;\n *\n *         constructor(p) { }\n *         static staticMethod(p) { }\n *         method(p) { }\n *     }\n *\n *     // constructor\n *     result = Reflect.getMetadata(\"custom:annotation\", C);\n *\n *     // property (on constructor)\n *     result = Reflect.getMetadata(\"custom:annotation\", C, \"staticProperty\");\n *\n *     // property (on prototype)\n *     result = Reflect.getMetadata(\"custom:annotation\", C.prototype, \"property\");\n *\n *     // method (on constructor)\n *     result = Reflect.getMetadata(\"custom:annotation\", C, \"staticMethod\");\n *\n *     // method (on prototype)\n *     result = Reflect.getMetadata(\"custom:annotation\", C.prototype, \"method\");\n *\n */\nexport function getMetadata(metadataKey: any, target: Object, targetKey?: string | symbol): any {\n  if (!isObject(target)) {\n    throw new TypeError();\n  }\n  else if (!isUndefined(targetKey)) {\n    targetKey = toPropertyKey(targetKey);\n  }\n\n  return OrdinaryGetMetadata(metadataKey, target, targetKey);\n}\n\n/**\n * Gets the metadata value for the provided metadata key on the target object.\n * @param metadataKey A key used to store and retrieve metadata.\n * @param target The target object on which the metadata is defined.\n * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n * @example\n *\n *     class C {\n *     }\n *\n *     // constructor\n *     result = Reflect.getOwnMetadata(\"custom:annotation\", C);\n *\n */\nexport function getOwnMetadata(metadataKey: any, target: Object): any;\n\n/**\n * Gets the metadata value for the provided metadata key on the target object.\n * @param metadataKey A key used to store and retrieve metadata.\n * @param target The target object on which the metadata is defined.\n * @param targetKey The property key for the target.\n * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n * @example\n *\n *     class C {\n *         // property declarations are not part of ES6, though they are valid in TypeScript:\n *         // static staticProperty;\n *         // property;\n *\n *         static staticMethod(p) { }\n *         method(p) { }\n *     }\n *\n *     // property (on constructor)\n *     result = Reflect.getOwnMetadata(\"custom:annotation\", C, \"staticProperty\");\n *\n *     // property (on prototype)\n *     result = Reflect.getOwnMetadata(\"custom:annotation\", C.prototype, \"property\");\n *\n *     // method (on constructor)\n *     result = Reflect.getOwnMetadata(\"custom:annotation\", C, \"staticMethod\");\n *\n *     // method (on prototype)\n *     result = Reflect.getOwnMetadata(\"custom:annotation\", C.prototype, \"method\");\n *\n */\nexport function getOwnMetadata(metadataKey: any, target: Object, targetKey: string | symbol): any;\n\n/**\n * Gets the metadata value for the provided metadata key on the target object.\n * @param metadataKey A key used to store and retrieve metadata.\n * @param target The target object on which the metadata is defined.\n * @param targetKey (Optional) The property key for the target.\n * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n * @example\n *\n *     class C {\n *         // property declarations are not part of ES6, though they are valid in TypeScript:\n *         // static staticProperty;\n *         // property;\n *\n *         constructor(p) { }\n *         static staticMethod(p) { }\n *         method(p) { }\n *     }\n *\n *     // constructor\n *     result = Reflect.getOwnMetadata(\"custom:annotation\", C);\n *\n *     // property (on constructor)\n *     result = Reflect.getOwnMetadata(\"custom:annotation\", C, \"staticProperty\");\n *\n *     // property (on prototype)\n *     result = Reflect.getOwnMetadata(\"custom:annotation\", C.prototype, \"property\");\n *\n *     // method (on constructor)\n *     result = Reflect.getOwnMetadata(\"custom:annotation\", C, \"staticMethod\");\n *\n *     // method (on prototype)\n *     result = Reflect.getOwnMetadata(\"custom:annotation\", C.prototype, \"method\");\n *\n */\nexport function getOwnMetadata(metadataKey: any, target: Object, targetKey?: string | symbol): any {\n  if (!isObject(target)) {\n    throw new TypeError();\n  }\n  else if (!isUndefined(targetKey)) {\n    targetKey = toPropertyKey(targetKey);\n  }\n\n  return OrdinaryGetOwnMetadata(metadataKey, target, targetKey);\n}\n\n/**\n * Gets the metadata keys defined on the target object or its prototype chain.\n * @param target The target object on which the metadata is defined.\n * @returns An array of unique metadata keys.\n * @example\n *\n *     class C {\n *     }\n *\n *     // constructor\n *     result = Reflect.getMetadataKeys(C);\n *\n */\nexport function getMetadataKeys(target: Object): any[];\n\n/**\n * Gets the metadata keys defined on the target object or its prototype chain.\n * @param target The target object on which the metadata is defined.\n * @param targetKey The property key for the target.\n * @returns An array of unique metadata keys.\n * @example\n *\n *     class C {\n *         // property declarations are not part of ES6, though they are valid in TypeScript:\n *         // static staticProperty;\n *         // property;\n *\n *         static staticMethod(p) { }\n *         method(p) { }\n *     }\n *\n *     // property (on constructor)\n *     result = Reflect.getMetadataKeys(C, \"staticProperty\");\n *\n *     // property (on prototype)\n *     result = Reflect.getMetadataKeys(C.prototype, \"property\");\n *\n *     // method (on constructor)\n *     result = Reflect.getMetadataKeys(C, \"staticMethod\");\n *\n *     // method (on prototype)\n *     result = Reflect.getMetadataKeys(C.prototype, \"method\");\n *\n */\nexport function getMetadataKeys(target: Object, targetKey: string | symbol): any[];\n\n/**\n * Gets the metadata keys defined on the target object or its prototype chain.\n * @param target The target object on which the metadata is defined.\n * @param targetKey (Optional) The property key for the target.\n * @returns An array of unique metadata keys.\n * @example\n *\n *     class C {\n *         // property declarations are not part of ES6, though they are valid in TypeScript:\n *         // static staticProperty;\n *         // property;\n *\n *         constructor(p) { }\n *         static staticMethod(p) { }\n *         method(p) { }\n *     }\n *\n *     // constructor\n *     result = Reflect.getMetadataKeys(C);\n *\n *     // property (on constructor)\n *     result = Reflect.getMetadataKeys(C, \"staticProperty\");\n *\n *     // property (on prototype)\n *     result = Reflect.getMetadataKeys(C.prototype, \"property\");\n *\n *     // method (on constructor)\n *     result = Reflect.getMetadataKeys(C, \"staticMethod\");\n *\n *     // method (on prototype)\n *     result = Reflect.getMetadataKeys(C.prototype, \"method\");\n *\n */\nexport function getMetadataKeys(target: Object, targetKey?: string | symbol): any[] {\n  if (!isObject(target)) {\n    throw new TypeError();\n  }\n  else if (!isUndefined(targetKey)) {\n    targetKey = toPropertyKey(targetKey);\n  }\n\n  return ordinaryMetadataKeys(target, targetKey);\n}\n\n/**\n * Gets the unique metadata keys defined on the target object.\n * @param target The target object on which the metadata is defined.\n * @returns An array of unique metadata keys.\n * @example\n *\n *     class C {\n *     }\n *\n *     // constructor\n *     result = Reflect.getOwnMetadataKeys(C);\n *\n */\nexport function getOwnMetadataKeys(target: Object): any[];\n\n/**\n * Gets the unique metadata keys defined on the target object.\n * @param target The target object on which the metadata is defined.\n * @param targetKey The property key for the target.\n * @returns An array of unique metadata keys.\n * @example\n *\n *     class C {\n *         // property declarations are not part of ES6, though they are valid in TypeScript:\n *         // static staticProperty;\n *         // property;\n *\n *         static staticMethod(p) { }\n *         method(p) { }\n *     }\n *\n *     // property (on constructor)\n *     result = Reflect.getOwnMetadataKeys(C, \"staticProperty\");\n *\n *     // property (on prototype)\n *     result = Reflect.getOwnMetadataKeys(C.prototype, \"property\");\n *\n *     // method (on constructor)\n *     result = Reflect.getOwnMetadataKeys(C, \"staticMethod\");\n *\n *     // method (on prototype)\n *     result = Reflect.getOwnMetadataKeys(C.prototype, \"method\");\n *\n */\nexport function getOwnMetadataKeys(target: Object, targetKey: string | symbol): any[];\n\n/**\n * Gets the unique metadata keys defined on the target object.\n * @param target The target object on which the metadata is defined.\n * @param targetKey (Optional) The property key for the target.\n * @returns An array of unique metadata keys.\n * @example\n *\n *     class C {\n *         // property declarations are not part of ES6, though they are valid in TypeScript:\n *         // static staticProperty;\n *         // property;\n *\n *         constructor(p) { }\n *         static staticMethod(p) { }\n *         method(p) { }\n *     }\n *\n *     // constructor\n *     result = Reflect.getOwnMetadataKeys(C);\n *\n *     // property (on constructor)\n *     result = Reflect.getOwnMetadataKeys(C, \"staticProperty\");\n *\n *     // property (on prototype)\n *     result = Reflect.getOwnMetadataKeys(C.prototype, \"property\");\n *\n *     // method (on constructor)\n *     result = Reflect.getOwnMetadataKeys(C, \"staticMethod\");\n *\n *     // method (on prototype)\n *     result = Reflect.getOwnMetadataKeys(C.prototype, \"method\");\n *\n */\nexport function getOwnMetadataKeys(target: Object, targetKey?: string | symbol): any[] {\n  if (!isObject(target)) {\n    throw new TypeError();\n  }\n  else if (!isUndefined(targetKey)) {\n    targetKey = toPropertyKey(targetKey);\n  }\n\n  return ordinaryOwnMetadataKeys(target, targetKey);\n}\n\n/**\n * Deletes the metadata entry from the target object with the provided key.\n * @param metadataKey A key used to store and retrieve metadata.\n * @param target The target object on which the metadata is defined.\n * @returns `true` if the metadata entry was found and deleted; otherwise, false.\n * @example\n *\n *     class C {\n *     }\n *\n *     // constructor\n *     result = Reflect.deleteMetadata(\"custom:annotation\", C);\n *\n */\nexport function deleteMetadata(metadataKey: any, target: Object): boolean;\n\n/**\n * Deletes the metadata entry from the target object with the provided key.\n * @param metadataKey A key used to store and retrieve metadata.\n * @param target The target object on which the metadata is defined.\n * @param targetKey The property key for the target.\n * @returns `true` if the metadata entry was found and deleted; otherwise, false.\n * @example\n *\n *     class C {\n *         // property declarations are not part of ES6, though they are valid in TypeScript:\n *         // static staticProperty;\n *         // property;\n *\n *         static staticMethod(p) { }\n *         method(p) { }\n *     }\n *\n *     // property (on constructor)\n *     result = Reflect.deleteMetadata(\"custom:annotation\", C, \"staticProperty\");\n *\n *     // property (on prototype)\n *     result = Reflect.deleteMetadata(\"custom:annotation\", C.prototype, \"property\");\n *\n *     // method (on constructor)\n *     result = Reflect.deleteMetadata(\"custom:annotation\", C, \"staticMethod\");\n *\n *     // method (on prototype)\n *     result = Reflect.deleteMetadata(\"custom:annotation\", C.prototype, \"method\");\n *\n */\nexport function deleteMetadata(metadataKey: any, target: Object, targetKey: string | symbol): boolean;\n\n/**\n * Deletes the metadata entry from the target object with the provided key.\n * @param metadataKey A key used to store and retrieve metadata.\n * @param target The target object on which the metadata is defined.\n * @param targetKey (Optional) The property key for the target.\n * @returns `true` if the metadata entry was found and deleted; otherwise, false.\n * @example\n *\n *     class C {\n *         // property declarations are not part of ES6, though they are valid in TypeScript:\n *         // static staticProperty;\n *         // property;\n *\n *         constructor(p) { }\n *         static staticMethod(p) { }\n *         method(p) { }\n *     }\n *\n *     // constructor\n *     result = Reflect.deleteMetadata(\"custom:annotation\", C);\n *\n *     // property (on constructor)\n *     result = Reflect.deleteMetadata(\"custom:annotation\", C, \"staticProperty\");\n *\n *     // property (on prototype)\n *     result = Reflect.deleteMetadata(\"custom:annotation\", C.prototype, \"property\");\n *\n *     // method (on constructor)\n *     result = Reflect.deleteMetadata(\"custom:annotation\", C, \"staticMethod\");\n *\n *     // method (on prototype)\n *     result = Reflect.deleteMetadata(\"custom:annotation\", C.prototype, \"method\");\n *\n */\nexport function deleteMetadata(metadataKey: any, target: Object, targetKey?: string | symbol): boolean {\n  if (!isObject(target)) {\n    throw new TypeError();\n  }\n  else if (!isUndefined(targetKey)) {\n    targetKey = toPropertyKey(targetKey);\n  }\n\n  // https://github.com/jonathandturner/decorators/blob/master/specs/metadata.md#deletemetadata-metadatakey-p-\n  let metadataMap = getOrCreateMetadataMap(target, targetKey, /*create*/ false);\n  if (isUndefined(metadataMap)) {\n    return false;\n  }\n\n  if (!metadataMap.delete(metadataKey)) {\n    return false;\n  }\n\n  if (metadataMap.size > 0) {\n    return true;\n  }\n\n  let targetMetadata = __Metadata__.get(target);\n  targetMetadata.delete(targetKey);\n  if (targetMetadata.size > 0) {\n    return true;\n  }\n\n  __Metadata__.delete(target);\n  return true;\n}\n\nfunction DecorateConstructor(decorators: ClassDecorator[], target: Function): Function {\n  for (let i = decorators.length - 1; i >= 0; --i) {\n    let decorator = decorators[i];\n    let decorated = decorator(target);\n    if (!isUndefined(decorated)) {\n      if (!isConstructor(decorated)) {\n        throw new TypeError();\n      }\n      target = <Function>decorated;\n    }\n  }\n  return target;\n}\n\nfunction DecoratePropertyWithDescriptor(decorators: MethodDecorator[], target: Object, propertyKey: string | symbol, descriptor: PropertyDescriptor): PropertyDescriptor {\n  for (let i = decorators.length - 1; i >= 0; --i) {\n    let decorator = decorators[i];\n    let decorated = decorator(target, propertyKey, descriptor);\n    if (!isUndefined(decorated)) {\n      if (!isObject(decorated)) {\n        throw new TypeError();\n      }\n      descriptor = <PropertyDescriptor>decorated;\n    }\n  }\n  return descriptor;\n}\n\nfunction DecoratePropertyWithoutDescriptor(decorators: PropertyDecorator[], target: Object, propertyKey: string | symbol): void {\n  for (let i = decorators.length - 1; i >= 0; --i) {\n    let decorator = decorators[i];\n    decorator(target, propertyKey);\n  }\n}\n\n\n\n// https://github.com/jonathandturner/decorators/blob/master/specs/metadata.md#ordinaryhasmetadata--metadatakey-o-p-\nfunction OrdinaryHasMetadata(MetadataKey: any, O: Object, P: string | symbol): boolean {\n  let hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n  if (hasOwn) {\n    return true;\n  }\n\n  let parent = getProtoOfType(O);\n  if (parent !== null) {\n    return OrdinaryHasMetadata(MetadataKey, parent, P);\n  }\n\n  return false;\n}\n\n// https://github.com/jonathandturner/decorators/blob/master/specs/metadata.md#ordinaryhasownmetadata--metadatakey-o-p-\nfunction OrdinaryHasOwnMetadata(MetadataKey: any, O: Object, P: string | symbol): boolean {\n  let metadataMap = getOrCreateMetadataMap(O, P, /*create*/ false);\n  if (metadataMap === undefined) {\n    return false;\n  }\n\n  return Boolean(metadataMap.has(MetadataKey));\n}\n\n// https://github.com/jonathandturner/decorators/blob/master/specs/metadata.md#ordinarygetmetadata--metadatakey-o-p-\nfunction OrdinaryGetMetadata(MetadataKey: any, O: Object, P: string | symbol): any {\n  let hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n  if (hasOwn) {\n    return OrdinaryGetOwnMetadata(MetadataKey, O, P);\n  }\n\n  let parent = getProtoOfType(O);\n  if (parent !== null) {\n    return OrdinaryGetMetadata(MetadataKey, parent, P);\n  }\n\n  return undefined;\n}\n\n// https://github.com/jonathandturner/decorators/blob/master/specs/metadata.md#ordinarygetownmetadata--metadatakey-o-p-\nfunction OrdinaryGetOwnMetadata(MetadataKey: any, O: Object, P: string | symbol): any {\n  let metadataMap = getOrCreateMetadataMap(O, P, /*create*/ false);\n  if (metadataMap === undefined) {\n    return undefined;\n  }\n\n  return metadataMap.get(MetadataKey);\n}\n\n// https://github.com/jonathandturner/decorators/blob/master/specs/metadata.md#ordinarydefineownmetadata--metadatakey-metadatavalue-o-p-\nfunction OrdinaryDefineOwnMetadata(MetadataKey: any, MetadataValue: any, O: Object, P: string | symbol): void {\n  let metadataMap = getOrCreateMetadataMap(O, P, /*create*/ true);\n  metadataMap.set(MetadataKey, MetadataValue);\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/reflect-metadata.ts\n **/","const functionPrototype = Function.prototype;\n\nexport function getProtoOfType(O: any): any {\n  let proto = Object.getPrototypeOf(O);\n  if (typeof O !== \"function\" || O === functionPrototype) {\n    return proto;\n  }\n\n  // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\n  // Try to determine the superclass constructor. Compatible implementations\n  // must either set __proto__ on a subclass constructor to the superclass constructor,\n  // or ensure each class has a valid `constructor` property on its prototype that\n  // points back to the constructor.\n\n  // If this is not the same as Function.[[Prototype]], then this is definately inherited.\n  // This is the case when in ES6 or when using __proto__ in a compatible browser.\n  if (proto !== functionPrototype) {\n    return proto;\n  }\n\n  // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\n  let prototype = O.prototype;\n  let prototypeProto = Object.getPrototypeOf(prototype);\n  if (prototypeProto == null || prototypeProto === Object.prototype) {\n    return proto;\n  }\n\n  // if the constructor was not a function, then we cannot determine the heritage.\n  let constructor = prototypeProto.constructor;\n  if (typeof constructor !== \"function\") {\n    return proto;\n  }\n\n  // if we have some kind of self-reference, then we cannot determine the heritage.\n  if (constructor === O) {\n    return proto;\n  }\n\n  // we have a pretty good guess at the heritage.\n  return constructor;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/get-proto-of-type.ts\n **/","import {isSymbol} from \"./is-symbol\";\n// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-topropertykey\nexport function toPropertyKey(value: any): string | symbol {\n  if (isSymbol(value)) {\n    return <symbol>value;\n  }\n  return String(value);\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/to-property-key.ts\n **/","// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-ecmascript-language-types-symbol-type\nexport function isSymbol(x: any): boolean {\n  return typeof x === \"symbol\";\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/is-symbol.ts\n **/","\n// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-isconstructor\nexport function isConstructor(x: any): boolean {\n  return typeof x === \"function\";\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/is-constructor.ts\n **/","// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-ecmascript-language-types-undefined-type\nexport function isUndefined(x: any): boolean {\n  return x === undefined;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/is-undefined.ts\n **/","\n// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-isarray\nexport function isArray(x: any): boolean {\n  return Array.isArray(x);\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/is-array.ts\n **/","\n// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object-type\nexport function isObject(x: any): boolean {\n  return typeof x === \"object\" ? x !== null : typeof x === \"function\";\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/is-object.ts\n **/","import {createWeakMapPolyfill} from \"../shim/weakmap\";\nconst _WeakMap: any = typeof WeakMap === \"function\" ? WeakMap : createWeakMapPolyfill();\n// TODO: fix the typescript types\n// export const __Metadata__ = new _WeakMap<Object, Map<string | symbol, Map<any, any>>>();\nexport const __Metadata__ = new _WeakMap();\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/metadata.ts\n **/","import {createUniqueKey} from \"../helper/create-unique-key\";\nimport {getOrCreateWeakMapTable} from \"../helper/get-or-create-weakmap\";\n\n\nexport const rootKey = createUniqueKey();\n\n\nexport class WeakMap<T, V> {\n  private _key = createUniqueKey();\n  constructor() {}\n\n  has(target: T) {\n    var table = getOrCreateWeakMapTable(rootKey, target, /*create*/ false);\n    if (table) {\n      return this._key in table;\n    }\n    return false;\n  }\n\n  get(target: T) {\n    var table = getOrCreateWeakMapTable(rootKey, target, /*create*/ false);\n    if (table) {\n      return table[this._key];\n    }\n    return undefined;\n  }\n\n  set(target: T, value: V) {\n    var table = getOrCreateWeakMapTable(rootKey, target, /*create*/ true);\n    table[this._key] = value;\n    return this;\n  }\n\n  delete(target: T) {\n    var table = getOrCreateWeakMapTable(rootKey, target, /*create*/ false);\n    if (table && this._key in table) {\n        return delete table[this._key];\n    }\n    return false;\n  }\n\n  clear() {\n    // NOTE: not a real clear, just makes the previous data unreachable\n    this._key = createUniqueKey();\n  }\n\n}\n\n\nexport function createWeakMapPolyfill(): typeof WeakMap {\n  return WeakMap;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/shim/weakmap.ts\n **/","import {WEAKMAP_PREFIX} from \"./helper-constants\";\nimport {hasOwn} from \"./has-own\";\nimport {createUUID} from \"./create-uuid\";\n\nexport const keys: any = {};\n\n\nexport function createUniqueKey() {\n  var key: any;\n  do {\n    key = WEAKMAP_PREFIX + createUUID();\n  } while (hasOwn.call(keys, key));\n\n  keys[key] = true;\n\n  return key;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/create-unique-key.ts\n **/","\nexport const UUID_SIZE: number = 16;\n\nexport const WEAKMAP_PREFIX: string = \"@@WeakMap@@\";\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/helper-constants.ts\n **/","export const hasOwn: Function = Object.prototype.hasOwnProperty;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/has-own.ts\n **/","import {UUID_SIZE} from \"./helper-constants\";\nimport {genRandomBytes} from \"./gen-randombytes\";\n\nexport function createUUID() {\n  var data = genRandomBytes(UUID_SIZE);\n  // mark as random - RFC 4122 § 4.4\n  data[6] = data[6] & 0x4f | 0x40;\n  data[8] = data[8] & 0xbf | 0x80;\n\n  var result = \"\";\n\n  for (let offset = 0; offset < UUID_SIZE; ++offset) {\n    var byte = data[offset];\n    if (offset === 4 || offset === 6 || offset === 8) {\n      result += \"-\";\n    }\n    if (byte < 16) {\n      result += \"0\";\n    }\n    result += byte.toString(16).toLowerCase();\n  }\n\n  return result;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/create-uuid.ts\n **/","import * as crypto from \"crypto\";\nimport {BufferLike} from \"./interfaces\";\n\nexport function genRandomBytes(size: number): BufferLike {\n  return crypto.randomBytes(size);\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/gen-randombytes.ts\n **/","module.exports = require(\"crypto\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"crypto\"\n ** module id = 16\n ** module chunks = 0\n **/","import {hasOwn} from \"./has-own\";\n\nexport function getOrCreateWeakMapTable(rootKey: string, target: any, create?: any): any {\n  if (!hasOwn.call(target, rootKey)) {\n    if (!create) {\n      return undefined;\n    }\n\n    Object.defineProperty(target, rootKey, {\n      value: Object.create(null)\n    });\n  }\n  return target[rootKey];\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/get-or-create-weakmap.ts\n **/","import {getOrCreateMetadataMap} from \"./get-or-create-metadata-map\";\n// https://github.com/jonathandturner/decorators/blob/master/specs/metadata.md#ordinaryownmetadatakeys--o-p-\nexport function ordinaryOwnMetadataKeys(target: Object, targetKey: string | symbol): any[] {\n  let metadataMap = getOrCreateMetadataMap(target, targetKey, /*create*/ false);\n  let keys: any[] = [];\n  if (metadataMap) {\n    metadataMap.forEach((_, key) => keys.push(key));\n  }\n\n  return keys;\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/ordinary-own-metadata-keys.ts\n **/","import {__Metadata__} from \"./metadata\";\nimport {createMapPolyfill, Map as Map_} from \"../shim/map\";\n\nconst _Map: any = typeof Map === \"function\" ? Map : createMapPolyfill();\n// https://github.com/jonathandturner/decorators/blob/master/specs/metadata.md#getorcreatemetadatamap--o-p-create-\nexport function getOrCreateMetadataMap(target: Object, targetKey: string | symbol, create: boolean): Map<any, any> {\n  let targetMetadata = __Metadata__.get(target);\n  if (!targetMetadata) {\n    if (!create) {\n      return undefined;\n    }\n    // TODO: fix the typescript types\n    // targetMetadata = new _Map<string | symbol, _Map<any, any>>();\n    targetMetadata = new _Map();\n    __Metadata__.set(target, targetMetadata);\n  }\n\n  let keyMetadata = targetMetadata.get(targetKey);\n  if (!keyMetadata) {\n    if (!create) {\n      return undefined;\n    }\n    // TODO: fix the typescript types\n    // keyMetadata = new _Map<any, any>();\n    keyMetadata = new _Map();\n    targetMetadata.set(targetKey, keyMetadata);\n  }\n\n  return keyMetadata;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/get-or-create-metadata-map.ts\n **/","// naive Map shim\nexport const cacheSentinel: any = {};\n\nexport class Map<K, V> {\n  private _keys: Array<K> = [];\n  private _values: Array<V> = [];\n  private _cache: any = cacheSentinel;\n\n  static length: number = 0;\n  constructor() {}\n\n  get size(): number {\n    return this._keys.length;\n  }\n\n  has(key: K): boolean {\n    if (key === this._cache) {\n      return true;\n    }\n\n    if (this._find(key) >= 0) {\n      this._cache = key;\n      return true;\n    }\n\n    return false;\n  }\n\n  get(key: K): V | void {\n    let index = this._find(key);\n\n    if (index >= 0) {\n      this._cache = key;\n      return this._values[index];\n    }\n\n    return undefined;\n  }\n\n  set(key: K, value: V): this {\n    this.delete(key);\n    this._keys.push(key);\n    this._values.push(value);\n    this._cache = key;\n    return this;\n  }\n\n  delete(key: any): boolean {\n    let index = this._find(key);\n    if (index >= 0) {\n      this._keys.splice(index, 1);\n      this._values.splice(index, 1);\n      this._cache = cacheSentinel;\n      return true;\n    }\n    return false;\n  }\n\n  clear(): void {\n    this._keys.length = 0;\n    this._values.length = 0;\n    this._cache = cacheSentinel;\n  }\n\n  forEach(callback: (value: V, key: K, map: Map<K, V>) => void, thisArg?: any): void {\n    let size = this.size;\n    for (let i = 0; i < size; ++i) {\n      let key = this._keys[i];\n      let value = this._values[i];\n      this._cache = key;\n      callback.call(this, value, key, this);\n    }\n  }\n\n  private _find(key: K): number {\n    const keys = this._keys;\n    const size = keys.length;\n    for (let i = 0; i < size; ++i) {\n      if (keys[i] === key) {\n        return i;\n      }\n    }\n    return -1;\n  }\n}\n\nexport function createMapPolyfill(): typeof Map {\n  return Map;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/shim/map.ts\n **/","import {ordinaryOwnMetadataKeys} from \"./ordinary-own-metadata-keys\";\nimport {getProtoOfType} from \"./get-proto-of-type\";\nimport {createSetPolyfill} from \"../shim/set\";\n\nconst _Set: any = typeof Set === \"function\" ? Set : createSetPolyfill();\n// https://github.com/jonathandturner/decorators/blob/master/specs/metadata.md#ordinarymetadatakeys--o-p-\nexport function ordinaryMetadataKeys(O: Object, P: string | symbol): any[] {\n  let ownKeys = ordinaryOwnMetadataKeys(O, P);\n  let parent = getProtoOfType(O);\n  if (parent === null) {\n    return ownKeys;\n  }\n\n  let parentKeys = ordinaryMetadataKeys(parent, P);\n  if (parentKeys.length <= 0) {\n    return ownKeys;\n  }\n  if (ownKeys.length <= 0) {\n    return parentKeys;\n  }\n\n  let set = new _Set();\n  let keys: any[] = [];\n\n  for (let key of ownKeys) {\n    let hasKey = set.has(key);\n    if (!hasKey) {\n      set.add(key);\n      keys.push(key);\n    }\n  }\n\n  for (let key of parentKeys) {\n    let hasKey = set.has(key);\n    if (!hasKey) {\n      set.add(key);\n      keys.push(key);\n    }\n  }\n\n  return keys;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/ordinary-metadata-keys.ts\n **/","// naive Set shim\nimport {createMapPolyfill} from \"./map\";\n// var _Map: MapConstructor = (typeof Map !== \"undefined\") ? createMapPolyfill() : Map;\n\nexport var cacheSentinel: any = {};\n\nexport class Set<K, V> {\n  private _map = new Map();\n\n  static length: number = 0;\n  constructor() {}\n\n  get size() {\n    return this._map.size;\n  }\n\n  has(value: V): boolean {\n    return this._map.has(value);\n  }\n\n  add(value: V): this {\n    this._map.set(value, value);\n    return this;\n  }\n\n  delete(value: V): boolean {\n    return this._map.delete(value);\n  }\n\n  clear() {\n    this._map.clear();\n  }\n\n  forEach(callback: (value: V, key: K, map: Map<K, V>) => void, thisArg: any): void {\n    this._map.forEach(callback, thisArg);\n  }\n\n}\n\nexport function createSetPolyfill(): typeof Set {\n  return Set;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/shim/set.ts\n **/"],"sourceRoot":""}