{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///browser.min.js","webpack:///webpack/bootstrap 2bb3a6c8aea7b7419fc2","webpack:///./src/global/browser.ts","webpack:///./src/helper/get-or-create-metadata-map.ts","webpack:///./src/helper/get-proto-of-type.ts","webpack:///./src/helper/has-own.ts","webpack:///./src/helper/helper-constants.ts","webpack:///./src/helper/metadata.ts","webpack:///./src/helper/ordinary-own-metadata-keys.ts","webpack:///./src/reflect-metadata.ts","webpack:///./src/helper/create-unique-key.ts","webpack:///./src/helper/create-uuid.ts","webpack:///./src/helper/fill-randomBytes.ts","webpack:///./src/helper/gen-randombytes.browser.ts","webpack:///./src/helper/get-or-create-weakmap.ts","webpack:///./src/helper/is-array.ts","webpack:///./src/helper/is-constructor.ts","webpack:///./src/helper/is-object.ts","webpack:///./src/helper/is-symbol.ts","webpack:///./src/helper/is-undefined.ts","webpack:///./src/helper/ordinary-metadata-keys.ts","webpack:///./src/helper/to-property-key.ts","webpack:///./src/shim/map.ts","webpack:///./src/shim/set.ts","webpack:///./src/shim/weakmap.ts"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","__export","hasOwnProperty","Reflect","window","getOrCreateMetadataMap","target","targetKey","create","metadata_1","map_1","_Map","Map","createMapPolyfill","getProtoOfType","O","functionPrototype","Function","prototype","hasOwn","Object","UUID_SIZE","WEAKMAP_PREFIX","weakmap_1","_WeakMap","WeakMap","createWeakMapPolyfill","__Metadata__","ordinaryOwnMetadataKeys","get_or_create_metadata_map_1","decorate","decorators","targetDescriptor","metadata","metadataKey","metadataValue","metadata.decorator","defineMetadata","hasMetadata","hasOwnMetadata","getMetadata","getOwnMetadata","getMetadataKeys","getOwnMetadataKeys","deleteMetadata","DecorateConstructor","DecoratePropertyWithDescriptor","propertyKey","descriptor","DecoratePropertyWithoutDescriptor","OrdinaryHasMetadata","MetadataKey","P","OrdinaryHasOwnMetadata","OrdinaryGetMetadata","OrdinaryGetOwnMetadata","OrdinaryDefineOwnMetadata","MetadataValue","get_proto_of_type_1","to_property_key_1","is_constructor_1","is_undefined_1","is_array_1","is_object_1","ordinary_own_metadata_keys_1","ordinary_metadata_keys_1","createUniqueKey","helper_constants_1","has_own_1","create_uuid_1","keys","createUUID","gen_randombytes_1","fillRandomBytes","buffer","size","genRandomBytes","fill_randomBytes_1","getOrCreateWeakMapTable","rootKey","isArray","x","isConstructor","isObject","isSymbol","isUndefined","ordinaryMetadataKeys","set_1","_Set","Set","createSetPolyfill","toPropertyKey","value","is_symbol_1","cacheSentinel","Map.constructor","get","Map.size","enumerable","configurable","Map.has","Map.get","Map.set","Map.delete","Map.clear","Map.forEach","Map._find","Set.constructor","Set.size","Set.has","Set.add","Set.delete","Set.clear","Set.forEach","create_unique_key_1","get_or_create_weakmap_1","WeakMap.constructor","WeakMap.has","WeakMap.get","WeakMap.set","WeakMap.delete","WeakMap.clear"],"mappings":"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","file":"browser.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Reflect\"] = factory();\n\telse\n\t\troot[\"Reflect\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Reflect\"] = factory();\n\telse\n\t\troot[\"Reflect\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tfunction __export(m) {\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t}\n\tvar Reflect = __webpack_require__(7);\n\t__export(__webpack_require__(7));\n\twindow.Reflect = Reflect;\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar metadata_1 = __webpack_require__(5);\n\tvar map_1 = __webpack_require__(20);\n\tvar _Map = typeof Map === \"function\" ? Map : map_1.createMapPolyfill();\n\t// https://github.com/jonathandturner/decorators/blob/master/specs/metadata.md#getorcreatemetadatamap--o-p-create-\n\tfunction getOrCreateMetadataMap(target, targetKey, create) {\n\t    var targetMetadata = metadata_1.__Metadata__.get(target);\n\t    if (!targetMetadata) {\n\t        if (!create) {\n\t            return undefined;\n\t        }\n\t        // TODO: fix the typescript types\n\t        // targetMetadata = new _Map<string | symbol, _Map<any, any>>();\n\t        targetMetadata = new _Map();\n\t        metadata_1.__Metadata__.set(target, targetMetadata);\n\t    }\n\t    var keyMetadata = targetMetadata.get(targetKey);\n\t    if (!keyMetadata) {\n\t        if (!create) {\n\t            return undefined;\n\t        }\n\t        // TODO: fix the typescript types\n\t        // keyMetadata = new _Map<any, any>();\n\t        keyMetadata = new _Map();\n\t        targetMetadata.set(targetKey, keyMetadata);\n\t    }\n\t    return keyMetadata;\n\t}\n\texports.getOrCreateMetadataMap = getOrCreateMetadataMap;\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tvar functionPrototype = Function.prototype;\n\tfunction getProtoOfType(O) {\n\t    var proto = Object.getPrototypeOf(O);\n\t    if (typeof O !== \"function\" || O === functionPrototype) {\n\t        return proto;\n\t    }\n\t    // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\n\t    // Try to determine the superclass constructor. Compatible implementations\n\t    // must either set __proto__ on a subclass constructor to the superclass constructor,\n\t    // or ensure each class has a valid `constructor` property on its prototype that\n\t    // points back to the constructor.\n\t    // If this is not the same as Function.[[Prototype]], then this is definately inherited.\n\t    // This is the case when in ES6 or when using __proto__ in a compatible browser.\n\t    if (proto !== functionPrototype) {\n\t        return proto;\n\t    }\n\t    // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\n\t    var prototype = O.prototype;\n\t    var prototypeProto = Object.getPrototypeOf(prototype);\n\t    if (prototypeProto == null || prototypeProto === Object.prototype) {\n\t        return proto;\n\t    }\n\t    // if the constructor was not a function, then we cannot determine the heritage.\n\t    var constructor = prototypeProto.constructor;\n\t    if (typeof constructor !== \"function\") {\n\t        return proto;\n\t    }\n\t    // if we have some kind of self-reference, then we cannot determine the heritage.\n\t    if (constructor === O) {\n\t        return proto;\n\t    }\n\t    // we have a pretty good guess at the heritage.\n\t    return constructor;\n\t}\n\texports.getProtoOfType = getProtoOfType;\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\texports.hasOwn = Object.prototype.hasOwnProperty;\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\texports.UUID_SIZE = 16;\n\texports.WEAKMAP_PREFIX = \"@@WeakMap@@\";\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar weakmap_1 = __webpack_require__(22);\n\tvar _WeakMap = typeof WeakMap === \"function\" ? WeakMap : weakmap_1.createWeakMapPolyfill();\n\t// TODO: fix the typescript types\n\t// export const __Metadata__ = new _WeakMap<Object, Map<string | symbol, Map<any, any>>>();\n\texports.__Metadata__ = new _WeakMap();\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar get_or_create_metadata_map_1 = __webpack_require__(1);\n\t// https://github.com/jonathandturner/decorators/blob/master/specs/metadata.md#ordinaryownmetadatakeys--o-p-\n\tfunction ordinaryOwnMetadataKeys(target, targetKey) {\n\t    var metadataMap = get_or_create_metadata_map_1.getOrCreateMetadataMap(target, targetKey, /*create*/ false);\n\t    var keys = [];\n\t    if (metadataMap) {\n\t        metadataMap.forEach(function (_, key) { return keys.push(key); });\n\t    }\n\t    return keys;\n\t}\n\texports.ordinaryOwnMetadataKeys = ordinaryOwnMetadataKeys;\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar get_proto_of_type_1 = __webpack_require__(2);\n\tvar to_property_key_1 = __webpack_require__(19);\n\tvar is_constructor_1 = __webpack_require__(14);\n\tvar is_undefined_1 = __webpack_require__(17);\n\tvar is_array_1 = __webpack_require__(13);\n\tvar is_object_1 = __webpack_require__(15);\n\tvar metadata_1 = __webpack_require__(5);\n\tvar ordinary_own_metadata_keys_1 = __webpack_require__(6);\n\tvar get_or_create_metadata_map_1 = __webpack_require__(1);\n\tvar ordinary_metadata_keys_1 = __webpack_require__(18);\n\t/**\n\t * Applies a set of decorators to a property of a target object.\n\t * @param decorators An array of decorators.\n\t * @param target The target object.\n\t * @param targetKey (Optional) The property key to decorate.\n\t * @param targetDescriptor (Optional) The property descriptor for the target key\n\t * @remarks Decorators are applied in reverse order.\n\t * @example\n\t *\n\t *     class C {\n\t *         // property declarations are not part of ES6, though they are valid in TypeScript:\n\t *         // static staticProperty;\n\t *         // property;\n\t *\n\t *         constructor(p) { }\n\t *         static staticMethod(p) { }\n\t *         method(p) { }\n\t *     }\n\t *\n\t *     // constructor\n\t *     C = Reflect.decorate(decoratorsArray, C);\n\t *\n\t *     // property (on constructor)\n\t *     Reflect.decorate(decoratorsArray, C, \"staticProperty\");\n\t *\n\t *     // property (on prototype)\n\t *     Reflect.decorate(decoratorsArray, C.prototype, \"property\");\n\t *\n\t *     // method (on constructor)\n\t *     Object.defineProperty(C, \"staticMethod\",\n\t *         Reflect.decorate(decoratorsArray, C, \"staticMethod\",\n\t *             Object.getOwnPropertyDescriptor(C, \"staticMethod\")));\n\t *\n\t *     // method (on prototype)\n\t *     Object.defineProperty(C.prototype, \"method\",\n\t *         Reflect.decorate(decoratorsArray, C.prototype, \"method\",\n\t *             Object.getOwnPropertyDescriptor(C.prototype, \"method\")));\n\t *\n\t */\n\tfunction decorate(decorators, target, targetKey, targetDescriptor) {\n\t    if (!is_undefined_1.isUndefined(targetDescriptor)) {\n\t        if (!is_array_1.isArray(decorators)) {\n\t            throw new TypeError();\n\t        }\n\t        else if (!is_object_1.isObject(target)) {\n\t            throw new TypeError();\n\t        }\n\t        else if (is_undefined_1.isUndefined(targetKey)) {\n\t            throw new TypeError();\n\t        }\n\t        else if (!is_object_1.isObject(targetDescriptor)) {\n\t            throw new TypeError();\n\t        }\n\t        targetKey = to_property_key_1.toPropertyKey(targetKey);\n\t        return DecoratePropertyWithDescriptor(decorators, target, targetKey, targetDescriptor);\n\t    }\n\t    else if (!is_undefined_1.isUndefined(targetKey)) {\n\t        if (!is_array_1.isArray(decorators)) {\n\t            throw new TypeError();\n\t        }\n\t        else if (!is_object_1.isObject(target)) {\n\t            throw new TypeError();\n\t        }\n\t        targetKey = to_property_key_1.toPropertyKey(targetKey);\n\t        return DecoratePropertyWithoutDescriptor(decorators, target, targetKey);\n\t    }\n\t    else {\n\t        if (!is_array_1.isArray(decorators)) {\n\t            throw new TypeError();\n\t        }\n\t        else if (!is_constructor_1.isConstructor(target)) {\n\t            throw new TypeError();\n\t        }\n\t        return DecorateConstructor(decorators, target);\n\t    }\n\t}\n\texports.decorate = decorate;\n\t/**\n\t * A default metadata decorator factory that can be used on a class, class member, or parameter.\n\t * @param metadataKey The key for the metadata entry.\n\t * @param metadataValue The value for the metadata entry.\n\t * @returns A decorator function.\n\t * @remarks\n\t * If `metadataKey` is already defined for the target and target key, the\n\t * metadataValue for that key will be overwritten.\n\t * @example\n\t *\n\t *     // constructor\n\t *     @Reflect.metadata(key, value)\n\t *     class C {\n\t *     }\n\t *\n\t *     // property (on constructor, TypeScript only)\n\t *     class C {\n\t *         @Reflect.metadata(key, value)\n\t *         static staticProperty;\n\t *     }\n\t *\n\t *     // property (on prototype, TypeScript only)\n\t *     class C {\n\t *         @Reflect.metadata(key, value)\n\t *         property;\n\t *     }\n\t *\n\t *     // method (on constructor)\n\t *     class C {\n\t *         @Reflect.metadata(key, value)\n\t *         static staticMethod() { }\n\t *     }\n\t *\n\t *     // method (on prototype)\n\t *     class C {\n\t *         @Reflect.metadata(key, value)\n\t *         method() { }\n\t *     }\n\t *\n\t */\n\tfunction metadata(metadataKey, metadataValue) {\n\t    function decorator(target, targetKey) {\n\t        if (!is_undefined_1.isUndefined(targetKey)) {\n\t            if (!is_object_1.isObject(target)) {\n\t                throw new TypeError();\n\t            }\n\t            targetKey = to_property_key_1.toPropertyKey(targetKey);\n\t            OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, targetKey);\n\t        }\n\t        else {\n\t            if (!is_constructor_1.isConstructor(target)) {\n\t                throw new TypeError();\n\t            }\n\t            OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, /*targetKey*/ undefined);\n\t        }\n\t    }\n\t    return decorator;\n\t}\n\texports.metadata = metadata;\n\t/**\n\t * Define a unique metadata entry on the target.\n\t * @param metadataKey A key used to store and retrieve metadata.\n\t * @param metadataValue A value that contains attached metadata.\n\t * @param target The target object on which to define metadata.\n\t * @param targetKey (Optional) The property key for the target.\n\t * @example\n\t *\n\t *     class C {\n\t *         // property declarations are not part of ES6, though they are valid in TypeScript:\n\t *         // static staticProperty;\n\t *         // property;\n\t *\n\t *         constructor(p) { }\n\t *         static staticMethod(p) { }\n\t *         method(p) { }\n\t *     }\n\t *\n\t *     // constructor\n\t *     Reflect.defineMetadata(\"custom:annotation\", options, C);\n\t *\n\t *     // property (on constructor)\n\t *     Reflect.defineMetadata(\"custom:annotation\", options, C, \"staticProperty\");\n\t *\n\t *     // property (on prototype)\n\t *     Reflect.defineMetadata(\"custom:annotation\", options, C.prototype, \"property\");\n\t *\n\t *     // method (on constructor)\n\t *     Reflect.defineMetadata(\"custom:annotation\", options, C, \"staticMethod\");\n\t *\n\t *     // method (on prototype)\n\t *     Reflect.defineMetadata(\"custom:annotation\", options, C.prototype, \"method\");\n\t *\n\t *     // decorator factory as metadata-producing annotation.\n\t *     function MyAnnotation(options): Decorator {\n\t *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\n\t *     }\n\t *\n\t */\n\tfunction defineMetadata(metadataKey, metadataValue, target, targetKey) {\n\t    if (!is_object_1.isObject(target)) {\n\t        throw new TypeError();\n\t    }\n\t    else if (!is_undefined_1.isUndefined(targetKey)) {\n\t        targetKey = to_property_key_1.toPropertyKey(targetKey);\n\t    }\n\t    return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, targetKey);\n\t}\n\texports.defineMetadata = defineMetadata;\n\t/**\n\t * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n\t * @param metadataKey A key used to store and retrieve metadata.\n\t * @param target The target object on which the metadata is defined.\n\t * @param targetKey (Optional) The property key for the target.\n\t * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n\t * @example\n\t *\n\t *     class C {\n\t *         // property declarations are not part of ES6, though they are valid in TypeScript:\n\t *         // static staticProperty;\n\t *         // property;\n\t *\n\t *         constructor(p) { }\n\t *         static staticMethod(p) { }\n\t *         method(p) { }\n\t *     }\n\t *\n\t *     // constructor\n\t *     result = Reflect.hasMetadata(\"custom:annotation\", C);\n\t *\n\t *     // property (on constructor)\n\t *     result = Reflect.hasMetadata(\"custom:annotation\", C, \"staticProperty\");\n\t *\n\t *     // property (on prototype)\n\t *     result = Reflect.hasMetadata(\"custom:annotation\", C.prototype, \"property\");\n\t *\n\t *     // method (on constructor)\n\t *     result = Reflect.hasMetadata(\"custom:annotation\", C, \"staticMethod\");\n\t *\n\t *     // method (on prototype)\n\t *     result = Reflect.hasMetadata(\"custom:annotation\", C.prototype, \"method\");\n\t *\n\t */\n\tfunction hasMetadata(metadataKey, target, targetKey) {\n\t    if (!is_object_1.isObject(target)) {\n\t        throw new TypeError();\n\t    }\n\t    else if (!is_undefined_1.isUndefined(targetKey)) {\n\t        targetKey = to_property_key_1.toPropertyKey(targetKey);\n\t    }\n\t    return OrdinaryHasMetadata(metadataKey, target, targetKey);\n\t}\n\texports.hasMetadata = hasMetadata;\n\t/**\n\t * Gets a value indicating whether the target object has the provided metadata key defined.\n\t * @param metadataKey A key used to store and retrieve metadata.\n\t * @param target The target object on which the metadata is defined.\n\t * @param targetKey (Optional) The property key for the target.\n\t * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\n\t * @example\n\t *\n\t *     class C {\n\t *         // property declarations are not part of ES6, though they are valid in TypeScript:\n\t *         // static staticProperty;\n\t *         // property;\n\t *\n\t *         constructor(p) { }\n\t *         static staticMethod(p) { }\n\t *         method(p) { }\n\t *     }\n\t *\n\t *     // constructor\n\t *     result = Reflect.hasOwnMetadata(\"custom:annotation\", C);\n\t *\n\t *     // property (on constructor)\n\t *     result = Reflect.hasOwnMetadata(\"custom:annotation\", C, \"staticProperty\");\n\t *\n\t *     // property (on prototype)\n\t *     result = Reflect.hasOwnMetadata(\"custom:annotation\", C.prototype, \"property\");\n\t *\n\t *     // method (on constructor)\n\t *     result = Reflect.hasOwnMetadata(\"custom:annotation\", C, \"staticMethod\");\n\t *\n\t *     // method (on prototype)\n\t *     result = Reflect.hasOwnMetadata(\"custom:annotation\", C.prototype, \"method\");\n\t *\n\t */\n\tfunction hasOwnMetadata(metadataKey, target, targetKey) {\n\t    if (!is_object_1.isObject(target)) {\n\t        throw new TypeError();\n\t    }\n\t    else if (!is_undefined_1.isUndefined(targetKey)) {\n\t        targetKey = to_property_key_1.toPropertyKey(targetKey);\n\t    }\n\t    return OrdinaryHasOwnMetadata(metadataKey, target, targetKey);\n\t}\n\texports.hasOwnMetadata = hasOwnMetadata;\n\t/**\n\t * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n\t * @param metadataKey A key used to store and retrieve metadata.\n\t * @param target The target object on which the metadata is defined.\n\t * @param targetKey (Optional) The property key for the target.\n\t * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n\t * @example\n\t *\n\t *     class C {\n\t *         // property declarations are not part of ES6, though they are valid in TypeScript:\n\t *         // static staticProperty;\n\t *         // property;\n\t *\n\t *         constructor(p) { }\n\t *         static staticMethod(p) { }\n\t *         method(p) { }\n\t *     }\n\t *\n\t *     // constructor\n\t *     result = Reflect.getMetadata(\"custom:annotation\", C);\n\t *\n\t *     // property (on constructor)\n\t *     result = Reflect.getMetadata(\"custom:annotation\", C, \"staticProperty\");\n\t *\n\t *     // property (on prototype)\n\t *     result = Reflect.getMetadata(\"custom:annotation\", C.prototype, \"property\");\n\t *\n\t *     // method (on constructor)\n\t *     result = Reflect.getMetadata(\"custom:annotation\", C, \"staticMethod\");\n\t *\n\t *     // method (on prototype)\n\t *     result = Reflect.getMetadata(\"custom:annotation\", C.prototype, \"method\");\n\t *\n\t */\n\tfunction getMetadata(metadataKey, target, targetKey) {\n\t    if (!is_object_1.isObject(target)) {\n\t        throw new TypeError();\n\t    }\n\t    else if (!is_undefined_1.isUndefined(targetKey)) {\n\t        targetKey = to_property_key_1.toPropertyKey(targetKey);\n\t    }\n\t    return OrdinaryGetMetadata(metadataKey, target, targetKey);\n\t}\n\texports.getMetadata = getMetadata;\n\t/**\n\t * Gets the metadata value for the provided metadata key on the target object.\n\t * @param metadataKey A key used to store and retrieve metadata.\n\t * @param target The target object on which the metadata is defined.\n\t * @param targetKey (Optional) The property key for the target.\n\t * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n\t * @example\n\t *\n\t *     class C {\n\t *         // property declarations are not part of ES6, though they are valid in TypeScript:\n\t *         // static staticProperty;\n\t *         // property;\n\t *\n\t *         constructor(p) { }\n\t *         static staticMethod(p) { }\n\t *         method(p) { }\n\t *     }\n\t *\n\t *     // constructor\n\t *     result = Reflect.getOwnMetadata(\"custom:annotation\", C);\n\t *\n\t *     // property (on constructor)\n\t *     result = Reflect.getOwnMetadata(\"custom:annotation\", C, \"staticProperty\");\n\t *\n\t *     // property (on prototype)\n\t *     result = Reflect.getOwnMetadata(\"custom:annotation\", C.prototype, \"property\");\n\t *\n\t *     // method (on constructor)\n\t *     result = Reflect.getOwnMetadata(\"custom:annotation\", C, \"staticMethod\");\n\t *\n\t *     // method (on prototype)\n\t *     result = Reflect.getOwnMetadata(\"custom:annotation\", C.prototype, \"method\");\n\t *\n\t */\n\tfunction getOwnMetadata(metadataKey, target, targetKey) {\n\t    if (!is_object_1.isObject(target)) {\n\t        throw new TypeError();\n\t    }\n\t    else if (!is_undefined_1.isUndefined(targetKey)) {\n\t        targetKey = to_property_key_1.toPropertyKey(targetKey);\n\t    }\n\t    return OrdinaryGetOwnMetadata(metadataKey, target, targetKey);\n\t}\n\texports.getOwnMetadata = getOwnMetadata;\n\t/**\n\t * Gets the metadata keys defined on the target object or its prototype chain.\n\t * @param target The target object on which the metadata is defined.\n\t * @param targetKey (Optional) The property key for the target.\n\t * @returns An array of unique metadata keys.\n\t * @example\n\t *\n\t *     class C {\n\t *         // property declarations are not part of ES6, though they are valid in TypeScript:\n\t *         // static staticProperty;\n\t *         // property;\n\t *\n\t *         constructor(p) { }\n\t *         static staticMethod(p) { }\n\t *         method(p) { }\n\t *     }\n\t *\n\t *     // constructor\n\t *     result = Reflect.getMetadataKeys(C);\n\t *\n\t *     // property (on constructor)\n\t *     result = Reflect.getMetadataKeys(C, \"staticProperty\");\n\t *\n\t *     // property (on prototype)\n\t *     result = Reflect.getMetadataKeys(C.prototype, \"property\");\n\t *\n\t *     // method (on constructor)\n\t *     result = Reflect.getMetadataKeys(C, \"staticMethod\");\n\t *\n\t *     // method (on prototype)\n\t *     result = Reflect.getMetadataKeys(C.prototype, \"method\");\n\t *\n\t */\n\tfunction getMetadataKeys(target, targetKey) {\n\t    if (!is_object_1.isObject(target)) {\n\t        throw new TypeError();\n\t    }\n\t    else if (!is_undefined_1.isUndefined(targetKey)) {\n\t        targetKey = to_property_key_1.toPropertyKey(targetKey);\n\t    }\n\t    return ordinary_metadata_keys_1.ordinaryMetadataKeys(target, targetKey);\n\t}\n\texports.getMetadataKeys = getMetadataKeys;\n\t/**\n\t * Gets the unique metadata keys defined on the target object.\n\t * @param target The target object on which the metadata is defined.\n\t * @param targetKey (Optional) The property key for the target.\n\t * @returns An array of unique metadata keys.\n\t * @example\n\t *\n\t *     class C {\n\t *         // property declarations are not part of ES6, though they are valid in TypeScript:\n\t *         // static staticProperty;\n\t *         // property;\n\t *\n\t *         constructor(p) { }\n\t *         static staticMethod(p) { }\n\t *         method(p) { }\n\t *     }\n\t *\n\t *     // constructor\n\t *     result = Reflect.getOwnMetadataKeys(C);\n\t *\n\t *     // property (on constructor)\n\t *     result = Reflect.getOwnMetadataKeys(C, \"staticProperty\");\n\t *\n\t *     // property (on prototype)\n\t *     result = Reflect.getOwnMetadataKeys(C.prototype, \"property\");\n\t *\n\t *     // method (on constructor)\n\t *     result = Reflect.getOwnMetadataKeys(C, \"staticMethod\");\n\t *\n\t *     // method (on prototype)\n\t *     result = Reflect.getOwnMetadataKeys(C.prototype, \"method\");\n\t *\n\t */\n\tfunction getOwnMetadataKeys(target, targetKey) {\n\t    if (!is_object_1.isObject(target)) {\n\t        throw new TypeError();\n\t    }\n\t    else if (!is_undefined_1.isUndefined(targetKey)) {\n\t        targetKey = to_property_key_1.toPropertyKey(targetKey);\n\t    }\n\t    return ordinary_own_metadata_keys_1.ordinaryOwnMetadataKeys(target, targetKey);\n\t}\n\texports.getOwnMetadataKeys = getOwnMetadataKeys;\n\t/**\n\t * Deletes the metadata entry from the target object with the provided key.\n\t * @param metadataKey A key used to store and retrieve metadata.\n\t * @param target The target object on which the metadata is defined.\n\t * @param targetKey (Optional) The property key for the target.\n\t * @returns `true` if the metadata entry was found and deleted; otherwise, false.\n\t * @example\n\t *\n\t *     class C {\n\t *         // property declarations are not part of ES6, though they are valid in TypeScript:\n\t *         // static staticProperty;\n\t *         // property;\n\t *\n\t *         constructor(p) { }\n\t *         static staticMethod(p) { }\n\t *         method(p) { }\n\t *     }\n\t *\n\t *     // constructor\n\t *     result = Reflect.deleteMetadata(\"custom:annotation\", C);\n\t *\n\t *     // property (on constructor)\n\t *     result = Reflect.deleteMetadata(\"custom:annotation\", C, \"staticProperty\");\n\t *\n\t *     // property (on prototype)\n\t *     result = Reflect.deleteMetadata(\"custom:annotation\", C.prototype, \"property\");\n\t *\n\t *     // method (on constructor)\n\t *     result = Reflect.deleteMetadata(\"custom:annotation\", C, \"staticMethod\");\n\t *\n\t *     // method (on prototype)\n\t *     result = Reflect.deleteMetadata(\"custom:annotation\", C.prototype, \"method\");\n\t *\n\t */\n\tfunction deleteMetadata(metadataKey, target, targetKey) {\n\t    if (!is_object_1.isObject(target)) {\n\t        throw new TypeError();\n\t    }\n\t    else if (!is_undefined_1.isUndefined(targetKey)) {\n\t        targetKey = to_property_key_1.toPropertyKey(targetKey);\n\t    }\n\t    // https://github.com/jonathandturner/decorators/blob/master/specs/metadata.md#deletemetadata-metadatakey-p-\n\t    var metadataMap = get_or_create_metadata_map_1.getOrCreateMetadataMap(target, targetKey, /*create*/ false);\n\t    if (is_undefined_1.isUndefined(metadataMap)) {\n\t        return false;\n\t    }\n\t    if (!metadataMap.delete(metadataKey)) {\n\t        return false;\n\t    }\n\t    if (metadataMap.size > 0) {\n\t        return true;\n\t    }\n\t    var targetMetadata = metadata_1.__Metadata__.get(target);\n\t    targetMetadata.delete(targetKey);\n\t    if (targetMetadata.size > 0) {\n\t        return true;\n\t    }\n\t    metadata_1.__Metadata__.delete(target);\n\t    return true;\n\t}\n\texports.deleteMetadata = deleteMetadata;\n\tfunction DecorateConstructor(decorators, target) {\n\t    for (var i = decorators.length - 1; i >= 0; --i) {\n\t        var decorator = decorators[i];\n\t        var decorated = decorator(target);\n\t        if (!is_undefined_1.isUndefined(decorated)) {\n\t            if (!is_constructor_1.isConstructor(decorated)) {\n\t                throw new TypeError();\n\t            }\n\t            target = decorated;\n\t        }\n\t    }\n\t    return target;\n\t}\n\tfunction DecoratePropertyWithDescriptor(decorators, target, propertyKey, descriptor) {\n\t    for (var i = decorators.length - 1; i >= 0; --i) {\n\t        var decorator = decorators[i];\n\t        var decorated = decorator(target, propertyKey, descriptor);\n\t        if (!is_undefined_1.isUndefined(decorated)) {\n\t            if (!is_object_1.isObject(decorated)) {\n\t                throw new TypeError();\n\t            }\n\t            descriptor = decorated;\n\t        }\n\t    }\n\t    return descriptor;\n\t}\n\tfunction DecoratePropertyWithoutDescriptor(decorators, target, propertyKey) {\n\t    for (var i = decorators.length - 1; i >= 0; --i) {\n\t        var decorator = decorators[i];\n\t        decorator(target, propertyKey);\n\t    }\n\t}\n\t// https://github.com/jonathandturner/decorators/blob/master/specs/metadata.md#ordinaryhasmetadata--metadatakey-o-p-\n\tfunction OrdinaryHasMetadata(MetadataKey, O, P) {\n\t    var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n\t    if (hasOwn) {\n\t        return true;\n\t    }\n\t    var parent = get_proto_of_type_1.getProtoOfType(O);\n\t    if (parent !== null) {\n\t        return OrdinaryHasMetadata(MetadataKey, parent, P);\n\t    }\n\t    return false;\n\t}\n\t// https://github.com/jonathandturner/decorators/blob/master/specs/metadata.md#ordinaryhasownmetadata--metadatakey-o-p-\n\tfunction OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n\t    var metadataMap = get_or_create_metadata_map_1.getOrCreateMetadataMap(O, P, /*create*/ false);\n\t    if (metadataMap === undefined) {\n\t        return false;\n\t    }\n\t    return Boolean(metadataMap.has(MetadataKey));\n\t}\n\t// https://github.com/jonathandturner/decorators/blob/master/specs/metadata.md#ordinarygetmetadata--metadatakey-o-p-\n\tfunction OrdinaryGetMetadata(MetadataKey, O, P) {\n\t    var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n\t    if (hasOwn) {\n\t        return OrdinaryGetOwnMetadata(MetadataKey, O, P);\n\t    }\n\t    var parent = get_proto_of_type_1.getProtoOfType(O);\n\t    if (parent !== null) {\n\t        return OrdinaryGetMetadata(MetadataKey, parent, P);\n\t    }\n\t    return undefined;\n\t}\n\t// https://github.com/jonathandturner/decorators/blob/master/specs/metadata.md#ordinarygetownmetadata--metadatakey-o-p-\n\tfunction OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n\t    var metadataMap = get_or_create_metadata_map_1.getOrCreateMetadataMap(O, P, /*create*/ false);\n\t    if (metadataMap === undefined) {\n\t        return undefined;\n\t    }\n\t    return metadataMap.get(MetadataKey);\n\t}\n\t// https://github.com/jonathandturner/decorators/blob/master/specs/metadata.md#ordinarydefineownmetadata--metadatakey-metadatavalue-o-p-\n\tfunction OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n\t    var metadataMap = get_or_create_metadata_map_1.getOrCreateMetadataMap(O, P, /*create*/ true);\n\t    metadataMap.set(MetadataKey, MetadataValue);\n\t}\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar helper_constants_1 = __webpack_require__(4);\n\tvar has_own_1 = __webpack_require__(3);\n\tvar create_uuid_1 = __webpack_require__(9);\n\texports.keys = {};\n\tfunction createUniqueKey() {\n\t    var key;\n\t    do {\n\t        key = helper_constants_1.WEAKMAP_PREFIX + create_uuid_1.createUUID();\n\t    } while (has_own_1.hasOwn.call(exports.keys, key));\n\t    exports.keys[key] = true;\n\t    return key;\n\t}\n\texports.createUniqueKey = createUniqueKey;\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar helper_constants_1 = __webpack_require__(4);\n\tvar gen_randombytes_1 = __webpack_require__(11);\n\tfunction createUUID() {\n\t    var data = gen_randombytes_1.genRandomBytes(helper_constants_1.UUID_SIZE);\n\t    // mark as random - RFC 4122 § 4.4\n\t    data[6] = data[6] & 0x4f | 0x40;\n\t    data[8] = data[8] & 0xbf | 0x80;\n\t    var result = \"\";\n\t    for (var offset = 0; offset < helper_constants_1.UUID_SIZE; ++offset) {\n\t        var byte = data[offset];\n\t        if (offset === 4 || offset === 6 || offset === 8) {\n\t            result += \"-\";\n\t        }\n\t        if (byte < 16) {\n\t            result += \"0\";\n\t        }\n\t        result += byte.toString(16).toLowerCase();\n\t    }\n\t    return result;\n\t}\n\texports.createUUID = createUUID;\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\tfunction fillRandomBytes(buffer, size) {\n\t    for (var i = 0; i < size; ++i) {\n\t        buffer[i] = Math.random() * 255 | 0;\n\t    }\n\t    return buffer;\n\t}\n\texports.fillRandomBytes = fillRandomBytes;\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar fill_randomBytes_1 = __webpack_require__(10);\n\tfunction genRandomBytes(size) {\n\t    var data;\n\t    if (typeof Uint8Array === \"function\") {\n\t        data = new Uint8Array(size);\n\t        if (typeof window.crypto !== \"undefined\") {\n\t            window.crypto.getRandomValues(data);\n\t        }\n\t        else if (typeof window.msCrypto !== \"undefined\") {\n\t            window.msCrypto.getRandomValues(data);\n\t        }\n\t        else {\n\t            fill_randomBytes_1.fillRandomBytes(data, size);\n\t        }\n\t    }\n\t    else {\n\t        data = new Array(size);\n\t        fill_randomBytes_1.fillRandomBytes(data, size);\n\t    }\n\t    return data;\n\t}\n\texports.genRandomBytes = genRandomBytes;\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar has_own_1 = __webpack_require__(3);\n\tfunction getOrCreateWeakMapTable(rootKey, target, create) {\n\t    if (!has_own_1.hasOwn.call(target, rootKey)) {\n\t        if (!create) {\n\t            return undefined;\n\t        }\n\t        Object.defineProperty(target, rootKey, {\n\t            value: Object.create(null)\n\t        });\n\t    }\n\t    return target[rootKey];\n\t}\n\texports.getOrCreateWeakMapTable = getOrCreateWeakMapTable;\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-isarray\n\tfunction isArray(x) {\n\t    return Array.isArray(x);\n\t}\n\texports.isArray = isArray;\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-isconstructor\n\tfunction isConstructor(x) {\n\t    return typeof x === \"function\";\n\t}\n\texports.isConstructor = isConstructor;\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object-type\n\tfunction isObject(x) {\n\t    return typeof x === \"object\" ? x !== null : typeof x === \"function\";\n\t}\n\texports.isObject = isObject;\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports) {\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-ecmascript-language-types-symbol-type\n\tfunction isSymbol(x) {\n\t    return typeof x === \"symbol\";\n\t}\n\texports.isSymbol = isSymbol;\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports) {\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-ecmascript-language-types-undefined-type\n\tfunction isUndefined(x) {\n\t    return x === undefined;\n\t}\n\texports.isUndefined = isUndefined;\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar ordinary_own_metadata_keys_1 = __webpack_require__(6);\n\tvar get_proto_of_type_1 = __webpack_require__(2);\n\tvar set_1 = __webpack_require__(21);\n\tvar _Set = typeof Set === \"function\" ? Set : set_1.createSetPolyfill();\n\t// https://github.com/jonathandturner/decorators/blob/master/specs/metadata.md#ordinarymetadatakeys--o-p-\n\tfunction ordinaryMetadataKeys(O, P) {\n\t    var ownKeys = ordinary_own_metadata_keys_1.ordinaryOwnMetadataKeys(O, P);\n\t    var parent = get_proto_of_type_1.getProtoOfType(O);\n\t    if (parent === null) {\n\t        return ownKeys;\n\t    }\n\t    var parentKeys = ordinaryMetadataKeys(parent, P);\n\t    if (parentKeys.length <= 0) {\n\t        return ownKeys;\n\t    }\n\t    if (ownKeys.length <= 0) {\n\t        return parentKeys;\n\t    }\n\t    var set = new _Set();\n\t    var keys = [];\n\t    for (var _i = 0; _i < ownKeys.length; _i++) {\n\t        var key = ownKeys[_i];\n\t        var hasKey = set.has(key);\n\t        if (!hasKey) {\n\t            set.add(key);\n\t            keys.push(key);\n\t        }\n\t    }\n\t    for (var _a = 0; _a < parentKeys.length; _a++) {\n\t        var key = parentKeys[_a];\n\t        var hasKey = set.has(key);\n\t        if (!hasKey) {\n\t            set.add(key);\n\t            keys.push(key);\n\t        }\n\t    }\n\t    return keys;\n\t}\n\texports.ordinaryMetadataKeys = ordinaryMetadataKeys;\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar is_symbol_1 = __webpack_require__(16);\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-topropertykey\n\tfunction toPropertyKey(value) {\n\t    if (is_symbol_1.isSymbol(value)) {\n\t        return value;\n\t    }\n\t    return String(value);\n\t}\n\texports.toPropertyKey = toPropertyKey;\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports) {\n\n\t// naive Map shim\n\texports.cacheSentinel = {};\n\tvar Map = (function () {\n\t    function Map() {\n\t        this._keys = [];\n\t        this._values = [];\n\t        this._cache = exports.cacheSentinel;\n\t    }\n\t    Object.defineProperty(Map.prototype, \"size\", {\n\t        get: function () {\n\t            return this._keys.length;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Map.prototype.has = function (key) {\n\t        if (key === this._cache) {\n\t            return true;\n\t        }\n\t        if (this._find(key) >= 0) {\n\t            this._cache = key;\n\t            return true;\n\t        }\n\t        return false;\n\t    };\n\t    Map.prototype.get = function (key) {\n\t        var index = this._find(key);\n\t        if (index >= 0) {\n\t            this._cache = key;\n\t            return this._values[index];\n\t        }\n\t        return undefined;\n\t    };\n\t    Map.prototype.set = function (key, value) {\n\t        this.delete(key);\n\t        this._keys.push(key);\n\t        this._values.push(value);\n\t        this._cache = key;\n\t        return this;\n\t    };\n\t    Map.prototype.delete = function (key) {\n\t        var index = this._find(key);\n\t        if (index >= 0) {\n\t            this._keys.splice(index, 1);\n\t            this._values.splice(index, 1);\n\t            this._cache = exports.cacheSentinel;\n\t            return true;\n\t        }\n\t        return false;\n\t    };\n\t    Map.prototype.clear = function () {\n\t        this._keys.length = 0;\n\t        this._values.length = 0;\n\t        this._cache = exports.cacheSentinel;\n\t    };\n\t    Map.prototype.forEach = function (callback, thisArg) {\n\t        var size = this.size;\n\t        for (var i = 0; i < size; ++i) {\n\t            var key = this._keys[i];\n\t            var value = this._values[i];\n\t            this._cache = key;\n\t            callback.call(this, value, key, this);\n\t        }\n\t    };\n\t    Map.prototype._find = function (key) {\n\t        var keys = this._keys;\n\t        var size = keys.length;\n\t        for (var i = 0; i < size; ++i) {\n\t            if (keys[i] === key) {\n\t                return i;\n\t            }\n\t        }\n\t        return -1;\n\t    };\n\t    Map.length = 0;\n\t    return Map;\n\t})();\n\texports.Map = Map;\n\tfunction createMapPolyfill() {\n\t    return Map;\n\t}\n\texports.createMapPolyfill = createMapPolyfill;\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports) {\n\n\t// var _Map: MapConstructor = (typeof Map !== \"undefined\") ? createMapPolyfill() : Map;\n\texports.cacheSentinel = {};\n\tvar Set = (function () {\n\t    function Set() {\n\t        this._map = new Map();\n\t    }\n\t    Object.defineProperty(Set.prototype, \"size\", {\n\t        get: function () {\n\t            return this._map.size;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Set.prototype.has = function (value) {\n\t        return this._map.has(value);\n\t    };\n\t    Set.prototype.add = function (value) {\n\t        this._map.set(value, value);\n\t        return this;\n\t    };\n\t    Set.prototype.delete = function (value) {\n\t        return this._map.delete(value);\n\t    };\n\t    Set.prototype.clear = function () {\n\t        this._map.clear();\n\t    };\n\t    Set.prototype.forEach = function (callback, thisArg) {\n\t        this._map.forEach(callback, thisArg);\n\t    };\n\t    Set.length = 0;\n\t    return Set;\n\t})();\n\texports.Set = Set;\n\tfunction createSetPolyfill() {\n\t    return Set;\n\t}\n\texports.createSetPolyfill = createSetPolyfill;\n\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar create_unique_key_1 = __webpack_require__(8);\n\tvar get_or_create_weakmap_1 = __webpack_require__(12);\n\texports.rootKey = create_unique_key_1.createUniqueKey();\n\tvar WeakMap = (function () {\n\t    function WeakMap() {\n\t        this._key = create_unique_key_1.createUniqueKey();\n\t    }\n\t    WeakMap.prototype.has = function (target) {\n\t        var table = get_or_create_weakmap_1.getOrCreateWeakMapTable(exports.rootKey, target, /*create*/ false);\n\t        if (table) {\n\t            return this._key in table;\n\t        }\n\t        return false;\n\t    };\n\t    WeakMap.prototype.get = function (target) {\n\t        var table = get_or_create_weakmap_1.getOrCreateWeakMapTable(exports.rootKey, target, /*create*/ false);\n\t        if (table) {\n\t            return table[this._key];\n\t        }\n\t        return undefined;\n\t    };\n\t    WeakMap.prototype.set = function (target, value) {\n\t        var table = get_or_create_weakmap_1.getOrCreateWeakMapTable(exports.rootKey, target, /*create*/ true);\n\t        table[this._key] = value;\n\t        return this;\n\t    };\n\t    WeakMap.prototype.delete = function (target) {\n\t        var table = get_or_create_weakmap_1.getOrCreateWeakMapTable(exports.rootKey, target, /*create*/ false);\n\t        if (table && this._key in table) {\n\t            return delete table[this._key];\n\t        }\n\t        return false;\n\t    };\n\t    WeakMap.prototype.clear = function () {\n\t        // NOTE: not a real clear, just makes the previous data unreachable\n\t        this._key = create_unique_key_1.createUniqueKey();\n\t    };\n\t    return WeakMap;\n\t})();\n\texports.WeakMap = WeakMap;\n\tfunction createWeakMapPolyfill() {\n\t    return WeakMap;\n\t}\n\texports.createWeakMapPolyfill = createWeakMapPolyfill;\n\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** browser.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 2bb3a6c8aea7b7419fc2\n **/","import * as Reflect from \"../reflect-metadata\";\nexport * from \"../reflect-metadata\";\n(<any>window).Reflect = Reflect;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/global/browser.ts\n **/","import {__Metadata__} from \"./metadata\";\nimport {createMapPolyfill, Map as Map_} from \"../shim/map\";\n\nconst _Map: any = typeof Map === \"function\" ? Map : createMapPolyfill();\n// https://github.com/jonathandturner/decorators/blob/master/specs/metadata.md#getorcreatemetadatamap--o-p-create-\nexport function getOrCreateMetadataMap(target: Object, targetKey: string | symbol, create: boolean): Map<any, any> {\n  let targetMetadata = __Metadata__.get(target);\n  if (!targetMetadata) {\n    if (!create) {\n      return undefined;\n    }\n    // TODO: fix the typescript types\n    // targetMetadata = new _Map<string | symbol, _Map<any, any>>();\n    targetMetadata = new _Map();\n    __Metadata__.set(target, targetMetadata);\n  }\n\n  let keyMetadata = targetMetadata.get(targetKey);\n  if (!keyMetadata) {\n    if (!create) {\n      return undefined;\n    }\n    // TODO: fix the typescript types\n    // keyMetadata = new _Map<any, any>();\n    keyMetadata = new _Map();\n    targetMetadata.set(targetKey, keyMetadata);\n  }\n\n  return keyMetadata;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/get-or-create-metadata-map.ts\n **/","const functionPrototype = Function.prototype;\n\nexport function getProtoOfType(O: any): any {\n  let proto = Object.getPrototypeOf(O);\n  if (typeof O !== \"function\" || O === functionPrototype) {\n    return proto;\n  }\n\n  // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\n  // Try to determine the superclass constructor. Compatible implementations\n  // must either set __proto__ on a subclass constructor to the superclass constructor,\n  // or ensure each class has a valid `constructor` property on its prototype that\n  // points back to the constructor.\n\n  // If this is not the same as Function.[[Prototype]], then this is definately inherited.\n  // This is the case when in ES6 or when using __proto__ in a compatible browser.\n  if (proto !== functionPrototype) {\n    return proto;\n  }\n\n  // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\n  let prototype = O.prototype;\n  let prototypeProto = Object.getPrototypeOf(prototype);\n  if (prototypeProto == null || prototypeProto === Object.prototype) {\n    return proto;\n  }\n\n  // if the constructor was not a function, then we cannot determine the heritage.\n  let constructor = prototypeProto.constructor;\n  if (typeof constructor !== \"function\") {\n    return proto;\n  }\n\n  // if we have some kind of self-reference, then we cannot determine the heritage.\n  if (constructor === O) {\n    return proto;\n  }\n\n  // we have a pretty good guess at the heritage.\n  return constructor;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/get-proto-of-type.ts\n **/","export const hasOwn: Function = Object.prototype.hasOwnProperty;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/has-own.ts\n **/","\nexport const UUID_SIZE: number = 16;\n\nexport const WEAKMAP_PREFIX: string = \"@@WeakMap@@\";\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/helper-constants.ts\n **/","import {createWeakMapPolyfill} from \"../shim/weakmap\";\nconst _WeakMap: any = typeof WeakMap === \"function\" ? WeakMap : createWeakMapPolyfill();\n// TODO: fix the typescript types\n// export const __Metadata__ = new _WeakMap<Object, Map<string | symbol, Map<any, any>>>();\nexport const __Metadata__ = new _WeakMap();\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/metadata.ts\n **/","import {getOrCreateMetadataMap} from \"./get-or-create-metadata-map\";\n// https://github.com/jonathandturner/decorators/blob/master/specs/metadata.md#ordinaryownmetadatakeys--o-p-\nexport function ordinaryOwnMetadataKeys(target: Object, targetKey: string | symbol): any[] {\n  let metadataMap = getOrCreateMetadataMap(target, targetKey, /*create*/ false);\n  let keys: any[] = [];\n  if (metadataMap) {\n    metadataMap.forEach((_, key) => keys.push(key));\n  }\n\n  return keys;\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/ordinary-own-metadata-keys.ts\n **/","/*! *****************************************************************************\nCopyright (C) Microsoft. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\nimport {createUniqueKey} from \"./helper/create-unique-key\";\nimport {getProtoOfType} from \"./helper/get-proto-of-type\";\nimport {toPropertyKey} from \"./helper/to-property-key\";\nimport {isConstructor} from \"./helper/is-constructor\";\nimport {isUndefined} from \"./helper/is-undefined\";\nimport {isArray} from \"./helper/is-array\";\nimport {isObject} from \"./helper/is-object\";\nimport {__Metadata__} from \"./helper/metadata\";\nimport {ordinaryOwnMetadataKeys} from \"./helper/ordinary-own-metadata-keys\";\nimport {getOrCreateMetadataMap} from \"./helper/get-or-create-metadata-map\";\nimport {ordinaryMetadataKeys} from \"./helper/ordinary-metadata-keys\";\n\nimport {createSetPolyfill} from \"./shim/set\";\n\n\n// Load global or shim versions of Map, Set, and WeakMap\n// TODO: fix the typescript types\n\n/**\n * Applies a set of decorators to a target object.\n * @param decorators An array of decorators.\n * @param target The target object.\n * @returns The result of applying the provided decorators.\n * @remarks Decorators are applied in reverse order of their positions in the array.\n * @example\n *\n *     class C { }\n *\n *     // constructor\n *     C = Reflect.decorate(decoratorsArray, C);\n *\n */\nexport function decorate(decorators: ClassDecorator[], target: Function): Function;\n\n/**\n * Applies a set of decorators to a property of a target object.\n * @param decorators An array of decorators.\n * @param target The target object.\n * @param targetKey The property key to decorate.\n * @param descriptor A property descriptor\n * @remarks Decorators are applied in reverse order.\n * @example\n *\n *     class C {\n *         // property declarations are not part of ES6, though they are valid in TypeScript:\n *         // static staticProperty;\n *         // property;\n *\n *         static staticMethod() { }\n *         method() { }\n *     }\n *\n *     // property (on constructor)\n *     Reflect.decorate(decoratorsArray, C, \"staticProperty\");\n *\n *     // property (on prototype)\n *     Reflect.decorate(decoratorsArray, C.prototype, \"property\");\n *\n *     // method (on constructor)\n *     Object.defineProperty(C, \"staticMethod\",\n *         Reflect.decorate(decoratorsArray, C, \"staticMethod\",\n *             Object.getOwnPropertyDescriptor(C, \"staticMethod\")));\n *\n *     // method (on prototype)\n *     Object.defineProperty(C.prototype, \"method\",\n *         Reflect.decorate(decoratorsArray, C.prototype, \"method\",\n *             Object.getOwnPropertyDescriptor(C.prototype, \"method\")));\n *\n */\nexport function decorate(decorators: (PropertyDecorator | MethodDecorator)[], target: Object, targetKey: string | symbol, descriptor?: PropertyDescriptor): PropertyDescriptor;\n\n/**\n * Applies a set of decorators to a property of a target object.\n * @param decorators An array of decorators.\n * @param target The target object.\n * @param targetKey (Optional) The property key to decorate.\n * @param targetDescriptor (Optional) The property descriptor for the target key\n * @remarks Decorators are applied in reverse order.\n * @example\n *\n *     class C {\n *         // property declarations are not part of ES6, though they are valid in TypeScript:\n *         // static staticProperty;\n *         // property;\n *\n *         constructor(p) { }\n *         static staticMethod(p) { }\n *         method(p) { }\n *     }\n *\n *     // constructor\n *     C = Reflect.decorate(decoratorsArray, C);\n *\n *     // property (on constructor)\n *     Reflect.decorate(decoratorsArray, C, \"staticProperty\");\n *\n *     // property (on prototype)\n *     Reflect.decorate(decoratorsArray, C.prototype, \"property\");\n *\n *     // method (on constructor)\n *     Object.defineProperty(C, \"staticMethod\",\n *         Reflect.decorate(decoratorsArray, C, \"staticMethod\",\n *             Object.getOwnPropertyDescriptor(C, \"staticMethod\")));\n *\n *     // method (on prototype)\n *     Object.defineProperty(C.prototype, \"method\",\n *         Reflect.decorate(decoratorsArray, C.prototype, \"method\",\n *             Object.getOwnPropertyDescriptor(C.prototype, \"method\")));\n *\n */\nexport function decorate(decorators: (ClassDecorator | MethodDecorator | PropertyDecorator)[], target: Object, targetKey?: string | symbol, targetDescriptor?: PropertyDescriptor): any {\n  if (!isUndefined(targetDescriptor)) {\n    if (!isArray(decorators)) {\n      throw new TypeError();\n    }\n    else if (!isObject(target)) {\n      throw new TypeError();\n    }\n    else if (isUndefined(targetKey)) {\n      throw new TypeError();\n    }\n    else if (!isObject(targetDescriptor)) {\n      throw new TypeError();\n    }\n\n    targetKey = toPropertyKey(targetKey);\n    return DecoratePropertyWithDescriptor(<MethodDecorator[]>decorators, target, targetKey, targetDescriptor);\n  }\n  else if (!isUndefined(targetKey)) {\n    if (!isArray(decorators)) {\n      throw new TypeError();\n    }\n    else if (!isObject(target)) {\n      throw new TypeError();\n    }\n\n    targetKey = toPropertyKey(targetKey);\n    return DecoratePropertyWithoutDescriptor(<PropertyDecorator[]>decorators, target, targetKey);\n  }\n  else {\n    if (!isArray(decorators)) {\n      throw new TypeError();\n    }\n    else if (!isConstructor(target)) {\n      throw new TypeError();\n    }\n\n    return DecorateConstructor(<ClassDecorator[]>decorators, <Function>target);\n  }\n}\n\n/**\n * A default metadata decorator factory that can be used on a class, class member, or parameter.\n * @param metadataKey The key for the metadata entry.\n * @param metadataValue The value for the metadata entry.\n * @returns A decorator function.\n * @remarks\n * If `metadataKey` is already defined for the target and target key, the\n * metadataValue for that key will be overwritten.\n * @example\n *\n *     // constructor\n *     @Reflect.metadata(key, value)\n *     class C {\n *     }\n *\n *     // property (on constructor, TypeScript only)\n *     class C {\n *         @Reflect.metadata(key, value)\n *         static staticProperty;\n *     }\n *\n *     // property (on prototype, TypeScript only)\n *     class C {\n *         @Reflect.metadata(key, value)\n *         property;\n *     }\n *\n *     // method (on constructor)\n *     class C {\n *         @Reflect.metadata(key, value)\n *         static staticMethod() { }\n *     }\n *\n *     // method (on prototype)\n *     class C {\n *         @Reflect.metadata(key, value)\n *         method() { }\n *     }\n *\n */\nexport function metadata(metadataKey: any, metadataValue: any) {\n  function decorator(target: Function): void;\n  function decorator(target: Object, targetKey: string | symbol): void;\n  function decorator(target: Object, targetKey?: string | symbol): void {\n    if (!isUndefined(targetKey)) {\n      if (!isObject(target)) {\n        throw new TypeError();\n      }\n\n      targetKey = toPropertyKey(targetKey);\n      OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, targetKey);\n    }\n    else {\n      if (!isConstructor(target)) {\n        throw new TypeError();\n      }\n\n      OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, /*targetKey*/ undefined);\n    }\n  }\n\n  return decorator;\n}\n\n/**\n * Define a unique metadata entry on the target.\n * @param metadataKey A key used to store and retrieve metadata.\n * @param metadataValue A value that contains attached metadata.\n * @param target The target object on which to define metadata.\n * @example\n *\n *     class C {\n *     }\n *\n *     // constructor\n *     Reflect.defineMetadata(\"custom:annotation\", options, C);\n *\n *     // decorator factory as metadata-producing annotation.\n *     function MyAnnotation(options): ClassDecorator {\n *         return target => Reflect.defineMetadata(\"custom:annotation\", options, target);\n *     }\n *\n */\nexport function defineMetadata(metadataKey: any, metadataValue: any, target: Object): void;\n\n/**\n * Define a unique metadata entry on the target.\n * @param metadataKey A key used to store and retrieve metadata.\n * @param metadataValue A value that contains attached metadata.\n * @param target The target object on which to define metadata.\n * @param targetKey The property key for the target.\n * @example\n *\n *     class C {\n *         // property declarations are not part of ES6, though they are valid in TypeScript:\n *         // static staticProperty;\n *         // property;\n *\n *         static staticMethod(p) { }\n *         method(p) { }\n *     }\n *\n *     // property (on constructor)\n *     Reflect.defineMetadata(\"custom:annotation\", Number, C, \"staticProperty\");\n *\n *     // property (on prototype)\n *     Reflect.defineMetadata(\"custom:annotation\", Number, C.prototype, \"property\");\n *\n *     // method (on constructor)\n *     Reflect.defineMetadata(\"custom:annotation\", Number, C, \"staticMethod\");\n *\n *     // method (on prototype)\n *     Reflect.defineMetadata(\"custom:annotation\", Number, C.prototype, \"method\");\n *\n *     // decorator factory as metadata-producing annotation.\n *     function MyAnnotation(options): PropertyDecorator {\n *         return (target, key) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\n *     }\n *\n */\nexport function defineMetadata(metadataKey: any, metadataValue: any, target: Object, targetKey: string | symbol): void;\n\n/**\n * Define a unique metadata entry on the target.\n * @param metadataKey A key used to store and retrieve metadata.\n * @param metadataValue A value that contains attached metadata.\n * @param target The target object on which to define metadata.\n * @param targetKey (Optional) The property key for the target.\n * @example\n *\n *     class C {\n *         // property declarations are not part of ES6, though they are valid in TypeScript:\n *         // static staticProperty;\n *         // property;\n *\n *         constructor(p) { }\n *         static staticMethod(p) { }\n *         method(p) { }\n *     }\n *\n *     // constructor\n *     Reflect.defineMetadata(\"custom:annotation\", options, C);\n *\n *     // property (on constructor)\n *     Reflect.defineMetadata(\"custom:annotation\", options, C, \"staticProperty\");\n *\n *     // property (on prototype)\n *     Reflect.defineMetadata(\"custom:annotation\", options, C.prototype, \"property\");\n *\n *     // method (on constructor)\n *     Reflect.defineMetadata(\"custom:annotation\", options, C, \"staticMethod\");\n *\n *     // method (on prototype)\n *     Reflect.defineMetadata(\"custom:annotation\", options, C.prototype, \"method\");\n *\n *     // decorator factory as metadata-producing annotation.\n *     function MyAnnotation(options): Decorator {\n *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\n *     }\n *\n */\nexport function defineMetadata(metadataKey: any, metadataValue: any, target: Object, targetKey?: string | symbol): void {\n  if (!isObject(target)) {\n    throw new TypeError();\n  }\n  else if (!isUndefined(targetKey)) {\n    targetKey = toPropertyKey(targetKey);\n  }\n\n  return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, targetKey);\n}\n\n/**\n * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n * @param metadataKey A key used to store and retrieve metadata.\n * @param target The target object on which the metadata is defined.\n * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n * @example\n *\n *     class C {\n *     }\n *\n *     // constructor\n *     result = Reflect.hasMetadata(\"custom:annotation\", C);\n *\n */\nexport function hasMetadata(metadataKey: any, target: Object): boolean;\n\n/**\n * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n * @param metadataKey A key used to store and retrieve metadata.\n * @param target The target object on which the metadata is defined.\n * @param targetKey The property key for the target.\n * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n * @example\n *\n *     class C {\n *         // property declarations are not part of ES6, though they are valid in TypeScript:\n *         // static staticProperty;\n *         // property;\n *\n *         static staticMethod(p) { }\n *         method(p) { }\n *     }\n *\n *     // property (on constructor)\n *     result = Reflect.hasMetadata(\"custom:annotation\", C, \"staticProperty\");\n *\n *     // property (on prototype)\n *     result = Reflect.hasMetadata(\"custom:annotation\", C.prototype, \"property\");\n *\n *     // method (on constructor)\n *     result = Reflect.hasMetadata(\"custom:annotation\", C, \"staticMethod\");\n *\n *     // method (on prototype)\n *     result = Reflect.hasMetadata(\"custom:annotation\", C.prototype, \"method\");\n *\n */\nexport function hasMetadata(metadataKey: any, target: Object, targetKey: string | symbol): boolean;\n\n/**\n * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n * @param metadataKey A key used to store and retrieve metadata.\n * @param target The target object on which the metadata is defined.\n * @param targetKey (Optional) The property key for the target.\n * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n * @example\n *\n *     class C {\n *         // property declarations are not part of ES6, though they are valid in TypeScript:\n *         // static staticProperty;\n *         // property;\n *\n *         constructor(p) { }\n *         static staticMethod(p) { }\n *         method(p) { }\n *     }\n *\n *     // constructor\n *     result = Reflect.hasMetadata(\"custom:annotation\", C);\n *\n *     // property (on constructor)\n *     result = Reflect.hasMetadata(\"custom:annotation\", C, \"staticProperty\");\n *\n *     // property (on prototype)\n *     result = Reflect.hasMetadata(\"custom:annotation\", C.prototype, \"property\");\n *\n *     // method (on constructor)\n *     result = Reflect.hasMetadata(\"custom:annotation\", C, \"staticMethod\");\n *\n *     // method (on prototype)\n *     result = Reflect.hasMetadata(\"custom:annotation\", C.prototype, \"method\");\n *\n */\nexport function hasMetadata(metadataKey: any, target: Object, targetKey?: string | symbol): boolean {\n  if (!isObject(target)) {\n    throw new TypeError();\n  }\n  else if (!isUndefined(targetKey)) {\n    targetKey = toPropertyKey(targetKey);\n  }\n\n  return OrdinaryHasMetadata(metadataKey, target, targetKey);\n}\n\n/**\n * Gets a value indicating whether the target object has the provided metadata key defined.\n * @param metadataKey A key used to store and retrieve metadata.\n * @param target The target object on which the metadata is defined.\n * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\n * @example\n *\n *     class C {\n *     }\n *\n *     // constructor\n *     result = Reflect.hasOwnMetadata(\"custom:annotation\", C);\n *\n */\nexport function hasOwnMetadata(metadataKey: any, target: Object): boolean;\n\n/**\n * Gets a value indicating whether the target object has the provided metadata key defined.\n * @param metadataKey A key used to store and retrieve metadata.\n * @param target The target object on which the metadata is defined.\n * @param targetKey The property key for the target.\n * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\n * @example\n *\n *     class C {\n *         // property declarations are not part of ES6, though they are valid in TypeScript:\n *         // static staticProperty;\n *         // property;\n *\n *         static staticMethod(p) { }\n *         method(p) { }\n *     }\n *\n *     // property (on constructor)\n *     result = Reflect.hasOwnMetadata(\"custom:annotation\", C, \"staticProperty\");\n *\n *     // property (on prototype)\n *     result = Reflect.hasOwnMetadata(\"custom:annotation\", C.prototype, \"property\");\n *\n *     // method (on constructor)\n *     result = Reflect.hasOwnMetadata(\"custom:annotation\", C, \"staticMethod\");\n *\n *     // method (on prototype)\n *     result = Reflect.hasOwnMetadata(\"custom:annotation\", C.prototype, \"method\");\n *\n */\nexport function hasOwnMetadata(metadataKey: any, target: Object, targetKey: string | symbol): boolean;\n\n/**\n * Gets a value indicating whether the target object has the provided metadata key defined.\n * @param metadataKey A key used to store and retrieve metadata.\n * @param target The target object on which the metadata is defined.\n * @param targetKey (Optional) The property key for the target.\n * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\n * @example\n *\n *     class C {\n *         // property declarations are not part of ES6, though they are valid in TypeScript:\n *         // static staticProperty;\n *         // property;\n *\n *         constructor(p) { }\n *         static staticMethod(p) { }\n *         method(p) { }\n *     }\n *\n *     // constructor\n *     result = Reflect.hasOwnMetadata(\"custom:annotation\", C);\n *\n *     // property (on constructor)\n *     result = Reflect.hasOwnMetadata(\"custom:annotation\", C, \"staticProperty\");\n *\n *     // property (on prototype)\n *     result = Reflect.hasOwnMetadata(\"custom:annotation\", C.prototype, \"property\");\n *\n *     // method (on constructor)\n *     result = Reflect.hasOwnMetadata(\"custom:annotation\", C, \"staticMethod\");\n *\n *     // method (on prototype)\n *     result = Reflect.hasOwnMetadata(\"custom:annotation\", C.prototype, \"method\");\n *\n */\nexport function hasOwnMetadata(metadataKey: any, target: Object, targetKey?: string | symbol): boolean {\n  if (!isObject(target)) {\n    throw new TypeError();\n  }\n  else if (!isUndefined(targetKey)) {\n    targetKey = toPropertyKey(targetKey);\n  }\n\n  return OrdinaryHasOwnMetadata(metadataKey, target, targetKey);\n}\n\n/**\n * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n * @param metadataKey A key used to store and retrieve metadata.\n * @param target The target object on which the metadata is defined.\n * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n * @example\n *\n *     class C {\n *     }\n *\n *     // constructor\n *     result = Reflect.getMetadata(\"custom:annotation\", C);\n *\n */\nexport function getMetadata(metadataKey: any, target: Object): any;\n\n/**\n * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n * @param metadataKey A key used to store and retrieve metadata.\n * @param target The target object on which the metadata is defined.\n * @param targetKey The property key for the target.\n * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n * @example\n *\n *     class C {\n *         // property declarations are not part of ES6, though they are valid in TypeScript:\n *         // static staticProperty;\n *         // property;\n *\n *         static staticMethod(p) { }\n *         method(p) { }\n *     }\n *\n *     // property (on constructor)\n *     result = Reflect.getMetadata(\"custom:annotation\", C, \"staticProperty\");\n *\n *     // property (on prototype)\n *     result = Reflect.getMetadata(\"custom:annotation\", C.prototype, \"property\");\n *\n *     // method (on constructor)\n *     result = Reflect.getMetadata(\"custom:annotation\", C, \"staticMethod\");\n *\n *     // method (on prototype)\n *     result = Reflect.getMetadata(\"custom:annotation\", C.prototype, \"method\");\n *\n */\nexport function getMetadata(metadataKey: any, target: Object, targetKey: string | symbol): any;\n\n/**\n * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n * @param metadataKey A key used to store and retrieve metadata.\n * @param target The target object on which the metadata is defined.\n * @param targetKey (Optional) The property key for the target.\n * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n * @example\n *\n *     class C {\n *         // property declarations are not part of ES6, though they are valid in TypeScript:\n *         // static staticProperty;\n *         // property;\n *\n *         constructor(p) { }\n *         static staticMethod(p) { }\n *         method(p) { }\n *     }\n *\n *     // constructor\n *     result = Reflect.getMetadata(\"custom:annotation\", C);\n *\n *     // property (on constructor)\n *     result = Reflect.getMetadata(\"custom:annotation\", C, \"staticProperty\");\n *\n *     // property (on prototype)\n *     result = Reflect.getMetadata(\"custom:annotation\", C.prototype, \"property\");\n *\n *     // method (on constructor)\n *     result = Reflect.getMetadata(\"custom:annotation\", C, \"staticMethod\");\n *\n *     // method (on prototype)\n *     result = Reflect.getMetadata(\"custom:annotation\", C.prototype, \"method\");\n *\n */\nexport function getMetadata(metadataKey: any, target: Object, targetKey?: string | symbol): any {\n  if (!isObject(target)) {\n    throw new TypeError();\n  }\n  else if (!isUndefined(targetKey)) {\n    targetKey = toPropertyKey(targetKey);\n  }\n\n  return OrdinaryGetMetadata(metadataKey, target, targetKey);\n}\n\n/**\n * Gets the metadata value for the provided metadata key on the target object.\n * @param metadataKey A key used to store and retrieve metadata.\n * @param target The target object on which the metadata is defined.\n * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n * @example\n *\n *     class C {\n *     }\n *\n *     // constructor\n *     result = Reflect.getOwnMetadata(\"custom:annotation\", C);\n *\n */\nexport function getOwnMetadata(metadataKey: any, target: Object): any;\n\n/**\n * Gets the metadata value for the provided metadata key on the target object.\n * @param metadataKey A key used to store and retrieve metadata.\n * @param target The target object on which the metadata is defined.\n * @param targetKey The property key for the target.\n * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n * @example\n *\n *     class C {\n *         // property declarations are not part of ES6, though they are valid in TypeScript:\n *         // static staticProperty;\n *         // property;\n *\n *         static staticMethod(p) { }\n *         method(p) { }\n *     }\n *\n *     // property (on constructor)\n *     result = Reflect.getOwnMetadata(\"custom:annotation\", C, \"staticProperty\");\n *\n *     // property (on prototype)\n *     result = Reflect.getOwnMetadata(\"custom:annotation\", C.prototype, \"property\");\n *\n *     // method (on constructor)\n *     result = Reflect.getOwnMetadata(\"custom:annotation\", C, \"staticMethod\");\n *\n *     // method (on prototype)\n *     result = Reflect.getOwnMetadata(\"custom:annotation\", C.prototype, \"method\");\n *\n */\nexport function getOwnMetadata(metadataKey: any, target: Object, targetKey: string | symbol): any;\n\n/**\n * Gets the metadata value for the provided metadata key on the target object.\n * @param metadataKey A key used to store and retrieve metadata.\n * @param target The target object on which the metadata is defined.\n * @param targetKey (Optional) The property key for the target.\n * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n * @example\n *\n *     class C {\n *         // property declarations are not part of ES6, though they are valid in TypeScript:\n *         // static staticProperty;\n *         // property;\n *\n *         constructor(p) { }\n *         static staticMethod(p) { }\n *         method(p) { }\n *     }\n *\n *     // constructor\n *     result = Reflect.getOwnMetadata(\"custom:annotation\", C);\n *\n *     // property (on constructor)\n *     result = Reflect.getOwnMetadata(\"custom:annotation\", C, \"staticProperty\");\n *\n *     // property (on prototype)\n *     result = Reflect.getOwnMetadata(\"custom:annotation\", C.prototype, \"property\");\n *\n *     // method (on constructor)\n *     result = Reflect.getOwnMetadata(\"custom:annotation\", C, \"staticMethod\");\n *\n *     // method (on prototype)\n *     result = Reflect.getOwnMetadata(\"custom:annotation\", C.prototype, \"method\");\n *\n */\nexport function getOwnMetadata(metadataKey: any, target: Object, targetKey?: string | symbol): any {\n  if (!isObject(target)) {\n    throw new TypeError();\n  }\n  else if (!isUndefined(targetKey)) {\n    targetKey = toPropertyKey(targetKey);\n  }\n\n  return OrdinaryGetOwnMetadata(metadataKey, target, targetKey);\n}\n\n/**\n * Gets the metadata keys defined on the target object or its prototype chain.\n * @param target The target object on which the metadata is defined.\n * @returns An array of unique metadata keys.\n * @example\n *\n *     class C {\n *     }\n *\n *     // constructor\n *     result = Reflect.getMetadataKeys(C);\n *\n */\nexport function getMetadataKeys(target: Object): any[];\n\n/**\n * Gets the metadata keys defined on the target object or its prototype chain.\n * @param target The target object on which the metadata is defined.\n * @param targetKey The property key for the target.\n * @returns An array of unique metadata keys.\n * @example\n *\n *     class C {\n *         // property declarations are not part of ES6, though they are valid in TypeScript:\n *         // static staticProperty;\n *         // property;\n *\n *         static staticMethod(p) { }\n *         method(p) { }\n *     }\n *\n *     // property (on constructor)\n *     result = Reflect.getMetadataKeys(C, \"staticProperty\");\n *\n *     // property (on prototype)\n *     result = Reflect.getMetadataKeys(C.prototype, \"property\");\n *\n *     // method (on constructor)\n *     result = Reflect.getMetadataKeys(C, \"staticMethod\");\n *\n *     // method (on prototype)\n *     result = Reflect.getMetadataKeys(C.prototype, \"method\");\n *\n */\nexport function getMetadataKeys(target: Object, targetKey: string | symbol): any[];\n\n/**\n * Gets the metadata keys defined on the target object or its prototype chain.\n * @param target The target object on which the metadata is defined.\n * @param targetKey (Optional) The property key for the target.\n * @returns An array of unique metadata keys.\n * @example\n *\n *     class C {\n *         // property declarations are not part of ES6, though they are valid in TypeScript:\n *         // static staticProperty;\n *         // property;\n *\n *         constructor(p) { }\n *         static staticMethod(p) { }\n *         method(p) { }\n *     }\n *\n *     // constructor\n *     result = Reflect.getMetadataKeys(C);\n *\n *     // property (on constructor)\n *     result = Reflect.getMetadataKeys(C, \"staticProperty\");\n *\n *     // property (on prototype)\n *     result = Reflect.getMetadataKeys(C.prototype, \"property\");\n *\n *     // method (on constructor)\n *     result = Reflect.getMetadataKeys(C, \"staticMethod\");\n *\n *     // method (on prototype)\n *     result = Reflect.getMetadataKeys(C.prototype, \"method\");\n *\n */\nexport function getMetadataKeys(target: Object, targetKey?: string | symbol): any[] {\n  if (!isObject(target)) {\n    throw new TypeError();\n  }\n  else if (!isUndefined(targetKey)) {\n    targetKey = toPropertyKey(targetKey);\n  }\n\n  return ordinaryMetadataKeys(target, targetKey);\n}\n\n/**\n * Gets the unique metadata keys defined on the target object.\n * @param target The target object on which the metadata is defined.\n * @returns An array of unique metadata keys.\n * @example\n *\n *     class C {\n *     }\n *\n *     // constructor\n *     result = Reflect.getOwnMetadataKeys(C);\n *\n */\nexport function getOwnMetadataKeys(target: Object): any[];\n\n/**\n * Gets the unique metadata keys defined on the target object.\n * @param target The target object on which the metadata is defined.\n * @param targetKey The property key for the target.\n * @returns An array of unique metadata keys.\n * @example\n *\n *     class C {\n *         // property declarations are not part of ES6, though they are valid in TypeScript:\n *         // static staticProperty;\n *         // property;\n *\n *         static staticMethod(p) { }\n *         method(p) { }\n *     }\n *\n *     // property (on constructor)\n *     result = Reflect.getOwnMetadataKeys(C, \"staticProperty\");\n *\n *     // property (on prototype)\n *     result = Reflect.getOwnMetadataKeys(C.prototype, \"property\");\n *\n *     // method (on constructor)\n *     result = Reflect.getOwnMetadataKeys(C, \"staticMethod\");\n *\n *     // method (on prototype)\n *     result = Reflect.getOwnMetadataKeys(C.prototype, \"method\");\n *\n */\nexport function getOwnMetadataKeys(target: Object, targetKey: string | symbol): any[];\n\n/**\n * Gets the unique metadata keys defined on the target object.\n * @param target The target object on which the metadata is defined.\n * @param targetKey (Optional) The property key for the target.\n * @returns An array of unique metadata keys.\n * @example\n *\n *     class C {\n *         // property declarations are not part of ES6, though they are valid in TypeScript:\n *         // static staticProperty;\n *         // property;\n *\n *         constructor(p) { }\n *         static staticMethod(p) { }\n *         method(p) { }\n *     }\n *\n *     // constructor\n *     result = Reflect.getOwnMetadataKeys(C);\n *\n *     // property (on constructor)\n *     result = Reflect.getOwnMetadataKeys(C, \"staticProperty\");\n *\n *     // property (on prototype)\n *     result = Reflect.getOwnMetadataKeys(C.prototype, \"property\");\n *\n *     // method (on constructor)\n *     result = Reflect.getOwnMetadataKeys(C, \"staticMethod\");\n *\n *     // method (on prototype)\n *     result = Reflect.getOwnMetadataKeys(C.prototype, \"method\");\n *\n */\nexport function getOwnMetadataKeys(target: Object, targetKey?: string | symbol): any[] {\n  if (!isObject(target)) {\n    throw new TypeError();\n  }\n  else if (!isUndefined(targetKey)) {\n    targetKey = toPropertyKey(targetKey);\n  }\n\n  return ordinaryOwnMetadataKeys(target, targetKey);\n}\n\n/**\n * Deletes the metadata entry from the target object with the provided key.\n * @param metadataKey A key used to store and retrieve metadata.\n * @param target The target object on which the metadata is defined.\n * @returns `true` if the metadata entry was found and deleted; otherwise, false.\n * @example\n *\n *     class C {\n *     }\n *\n *     // constructor\n *     result = Reflect.deleteMetadata(\"custom:annotation\", C);\n *\n */\nexport function deleteMetadata(metadataKey: any, target: Object): boolean;\n\n/**\n * Deletes the metadata entry from the target object with the provided key.\n * @param metadataKey A key used to store and retrieve metadata.\n * @param target The target object on which the metadata is defined.\n * @param targetKey The property key for the target.\n * @returns `true` if the metadata entry was found and deleted; otherwise, false.\n * @example\n *\n *     class C {\n *         // property declarations are not part of ES6, though they are valid in TypeScript:\n *         // static staticProperty;\n *         // property;\n *\n *         static staticMethod(p) { }\n *         method(p) { }\n *     }\n *\n *     // property (on constructor)\n *     result = Reflect.deleteMetadata(\"custom:annotation\", C, \"staticProperty\");\n *\n *     // property (on prototype)\n *     result = Reflect.deleteMetadata(\"custom:annotation\", C.prototype, \"property\");\n *\n *     // method (on constructor)\n *     result = Reflect.deleteMetadata(\"custom:annotation\", C, \"staticMethod\");\n *\n *     // method (on prototype)\n *     result = Reflect.deleteMetadata(\"custom:annotation\", C.prototype, \"method\");\n *\n */\nexport function deleteMetadata(metadataKey: any, target: Object, targetKey: string | symbol): boolean;\n\n/**\n * Deletes the metadata entry from the target object with the provided key.\n * @param metadataKey A key used to store and retrieve metadata.\n * @param target The target object on which the metadata is defined.\n * @param targetKey (Optional) The property key for the target.\n * @returns `true` if the metadata entry was found and deleted; otherwise, false.\n * @example\n *\n *     class C {\n *         // property declarations are not part of ES6, though they are valid in TypeScript:\n *         // static staticProperty;\n *         // property;\n *\n *         constructor(p) { }\n *         static staticMethod(p) { }\n *         method(p) { }\n *     }\n *\n *     // constructor\n *     result = Reflect.deleteMetadata(\"custom:annotation\", C);\n *\n *     // property (on constructor)\n *     result = Reflect.deleteMetadata(\"custom:annotation\", C, \"staticProperty\");\n *\n *     // property (on prototype)\n *     result = Reflect.deleteMetadata(\"custom:annotation\", C.prototype, \"property\");\n *\n *     // method (on constructor)\n *     result = Reflect.deleteMetadata(\"custom:annotation\", C, \"staticMethod\");\n *\n *     // method (on prototype)\n *     result = Reflect.deleteMetadata(\"custom:annotation\", C.prototype, \"method\");\n *\n */\nexport function deleteMetadata(metadataKey: any, target: Object, targetKey?: string | symbol): boolean {\n  if (!isObject(target)) {\n    throw new TypeError();\n  }\n  else if (!isUndefined(targetKey)) {\n    targetKey = toPropertyKey(targetKey);\n  }\n\n  // https://github.com/jonathandturner/decorators/blob/master/specs/metadata.md#deletemetadata-metadatakey-p-\n  let metadataMap = getOrCreateMetadataMap(target, targetKey, /*create*/ false);\n  if (isUndefined(metadataMap)) {\n    return false;\n  }\n\n  if (!metadataMap.delete(metadataKey)) {\n    return false;\n  }\n\n  if (metadataMap.size > 0) {\n    return true;\n  }\n\n  let targetMetadata = __Metadata__.get(target);\n  targetMetadata.delete(targetKey);\n  if (targetMetadata.size > 0) {\n    return true;\n  }\n\n  __Metadata__.delete(target);\n  return true;\n}\n\nfunction DecorateConstructor(decorators: ClassDecorator[], target: Function): Function {\n  for (let i = decorators.length - 1; i >= 0; --i) {\n    let decorator = decorators[i];\n    let decorated = decorator(target);\n    if (!isUndefined(decorated)) {\n      if (!isConstructor(decorated)) {\n        throw new TypeError();\n      }\n      target = <Function>decorated;\n    }\n  }\n  return target;\n}\n\nfunction DecoratePropertyWithDescriptor(decorators: MethodDecorator[], target: Object, propertyKey: string | symbol, descriptor: PropertyDescriptor): PropertyDescriptor {\n  for (let i = decorators.length - 1; i >= 0; --i) {\n    let decorator = decorators[i];\n    let decorated = decorator(target, propertyKey, descriptor);\n    if (!isUndefined(decorated)) {\n      if (!isObject(decorated)) {\n        throw new TypeError();\n      }\n      descriptor = <PropertyDescriptor>decorated;\n    }\n  }\n  return descriptor;\n}\n\nfunction DecoratePropertyWithoutDescriptor(decorators: PropertyDecorator[], target: Object, propertyKey: string | symbol): void {\n  for (let i = decorators.length - 1; i >= 0; --i) {\n    let decorator = decorators[i];\n    decorator(target, propertyKey);\n  }\n}\n\n\n\n// https://github.com/jonathandturner/decorators/blob/master/specs/metadata.md#ordinaryhasmetadata--metadatakey-o-p-\nfunction OrdinaryHasMetadata(MetadataKey: any, O: Object, P: string | symbol): boolean {\n  let hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n  if (hasOwn) {\n    return true;\n  }\n\n  let parent = getProtoOfType(O);\n  if (parent !== null) {\n    return OrdinaryHasMetadata(MetadataKey, parent, P);\n  }\n\n  return false;\n}\n\n// https://github.com/jonathandturner/decorators/blob/master/specs/metadata.md#ordinaryhasownmetadata--metadatakey-o-p-\nfunction OrdinaryHasOwnMetadata(MetadataKey: any, O: Object, P: string | symbol): boolean {\n  let metadataMap = getOrCreateMetadataMap(O, P, /*create*/ false);\n  if (metadataMap === undefined) {\n    return false;\n  }\n\n  return Boolean(metadataMap.has(MetadataKey));\n}\n\n// https://github.com/jonathandturner/decorators/blob/master/specs/metadata.md#ordinarygetmetadata--metadatakey-o-p-\nfunction OrdinaryGetMetadata(MetadataKey: any, O: Object, P: string | symbol): any {\n  let hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n  if (hasOwn) {\n    return OrdinaryGetOwnMetadata(MetadataKey, O, P);\n  }\n\n  let parent = getProtoOfType(O);\n  if (parent !== null) {\n    return OrdinaryGetMetadata(MetadataKey, parent, P);\n  }\n\n  return undefined;\n}\n\n// https://github.com/jonathandturner/decorators/blob/master/specs/metadata.md#ordinarygetownmetadata--metadatakey-o-p-\nfunction OrdinaryGetOwnMetadata(MetadataKey: any, O: Object, P: string | symbol): any {\n  let metadataMap = getOrCreateMetadataMap(O, P, /*create*/ false);\n  if (metadataMap === undefined) {\n    return undefined;\n  }\n\n  return metadataMap.get(MetadataKey);\n}\n\n// https://github.com/jonathandturner/decorators/blob/master/specs/metadata.md#ordinarydefineownmetadata--metadatakey-metadatavalue-o-p-\nfunction OrdinaryDefineOwnMetadata(MetadataKey: any, MetadataValue: any, O: Object, P: string | symbol): void {\n  let metadataMap = getOrCreateMetadataMap(O, P, /*create*/ true);\n  metadataMap.set(MetadataKey, MetadataValue);\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/reflect-metadata.ts\n **/","import {WEAKMAP_PREFIX} from \"./helper-constants\";\nimport {hasOwn} from \"./has-own\";\nimport {createUUID} from \"./create-uuid\";\n\nexport const keys: any = {};\n\n\nexport function createUniqueKey() {\n  var key: any;\n  do {\n    key = WEAKMAP_PREFIX + createUUID();\n  } while (hasOwn.call(keys, key));\n\n  keys[key] = true;\n\n  return key;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/create-unique-key.ts\n **/","import {UUID_SIZE} from \"./helper-constants\";\nimport {genRandomBytes} from \"./gen-randombytes\";\n\nexport function createUUID() {\n  var data = genRandomBytes(UUID_SIZE);\n  // mark as random - RFC 4122 § 4.4\n  data[6] = data[6] & 0x4f | 0x40;\n  data[8] = data[8] & 0xbf | 0x80;\n\n  var result = \"\";\n\n  for (let offset = 0; offset < UUID_SIZE; ++offset) {\n    var byte = data[offset];\n    if (offset === 4 || offset === 6 || offset === 8) {\n      result += \"-\";\n    }\n    if (byte < 16) {\n      result += \"0\";\n    }\n    result += byte.toString(16).toLowerCase();\n  }\n\n  return result;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/create-uuid.ts\n **/","import {BufferLike} from \"./interfaces\";\n\nexport function fillRandomBytes(buffer: BufferLike, size: number): BufferLike {\n  for (let i = 0; i < size; ++i) {\n    buffer[i] = Math.random() * 255 | 0;\n  }\n  return buffer;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/fill-randomBytes.ts\n **/","import {BufferLike} from \"./interfaces\";\nimport {fillRandomBytes} from \"./fill-randomBytes\";\n\nexport function genRandomBytes(size: number): BufferLike {\n  var data: BufferLike;\n\n  if (typeof Uint8Array === \"function\") {\n    data = new Uint8Array(size);\n    if (typeof (<any>window).crypto !== \"undefined\") {\n      (<any>window).crypto.getRandomValues(<Uint8Array>data);\n    } else if (typeof (<any>window).msCrypto !== \"undefined\") {\n      (<any>window).msCrypto.getRandomValues(<Uint8Array>data);\n    } else {\n      fillRandomBytes(data, size);\n    }\n  } else {\n    data = new Array(size);\n    fillRandomBytes(data, size);\n  }\n\n  return data;\n }\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/gen-randombytes.browser.ts\n **/","import {hasOwn} from \"./has-own\";\n\nexport function getOrCreateWeakMapTable(rootKey: string, target: any, create?: any): any {\n  if (!hasOwn.call(target, rootKey)) {\n    if (!create) {\n      return undefined;\n    }\n\n    Object.defineProperty(target, rootKey, {\n      value: Object.create(null)\n    });\n  }\n  return target[rootKey];\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/get-or-create-weakmap.ts\n **/","\n// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-isarray\nexport function isArray(x: any): boolean {\n  return Array.isArray(x);\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/is-array.ts\n **/","\n// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-isconstructor\nexport function isConstructor(x: any): boolean {\n  return typeof x === \"function\";\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/is-constructor.ts\n **/","\n// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object-type\nexport function isObject(x: any): boolean {\n  return typeof x === \"object\" ? x !== null : typeof x === \"function\";\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/is-object.ts\n **/","// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-ecmascript-language-types-symbol-type\nexport function isSymbol(x: any): boolean {\n  return typeof x === \"symbol\";\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/is-symbol.ts\n **/","// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-ecmascript-language-types-undefined-type\nexport function isUndefined(x: any): boolean {\n  return x === undefined;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/is-undefined.ts\n **/","import {ordinaryOwnMetadataKeys} from \"./ordinary-own-metadata-keys\";\nimport {getProtoOfType} from \"./get-proto-of-type\";\nimport {createSetPolyfill} from \"../shim/set\";\n\nconst _Set: any = typeof Set === \"function\" ? Set : createSetPolyfill();\n// https://github.com/jonathandturner/decorators/blob/master/specs/metadata.md#ordinarymetadatakeys--o-p-\nexport function ordinaryMetadataKeys(O: Object, P: string | symbol): any[] {\n  let ownKeys = ordinaryOwnMetadataKeys(O, P);\n  let parent = getProtoOfType(O);\n  if (parent === null) {\n    return ownKeys;\n  }\n\n  let parentKeys = ordinaryMetadataKeys(parent, P);\n  if (parentKeys.length <= 0) {\n    return ownKeys;\n  }\n  if (ownKeys.length <= 0) {\n    return parentKeys;\n  }\n\n  let set = new _Set();\n  let keys: any[] = [];\n\n  for (let key of ownKeys) {\n    let hasKey = set.has(key);\n    if (!hasKey) {\n      set.add(key);\n      keys.push(key);\n    }\n  }\n\n  for (let key of parentKeys) {\n    let hasKey = set.has(key);\n    if (!hasKey) {\n      set.add(key);\n      keys.push(key);\n    }\n  }\n\n  return keys;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/ordinary-metadata-keys.ts\n **/","import {isSymbol} from \"./is-symbol\";\n// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-topropertykey\nexport function toPropertyKey(value: any): string | symbol {\n  if (isSymbol(value)) {\n    return <symbol>value;\n  }\n  return String(value);\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/to-property-key.ts\n **/","// naive Map shim\nexport const cacheSentinel: any = {};\n\nexport class Map<K, V> {\n  private _keys: Array<K> = [];\n  private _values: Array<V> = [];\n  private _cache: any = cacheSentinel;\n\n  static length: number = 0;\n  constructor() {}\n\n  get size(): number {\n    return this._keys.length;\n  }\n\n  has(key: K): boolean {\n    if (key === this._cache) {\n      return true;\n    }\n\n    if (this._find(key) >= 0) {\n      this._cache = key;\n      return true;\n    }\n\n    return false;\n  }\n\n  get(key: K): V | void {\n    let index = this._find(key);\n\n    if (index >= 0) {\n      this._cache = key;\n      return this._values[index];\n    }\n\n    return undefined;\n  }\n\n  set(key: K, value: V): this {\n    this.delete(key);\n    this._keys.push(key);\n    this._values.push(value);\n    this._cache = key;\n    return this;\n  }\n\n  delete(key: any): boolean {\n    let index = this._find(key);\n    if (index >= 0) {\n      this._keys.splice(index, 1);\n      this._values.splice(index, 1);\n      this._cache = cacheSentinel;\n      return true;\n    }\n    return false;\n  }\n\n  clear(): void {\n    this._keys.length = 0;\n    this._values.length = 0;\n    this._cache = cacheSentinel;\n  }\n\n  forEach(callback: (value: V, key: K, map: Map<K, V>) => void, thisArg?: any): void {\n    let size = this.size;\n    for (let i = 0; i < size; ++i) {\n      let key = this._keys[i];\n      let value = this._values[i];\n      this._cache = key;\n      callback.call(this, value, key, this);\n    }\n  }\n\n  private _find(key: K): number {\n    const keys = this._keys;\n    const size = keys.length;\n    for (let i = 0; i < size; ++i) {\n      if (keys[i] === key) {\n        return i;\n      }\n    }\n    return -1;\n  }\n}\n\nexport function createMapPolyfill(): typeof Map {\n  return Map;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/shim/map.ts\n **/","// naive Set shim\nimport {createMapPolyfill} from \"./map\";\n// var _Map: MapConstructor = (typeof Map !== \"undefined\") ? createMapPolyfill() : Map;\n\nexport var cacheSentinel: any = {};\n\nexport class Set<K, V> {\n  private _map = new Map();\n\n  static length: number = 0;\n  constructor() {}\n\n  get size() {\n    return this._map.size;\n  }\n\n  has(value: V): boolean {\n    return this._map.has(value);\n  }\n\n  add(value: V): this {\n    this._map.set(value, value);\n    return this;\n  }\n\n  delete(value: V): boolean {\n    return this._map.delete(value);\n  }\n\n  clear() {\n    this._map.clear();\n  }\n\n  forEach(callback: (value: V, key: K, map: Map<K, V>) => void, thisArg: any): void {\n    this._map.forEach(callback, thisArg);\n  }\n\n}\n\nexport function createSetPolyfill(): typeof Set {\n  return Set;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/shim/set.ts\n **/","import {createUniqueKey} from \"../helper/create-unique-key\";\nimport {getOrCreateWeakMapTable} from \"../helper/get-or-create-weakmap\";\n\n\nexport const rootKey = createUniqueKey();\n\n\nexport class WeakMap<T, V> {\n  private _key = createUniqueKey();\n  constructor() {}\n\n  has(target: T) {\n    var table = getOrCreateWeakMapTable(rootKey, target, /*create*/ false);\n    if (table) {\n      return this._key in table;\n    }\n    return false;\n  }\n\n  get(target: T) {\n    var table = getOrCreateWeakMapTable(rootKey, target, /*create*/ false);\n    if (table) {\n      return table[this._key];\n    }\n    return undefined;\n  }\n\n  set(target: T, value: V) {\n    var table = getOrCreateWeakMapTable(rootKey, target, /*create*/ true);\n    table[this._key] = value;\n    return this;\n  }\n\n  delete(target: T) {\n    var table = getOrCreateWeakMapTable(rootKey, target, /*create*/ false);\n    if (table && this._key in table) {\n        return delete table[this._key];\n    }\n    return false;\n  }\n\n  clear() {\n    // NOTE: not a real clear, just makes the previous data unreachable\n    this._key = createUniqueKey();\n  }\n\n}\n\n\nexport function createWeakMapPolyfill(): typeof WeakMap {\n  return WeakMap;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/shim/weakmap.ts\n **/"],"sourceRoot":""}